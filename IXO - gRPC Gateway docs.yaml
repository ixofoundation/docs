openapi: 3.0.0
x-stoplight:
  id: srcpbvhpljpfb
info:
  description: A REST interface for state queries.
  title: gRPC Gateway API
  version: 1.0.0
servers:
  - url: ''
    description: ''
paths:
  '/cosmos/auth/v1beta1/account_info/{address}':
    get:
      parameters:
        - description: address is the account address string.
          in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAccountInfoResponse is the Query/AccountInfo response type.

                  Since: cosmos-sdk 0.47
                properties:
                  info:
                    description: info is the account info which is represented by BaseAccount.
                    properties:
                      account_number:
                        format: uint64
                        type: string
                      address:
                        type: string
                      pub_key:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      sequence:
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.47'
      operationId: AccountInfo
      summary: AccountInfo queries account info which is common to all account types.
      x-stoplight:
        id: 6hbfym8s5710l
  /cosmos/auth/v1beta1/accounts:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAccountsResponse is the response type for the Query/Accounts RPC method.

                  Since: cosmos-sdk 0.43
                properties:
                  accounts:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    title: accounts are the existing accounts
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.43
      operationId: Accounts
      summary: Accounts returns all the existing accounts.
      x-stoplight:
        id: be6e2cvqx92gt
  '/cosmos/auth/v1beta1/accounts/{address}':
    get:
      parameters:
        - description: address defines the address to query for.
          in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAccountResponse is the response type for the Query/Account RPC method.
                properties:
                  account:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Account
      summary: Account returns account details based on address.
      x-stoplight:
        id: npdrm1vg4i41f
  '/cosmos/auth/v1beta1/address_by_id/{id}':
    get:
      parameters:
        - description: |-
            Deprecated, use account_id instead

            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            account_id is the account number of the address to be queried.

            Since: cosmos-sdk 0.47
          in: query
          name: account_id
          required: false
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'Since: cosmos-sdk 0.46.2'
                properties:
                  account_address:
                    type: string
                title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID
      summary: AccountAddressByID returns account address based on account number.
      x-stoplight:
        id: 013nz0m82yfch
  /cosmos/auth/v1beta1/bech32:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

                  Since: cosmos-sdk 0.46
                properties:
                  bech32_prefix:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix
      summary: Bech32Prefix queries bech32Prefix
      x-stoplight:
        id: pz2klk7ntoefa
  '/cosmos/auth/v1beta1/bech32/{address_bytes}':
    get:
      parameters:
        - in: path
          name: address_bytes
          required: true
          schema:
            format: byte
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  AddressBytesToStringResponse is the response type for AddressString rpc method.

                  Since: cosmos-sdk 0.46
                properties:
                  address_string:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString
      summary: AddressBytesToString converts Account Address bytes to string
      x-stoplight:
        id: kmwj4xjd5btfa
  '/cosmos/auth/v1beta1/bech32/{address_string}':
    get:
      parameters:
        - in: path
          name: address_string
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  AddressStringToBytesResponse is the response type for AddressBytes rpc method.

                  Since: cosmos-sdk 0.46
                properties:
                  address_bytes:
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes
      summary: AddressStringToBytes converts Address string to bytes
      x-stoplight:
        id: tbm9ufo7vjn6k
  /cosmos/auth/v1beta1/module_accounts:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

                  Since: cosmos-sdk 0.46
                properties:
                  accounts:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts
      summary: ModuleAccounts returns all the existing module accounts.
      x-stoplight:
        id: tx0do2voraac4
  '/cosmos/auth/v1beta1/module_accounts/{name}':
    get:
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method.
                properties:
                  account:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ModuleAccountByName
      summary: ModuleAccountByName returns the module account info by module name
      x-stoplight:
        id: q7xnn1uvld4td
  /cosmos/auth/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      max_memo_characters:
                        format: uint64
                        type: string
                      sig_verify_cost_ed25519:
                        format: uint64
                        type: string
                      sig_verify_cost_secp256k1:
                        format: uint64
                        type: string
                      tx_sig_limit:
                        format: uint64
                        type: string
                      tx_size_cost_per_byte:
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AuthParams
      summary: Params queries all parameters.
      x-stoplight:
        id: tplz9qmht64ch
  /cosmos/authz/v1beta1/grants:
    get:
      parameters:
        - in: query
          name: granter
          required: false
          schema:
            type: string
        - in: query
          name: grantee
          required: false
          schema:
            type: string
        - description: 'Optional, msg_type_url, when set, will query only grants matching given msg type.'
          in: query
          name: msg_type_url
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
                properties:
                  grants:
                    description: authorizations is a list of grants granted for grantee by granter.
                    items:
                      description: |-
                        Grant gives permissions to execute
                        the provide method with expiration time.
                      properties:
                        authorization:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          title: |-
                            time when the grant will expire and will be pruned. If null, then the grant
                            doesn't have a time expiration (other conditions  in `authorization`
                            may apply to invalidate the grant)
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Grants
      summary: 'Returns list of `Authorization`, granted to the grantee by the granter.'
      x-stoplight:
        id: qut4lgsq5wgj4
  '/cosmos/authz/v1beta1/grants/grantee/{grantee}':
    get:
      parameters:
        - in: path
          name: grantee
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
                properties:
                  grants:
                    description: grants is a list of grants granted to the grantee.
                    items:
                      properties:
                        authorization:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          type: string
                        grantee:
                          type: string
                        granter:
                          type: string
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      x-stoplight:
        id: mudli8qrc2t33
  '/cosmos/authz/v1beta1/grants/granter/{granter}':
    get:
      parameters:
        - in: path
          name: granter
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
                properties:
                  grants:
                    description: grants is a list of grants granted by the granter.
                    items:
                      properties:
                        authorization:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          type: string
                        grantee:
                          type: string
                        granter:
                          type: string
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants
      summary: 'GranterGrants returns list of `GrantAuthorization`, granted by granter.'
      x-stoplight:
        id: ndjvmja2vl44w
  '/cosmos/bank/v1beta1/balances/{address}':
    get:
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: |-
            resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.

            Since: cosmos-sdk 0.50
          in: query
          name: resolve_denom
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
                  method.
                properties:
                  balances:
                    description: balances is the balances of all the coins.
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      summary: AllBalances queries the balance of all coins for a single account.
      x-stoplight:
        id: x4e22yapeth7o
  '/cosmos/bank/v1beta1/balances/{address}/by_denom':
    get:
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBalanceResponse is the response type for the Query/Balance RPC method.
                properties:
                  balance:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Balance
      summary: Balance queries the balance of a single coin for a single account.
      x-stoplight:
        id: ctbk7vr8ux85l
  '/cosmos/bank/v1beta1/denom_owners/{denom}':
    get:
      parameters:
        - description: denom defines the coin denomination to query all account holders for.
          in: path
          name: denom
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

                  Since: cosmos-sdk 0.46
                properties:
                  denom_owners:
                    items:
                      description: |-
                        DenomOwner defines structure representing an account that owns or holds a
                        particular denominated token. It contains the account address and account
                        balance of the denominated token.

                        Since: cosmos-sdk 0.46
                      properties:
                        address:
                          description: address defines the address that owns a particular denomination.
                          type: string
                        balance:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      summary: |-
        DenomOwners queries for all account addresses that own a particular token
        denomination.
      x-stoplight:
        id: 5iaqklpmd367g
  /cosmos/bank/v1beta1/denom_owners_by_query:
    get:
      parameters:
        - description: denom defines the coin denomination to query all account holders for.
          in: query
          name: denom
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.

                  Since: cosmos-sdk 0.50.3
                properties:
                  denom_owners:
                    items:
                      description: |-
                        DenomOwner defines structure representing an account that owns or holds a
                        particular denominated token. It contains the account address and account
                        balance of the denominated token.

                        Since: cosmos-sdk 0.46
                      properties:
                        address:
                          description: address defines the address that owns a particular denomination.
                          type: string
                        balance:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.50.3'
      operationId: DenomOwnersByQuery
      summary: |-
        DenomOwnersByQuery queries for all account addresses that own a particular token
        denomination.
      x-stoplight:
        id: b2hh85wj2fr2d
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
                  method.
                properties:
                  metadatas:
                    description: metadata provides the client information for all the registered tokens.
                    items:
                      description: |-
                        Metadata represents a struct that describes
                        a basic token.
                      properties:
                        base:
                          description: base represents the base denom (should be the DenomUnit with exponent = 0).
                          type: string
                        denom_units:
                          items:
                            description: |-
                              DenomUnit represents a struct that describes a given
                              denomination unit of the basic token.
                            properties:
                              aliases:
                                items:
                                  type: string
                                title: aliases is a list of string aliases for the given denom
                                type: array
                              denom:
                                description: denom represents the string name of the given denom unit (e.g uatom).
                                type: string
                              exponent:
                                description: |-
                                  exponent represents power of 10 exponent that one must
                                  raise the base_denom to in order to equal the given DenomUnit's denom
                                  1 denom = 10^exponent base_denom
                                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                  exponent = 6, thus: 1 atom = 10^6 uatom).
                                format: int64
                                type: integer
                            type: object
                          title: denom_units represents the list of DenomUnit's for a given coin
                          type: array
                        description:
                          type: string
                        display:
                          description: |-
                            display indicates the suggested denom that should be
                            displayed in clients.
                          type: string
                        name:
                          description: 'Since: cosmos-sdk 0.43'
                          title: 'name defines the name of the token (eg: Cosmos Atom)'
                          type: string
                        symbol:
                          description: |-
                            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                            be the same as the display.

                            Since: cosmos-sdk 0.43
                          type: string
                        uri:
                          description: |-
                            URI to a document (on or off-chain) that contains additional information. Optional.

                            Since: cosmos-sdk 0.46
                          type: string
                        uri_hash:
                          description: |-
                            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                            the document didn't change. Optional.

                            Since: cosmos-sdk 0.46
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomsMetadata
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      x-stoplight:
        id: 88ruvw6mgltl9
  '/cosmos/bank/v1beta1/denoms_metadata/{denom}':
    get:
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: path
          name: denom
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
                  method.
                properties:
                  metadata:
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                    properties:
                      base:
                        description: base represents the base denom (should be the DenomUnit with exponent = 0).
                        type: string
                      denom_units:
                        items:
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                          properties:
                            aliases:
                              items:
                                type: string
                              title: aliases is a list of string aliases for the given denom
                              type: array
                            denom:
                              description: denom represents the string name of the given denom unit (e.g uatom).
                              type: string
                            exponent:
                              description: |-
                                exponent represents power of 10 exponent that one must
                                raise the base_denom to in order to equal the given DenomUnit's denom
                                1 denom = 10^exponent base_denom
                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                exponent = 6, thus: 1 atom = 10^6 uatom).
                              format: int64
                              type: integer
                          type: object
                        title: denom_units represents the list of DenomUnit's for a given coin
                        type: array
                      description:
                        type: string
                      display:
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                        type: string
                      name:
                        description: 'Since: cosmos-sdk 0.43'
                        title: 'name defines the name of the token (eg: Cosmos Atom)'
                        type: string
                      symbol:
                        description: |-
                          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                          be the same as the display.

                          Since: cosmos-sdk 0.43
                        type: string
                      uri:
                        description: |-
                          URI to a document (on or off-chain) that contains additional information. Optional.

                          Since: cosmos-sdk 0.46
                        type: string
                      uri_hash:
                        description: |-
                          URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                          the document didn't change. Optional.

                          Since: cosmos-sdk 0.46
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomMetadata
      summary: DenomMetadata queries the client metadata of a given coin denomination.
      x-stoplight:
        id: 69ap3onb848g2
  /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
    get:
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: query
          name: denom
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
                  method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
                properties:
                  metadata:
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                    properties:
                      base:
                        description: base represents the base denom (should be the DenomUnit with exponent = 0).
                        type: string
                      denom_units:
                        items:
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                          properties:
                            aliases:
                              items:
                                type: string
                              title: aliases is a list of string aliases for the given denom
                              type: array
                            denom:
                              description: denom represents the string name of the given denom unit (e.g uatom).
                              type: string
                            exponent:
                              description: |-
                                exponent represents power of 10 exponent that one must
                                raise the base_denom to in order to equal the given DenomUnit's denom
                                1 denom = 10^exponent base_denom
                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                exponent = 6, thus: 1 atom = 10^6 uatom).
                              format: int64
                              type: integer
                          type: object
                        title: denom_units represents the list of DenomUnit's for a given coin
                        type: array
                      description:
                        type: string
                      display:
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                        type: string
                      name:
                        description: 'Since: cosmos-sdk 0.43'
                        title: 'name defines the name of the token (eg: Cosmos Atom)'
                        type: string
                      symbol:
                        description: |-
                          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                          be the same as the display.

                          Since: cosmos-sdk 0.43
                        type: string
                      uri:
                        description: |-
                          URI to a document (on or off-chain) that contains additional information. Optional.

                          Since: cosmos-sdk 0.46
                        type: string
                      uri_hash:
                        description: |-
                          URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                          the document didn't change. Optional.

                          Since: cosmos-sdk 0.46
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomMetadataByQueryString
      summary: DenomMetadataByQueryString queries the client metadata of a given coin denomination.
      x-stoplight:
        id: 3xmj7o7basp21
  /cosmos/bank/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse defines the response type for querying x/bank parameters.
                properties:
                  params:
                    description: params provides the parameters of the bank module.
                    properties:
                      default_send_enabled:
                        type: boolean
                      send_enabled:
                        description: |-
                          Deprecated: Use of SendEnabled in params is deprecated.
                          For genesis, use the newly added send_enabled field in the genesis object.
                          Storage, lookup, and manipulation of this information is now in the keeper.

                          As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
                        items:
                          description: |-
                            SendEnabled maps coin denom to a send_enabled status (whether a denom is
                            sendable).
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: BankParams
      summary: Params queries the parameters of x/bank module.
      x-stoplight:
        id: ffn8icw0j8fzc
  /cosmos/bank/v1beta1/send_enabled:
    get:
      parameters:
        - description: denoms is the specific denoms you want look up. Leave empty to get all entries.
          explode: true
          in: query
          name: denoms
          required: false
          schema:
            items:
              type: string
            type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySendEnabledResponse defines the RPC response of a SendEnable query.

                  Since: cosmos-sdk 0.47
                properties:
                  pagination:
                    description: |-
                      pagination defines the pagination in the response. This field is only
                      populated if the denoms field in the request is empty.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  send_enabled:
                    items:
                      description: |-
                        SendEnabled maps coin denom to a send_enabled status (whether a denom is
                        sendable).
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        This query only returns denominations that have specific SendEnabled settings.
        Any denomination that does not have a specific setting will use the default
        params.default_send_enabled, and will not be returned by this query.

        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      summary: SendEnabled queries for SendEnabled entries.
      x-stoplight:
        id: m3w7nvf0l6v76
  '/cosmos/bank/v1beta1/spendable_balances/{address}':
    get:
      parameters:
        - description: address is the address to query spendable balances for.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySpendableBalancesResponse defines the gRPC response structure for querying
                  an account's spendable balances.

                  Since: cosmos-sdk 0.46
                properties:
                  balances:
                    description: balances is the spendable balances of all the coins.
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      summary: |-
        SpendableBalances queries the spendable balance of all coins for a single
        account.
      x-stoplight:
        id: e5gizfetzfpiu
  '/cosmos/bank/v1beta1/spendable_balances/{address}/by_denom':
    get:
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
                  querying an account's spendable balance for a specific denom.

                  Since: cosmos-sdk 0.47
                properties:
                  balance:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      summary: |-
        SpendableBalanceByDenom queries the spendable balance of a single denom for
        a single account.
      x-stoplight:
        id: lfi3vf8my5alx
  /cosmos/bank/v1beta1/supply:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: |-
                      pagination defines the pagination in the response.

                      Since: cosmos-sdk 0.43
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  supply:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: supply is the supply of the coins
                    type: array
                title: |-
                  QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
                  method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      summary: TotalSupply queries the total supply of all coins.
      x-stoplight:
        id: voft5pg668qa9
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      parameters:
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
                properties:
                  amount:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      summary: SupplyOf queries the supply of a single coin.
      x-stoplight:
        id: g5n2nhgkhu14w
  /cosmos/base/node/v1beta1/config:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: ConfigResponse defines the response structure for the Config gRPC query.
                properties:
                  halt_height:
                    format: uint64
                    type: string
                  minimum_gas_price:
                    type: string
                  pruning_interval:
                    type: string
                  pruning_keep_recent:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: Config
      summary: Config queries for the operator configuration.
      x-stoplight:
        id: 7qqvjj87qk9r4
  /cosmos/base/node/v1beta1/status:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: StateResponse defines the response structure for the status of a node.
                properties:
                  app_hash:
                    format: byte
                    type: string
                  earliest_store_height:
                    format: uint64
                    type: string
                  height:
                    format: uint64
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_hash:
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: Status
      summary: Status queries for the node status.
      x-stoplight:
        id: 9bnh546421me6
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      parameters:
        - in: query
          name: data
          required: false
          schema:
            format: byte
            type: string
        - in: query
          name: path
          required: false
          schema:
            type: string
        - in: query
          name: height
          required: false
          schema:
            format: int64
            type: string
        - in: query
          name: prove
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

                  Note: This type is a duplicate of the ResponseQuery proto type defined in
                  Tendermint.
                properties:
                  info:
                    type: string
                  code:
                    format: int64
                    type: integer
                  codespace:
                    type: string
                  height:
                    format: int64
                    type: string
                  index:
                    format: int64
                    type: string
                  key:
                    format: byte
                    type: string
                  log:
                    type: string
                  proof_ops:
                    description: |-
                      ProofOps is Merkle proof defined by the list of ProofOps.

                      Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
                    properties:
                      ops:
                        items:
                          description: |-
                            ProofOp defines an operation used for calculating Merkle root. The data could
                            be arbitrary format, providing necessary data for example neighbouring node
                            hash.

                            Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
                          properties:
                            data:
                              format: byte
                              type: string
                            key:
                              format: byte
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                  value:
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery
      summary: |-
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.
      x-stoplight:
        id: ccn7pcb79vd6u
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
                properties:
                  block:
                    properties:
                      data:
                        properties:
                          txs:
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available for use with Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence that a block was committed by a set of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates which BlockID the signature is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure of a block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                  type: string
                                                version:
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys available for use with Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys available for use with Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlockID the signature is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    title: 'Deprecated: please use `sdk_block` instead'
                    type: object
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  sdk_block:
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to bech32 string.
                    properties:
                      data:
                        properties:
                          txs:
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available for use with Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence that a block was committed by a set of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates which BlockID the signature is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure of a block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                  type: string
                                                version:
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys available for use with Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys available for use with Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a Tendermint block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            description: |-
                              proposer_address is the original block proposer address, formatted as a Bech32 string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                              for better UX.
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlockID the signature is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    title: 'Since: cosmos-sdk 0.47'
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetLatestBlock
      summary: GetLatestBlock returns the latest block.
      x-stoplight:
        id: 30hs7fi06kxp2
  '/cosmos/base/tendermint/v1beta1/blocks/{height}':
    get:
      parameters:
        - in: path
          name: height
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
                properties:
                  block:
                    properties:
                      data:
                        properties:
                          txs:
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available for use with Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence that a block was committed by a set of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates which BlockID the signature is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure of a block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                  type: string
                                                version:
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys available for use with Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys available for use with Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlockID the signature is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    title: 'Deprecated: please use `sdk_block` instead'
                    type: object
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  sdk_block:
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to bech32 string.
                    properties:
                      data:
                        properties:
                          txs:
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: |-
                                        Vote represents a prevote or precommit vote from validators for
                                        consensus.
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        extension:
                                          description: |-
                                            Vote extension provided by the application. Only valid for precommit
                                            messages.
                                          format: byte
                                          type: string
                                        extension_signature:
                                          description: |-
                                            Vote extension signature by the validator if they participated in
                                            consensus for the associated block.
                                            Only valid for precommit messages.
                                          format: byte
                                          type: string
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          description: |-
                                            Vote signature by the validator if they participated in consensus for the
                                            associated block.
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available for use with Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence that a block was committed by a set of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates which BlockID the signature is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure of a block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                  type: string
                                                version:
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys available for use with Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys available for use with Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a Tendermint block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            description: |-
                              proposer_address is the original block proposer address, formatted as a Bech32 string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                              for better UX.
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlockID the signature is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    title: 'Since: cosmos-sdk 0.47'
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetBlockByHeight
      summary: GetBlockByHeight queries block for given height.
      x-stoplight:
        id: 0nq6qpvekhl5f
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
                properties:
                  application_version:
                    description: VersionInfo is the type for the GetNodeInfoResponse message.
                    properties:
                      app_name:
                        type: string
                      build_deps:
                        items:
                          properties:
                            path:
                              title: module path
                              type: string
                            sum:
                              title: checksum
                              type: string
                            version:
                              title: module version
                              type: string
                          title: Module is the type for VersionInfo
                          type: object
                        type: array
                      build_tags:
                        type: string
                      cosmos_sdk_version:
                        title: 'Since: cosmos-sdk 0.43'
                        type: string
                      git_commit:
                        type: string
                      go_version:
                        type: string
                      name:
                        type: string
                      version:
                        type: string
                    type: object
                  default_node_info:
                    properties:
                      channels:
                        format: byte
                        type: string
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      moniker:
                        type: string
                      network:
                        type: string
                      other:
                        properties:
                          rpc_address:
                            type: string
                          tx_index:
                            type: string
                        type: object
                      protocol_version:
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                          p2p:
                            format: uint64
                            type: string
                        type: object
                      version:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetNodeInfo
      summary: GetNodeInfo queries the current node info.
      x-stoplight:
        id: 9gk3u3k4fs1u6
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetSyncingResponse is the response type for the Query/GetSyncing RPC method.
                properties:
                  syncing:
                    type: boolean
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetSyncing
      summary: GetSyncing queries node syncing.
      x-stoplight:
        id: ef97wm13iveah
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
                properties:
                  block_height:
                    format: int64
                    type: string
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  validators:
                    items:
                      description: Validator is the type for the validator-set.
                      properties:
                        address:
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetLatestValidatorSet
      summary: GetLatestValidatorSet queries latest validator-set.
      x-stoplight:
        id: ibnhx70pwkpsg
  '/cosmos/base/tendermint/v1beta1/validatorsets/{height}':
    get:
      parameters:
        - in: path
          name: height
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
                properties:
                  block_height:
                    format: int64
                    type: string
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  validators:
                    items:
                      description: Validator is the type for the validator-set.
                      properties:
                        address:
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetValidatorSetByHeight
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      x-stoplight:
        id: csr0jkcsdwfxe
  /cosmos/circuit/v1/accounts:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: AccountsResponse is the response type for the Query/Accounts RPC method.
                properties:
                  accounts:
                    items:
                      properties:
                        address:
                          type: string
                        permissions:
                          description: |-
                            Permissions are the permissions that an account has to trip
                            or reset the circuit breaker.
                          properties:
                            level:
                              default: LEVEL_NONE_UNSPECIFIED
                              description: level is the level of permissions granted to this account.
                              enum:
                                - LEVEL_NONE_UNSPECIFIED
                                - LEVEL_SOME_MSGS
                                - LEVEL_ALL_MSGS
                                - LEVEL_SUPER_ADMIN
                              type: string
                            limit_type_urls:
                              description: |-
                                limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                                URLs that the account can trip. It is an error to use limit_type_urls with
                                a level other than LEVEL_SOME_MSGS.
                              items:
                                type: string
                              type: array
                          type: object
                      title: GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CircuitAccounts
      summary: Account returns account permissions.
      x-stoplight:
        id: 2z1rs33zxm253
  '/cosmos/circuit/v1/accounts/{address}':
    get:
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: AccountResponse is the response type for the Query/Account RPC method.
                properties:
                  permission:
                    description: |-
                      Permissions are the permissions that an account has to trip
                      or reset the circuit breaker.
                    properties:
                      level:
                        default: LEVEL_NONE_UNSPECIFIED
                        description: level is the level of permissions granted to this account.
                        enum:
                          - LEVEL_NONE_UNSPECIFIED
                          - LEVEL_SOME_MSGS
                          - LEVEL_ALL_MSGS
                          - LEVEL_SUPER_ADMIN
                        type: string
                      limit_type_urls:
                        description: |-
                          limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                          URLs that the account can trip. It is an error to use limit_type_urls with
                          a level other than LEVEL_SOME_MSGS.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CircuitAccount
      summary: Account returns account permissions.
      x-stoplight:
        id: b6bn52otxovk9
  /cosmos/circuit/v1/disable_list:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: DisabledListResponse is the response type for the Query/DisabledList RPC method.
                properties:
                  disabled_list:
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DisabledList
      summary: DisabledList returns a list of disabled message urls
      x-stoplight:
        id: afm8k1jee5610
  /cosmos/consensus/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse defines the response type for querying x/consensus parameters.
                properties:
                  params:
                    description: |-
                      params are the tendermint consensus params stored in the consensus module.
                      Please note that `params.version` is not populated in this response, it is
                      tracked separately in the x/upgrade module.
                    properties:
                      abci:
                        description: ABCIParams configure functionality specific to the Application Blockchain Interface.
                        properties:
                          vote_extensions_enable_height:
                            description: |-
                              vote_extensions_enable_height configures the first height during which
                              vote extensions will be enabled. During this specified height, and for all
                              subsequent heights, precommit messages that do not contain valid extension data
                              will be considered invalid. Prior to this height, vote extensions will not
                              be used or accepted by validators on the network.

                              Once enabled, vote extensions will be created by the application in ExtendVote,
                              passed to the application for validation in VerifyVoteExtension and given
                              to the application to use when proposing a block during PrepareProposal.
                            format: int64
                            type: string
                        type: object
                      block:
                        description: BlockParams contains limits on the block size.
                        properties:
                          max_bytes:
                            format: int64
                            title: |-
                              Max block size, in bytes.
                              Note: must be greater than 0
                            type: string
                          max_gas:
                            format: int64
                            title: |-
                              Max gas per block.
                              Note: must be greater or equal to -1
                            type: string
                        type: object
                      evidence:
                        description: EvidenceParams determine how we handle evidence of malfeasance.
                        properties:
                          max_age_duration:
                            description: |-
                              Max age of evidence, in time.

                              It should correspond with an app's "unbonding period" or other similar
                              mechanism for handling [Nothing-At-Stake
                              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                            type: string
                          max_age_num_blocks:
                            description: |-
                              Max age of evidence, in blocks.

                              The basic formula for calculating this is: MaxAgeDuration / {average block
                              time}.
                            format: int64
                            type: string
                          max_bytes:
                            format: int64
                            title: |-
                              This sets the maximum size of total evidence in bytes that can be committed in a single block.
                              and should fall comfortably under the max block bytes.
                              Default is 1048576 or 1MB
                            type: string
                        type: object
                      validator:
                        description: |-
                          ValidatorParams restrict the public key types validators can use.
                          NOTE: uses ABCI pubkey naming, not Amino names.
                        properties:
                          pub_key_types:
                            items:
                              type: string
                            type: array
                        type: object
                      version:
                        description: VersionParams contains the ABCI application version.
                        properties:
                          app:
                            format: uint64
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConsensusParams
      summary: Params queries the parameters of x/consensus module.
      x-stoplight:
        id: 3ra4io6k7n3ll
  /cosmos/distribution/v1beta1/community_pool:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCommunityPoolResponse is the response type for the Query/CommunityPool
                  RPC method.
                properties:
                  pool:
                    description: pool defines community pool's coins.
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CommunityPool
      summary: CommunityPool queries the community pool coins.
      x-stoplight:
        id: 7mh9pmfjqxttb
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards':
    get:
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegationTotalRewardsResponse is the response type for the
                  Query/DelegationTotalRewards RPC method.
                properties:
                  rewards:
                    description: rewards defines all the rewards accrued by a delegator.
                    items:
                      description: |-
                        DelegationDelegatorReward represents the properties
                        of a delegator's delegation reward.
                      properties:
                        reward:
                          items:
                            description: |-
                              DecCoin defines a token with a denomination and a decimal amount.

                              NOTE: The amount field is an Dec which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        validator_address:
                          type: string
                      type: object
                    type: array
                  total:
                    description: total defines the sum of all the rewards.
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DelegationTotalRewards
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by each
        validator.
      x-stoplight:
        id: xv8zcqli7fhln
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}':
    get:
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          schema:
            type: string
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegationRewardsResponse is the response type for the
                  Query/DelegationRewards RPC method.
                properties:
                  rewards:
                    description: rewards defines the rewards accrued by a delegation.
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DelegationRewards
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      x-stoplight:
        id: k5gb702licrez
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators':
    get:
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegatorValidatorsResponse is the response type for the
                  Query/DelegatorValidators RPC method.
                properties:
                  validators:
                    description: validators defines the validators a delegator is delegating for.
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DelegatorValidators
      summary: DelegatorValidators queries the validators of a delegator.
      x-stoplight:
        id: 0rn9jkj4e9yir
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address':
    get:
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegatorWithdrawAddressResponse is the response type for the
                  Query/DelegatorWithdrawAddress RPC method.
                properties:
                  withdraw_address:
                    description: withdraw_address defines the delegator address to query for.
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DelegatorWithdrawAddress
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      x-stoplight:
        id: r0s79enanomyq
  /cosmos/distribution/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      base_proposer_reward:
                        description: |-
                          Deprecated: The base_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                        type: string
                      bonus_proposer_reward:
                        description: |-
                          Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                        type: string
                      community_tax:
                        type: string
                      withdraw_addr_enabled:
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DistributionParams
      summary: Params queries params of the distribution module.
      x-stoplight:
        id: 7c1qggun94ais
  '/cosmos/distribution/v1beta1/validators/{validator_address}':
    get:
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
                properties:
                  commission:
                    description: commission defines the commission the validator received.
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  operator_address:
                    description: operator_address defines the validator operator address.
                    type: string
                  self_bond_rewards:
                    description: self_bond_rewards defines the self delegations rewards.
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ValidatorDistributionInfo
      summary: ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      x-stoplight:
        id: 1aerlwu6nyib1
  '/cosmos/distribution/v1beta1/validators/{validator_address}/commission':
    get:
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  commission:
                    description: commission defines the commission the validator received.
                    properties:
                      commission:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                title: |-
                  QueryValidatorCommissionResponse is the response type for the
                  Query/ValidatorCommission RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ValidatorCommission
      summary: ValidatorCommission queries accumulated commission for a validator.
      x-stoplight:
        id: 1gcr1u2f2brdh
  '/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards':
    get:
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryValidatorOutstandingRewardsResponse is the response type for the
                  Query/ValidatorOutstandingRewards RPC method.
                properties:
                  rewards:
                    description: |-
                      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
                      for a validator inexpensive to track, allows simple sanity checks.
                    properties:
                      rewards:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ValidatorOutstandingRewards
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      x-stoplight:
        id: ox5g9nzko6bfk
  '/cosmos/distribution/v1beta1/validators/{validator_address}/slashes':
    get:
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          schema:
            type: string
        - description: starting_height defines the optional starting height to query the slashes.
          in: query
          name: starting_height
          required: false
          schema:
            format: uint64
            type: string
        - description: starting_height defines the optional ending height to query the slashes.
          in: query
          name: ending_height
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryValidatorSlashesResponse is the response type for the
                  Query/ValidatorSlashes RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  slashes:
                    description: slashes defines the slashes the validator received.
                    items:
                      description: |-
                        ValidatorSlashEvent represents a validator slash event.
                        Height is implicit within the store key.
                        This is needed to calculate appropriate amount of staking tokens
                        for delegations which are withdrawn after a slash has occurred.
                      properties:
                        fraction:
                          type: string
                        validator_period:
                          format: uint64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ValidatorSlashes
      summary: ValidatorSlashes queries slash events of a validator.
      x-stoplight:
        id: fjehrh2utcl1a
  /cosmos/evidence/v1beta1/evidence:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
                  method.
                properties:
                  evidence:
                    description: evidence returns all evidences.
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AllEvidence
      summary: AllEvidence queries all evidence.
      x-stoplight:
        id: yja19c8ddtxpl
  '/cosmos/evidence/v1beta1/evidence/{hash}':
    get:
      parameters:
        - description: |-
            hash defines the evidence hash of the requested evidence.

            Since: cosmos-sdk 0.47
          in: path
          name: hash
          required: true
          schema:
            type: string
        - description: |-
            evidence_hash defines the hash of the requested evidence.
            Deprecated: Use hash, a HEX encoded string, instead.
          in: query
          name: evidence_hash
          required: false
          schema:
            format: byte
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryEvidenceResponse is the response type for the Query/Evidence RPC method.
                properties:
                  evidence:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Evidence
      summary: Evidence queries evidence based on evidence hash.
      x-stoplight:
        id: tnx5fymxzp5f8
  '/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}':
    get:
      parameters:
        - description: granter is the address of the user granting an allowance of their funds.
          in: path
          name: granter
          required: true
          schema:
            type: string
        - description: grantee is the address of the user being granted an allowance of another user's funds.
          in: path
          name: grantee
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAllowanceResponse is the response type for the Query/Allowance RPC method.
                properties:
                  allowance:
                    description: allowance is a allowance granted for grantee by granter.
                    properties:
                      allowance:
                        description: 'allowance can be any of basic, periodic, allowed fee allowance.'
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      grantee:
                        description: grantee is the address of the user being granted an allowance of another user's funds.
                        type: string
                      granter:
                        description: granter is the address of the user granting an allowance of their funds.
                        type: string
                    title: Grant is stored in the KVStore to record a grant with full context
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Allowance
      summary: Allowance returns granted allwance to the grantee by the granter.
      x-stoplight:
        id: 71pjaxu69g8og
  '/cosmos/feegrant/v1beta1/allowances/{grantee}':
    get:
      parameters:
        - in: path
          name: grantee
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAllowancesResponse is the response type for the Query/Allowances RPC method.
                properties:
                  allowances:
                    description: allowances are allowance's granted for grantee by granter.
                    items:
                      properties:
                        allowance:
                          description: 'allowance can be any of basic, periodic, allowed fee allowance.'
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        grantee:
                          description: grantee is the address of the user being granted an allowance of another user's funds.
                          type: string
                        granter:
                          description: granter is the address of the user granting an allowance of their funds.
                          type: string
                      title: Grant is stored in the KVStore to record a grant with full context
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Allowances
      summary: Allowances returns all the grants for the given grantee address.
      x-stoplight:
        id: 0do6vbwgn192u
  '/cosmos/feegrant/v1beta1/issued/{granter}':
    get:
      parameters:
        - in: path
          name: granter
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

                  Since: cosmos-sdk 0.46
                properties:
                  allowances:
                    description: allowances that have been issued by the granter.
                    items:
                      properties:
                        allowance:
                          description: 'allowance can be any of basic, periodic, allowed fee allowance.'
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        grantee:
                          description: grantee is the address of the user being granted an allowance of another user's funds.
                          type: string
                        granter:
                          description: granter is the address of the user granting an allowance of their funds.
                          type: string
                      title: Grant is stored in the KVStore to record a grant with full context
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter
      summary: AllowancesByGranter returns all the grants given by an address
      x-stoplight:
        id: lao39ws9185sq
  /cosmos/gov/v1/constitution:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  constitution:
                    type: string
                title: QueryConstitutionResponse is the response type for the Query/Constitution RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Constitution
      summary: Constitution queries the chain's constitution.
      x-stoplight:
        id: uzw81r018k2po
  '/cosmos/gov/v1/params/{params_type}':
    get:
      parameters:
        - description: |-
            params_type defines which parameters to query for, can be one of "voting",
            "tallying" or "deposit".
          in: path
          name: params_type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  deposit_params:
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      deposit_params defines the parameters related to deposit.
                    properties:
                      max_deposit_period:
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                        type: string
                      min_deposit:
                        description: Minimum deposit for a proposal to enter voting period.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                  params:
                    description: |-
                      params defines all the paramaters of x/gov module.

                      Since: cosmos-sdk 0.47
                    properties:
                      burn_proposal_deposit_prevote:
                        title: burn deposits if the proposal does not enter voting period
                        type: boolean
                      burn_vote_quorum:
                        title: burn deposits if a proposal does not meet quorum
                        type: boolean
                      burn_vote_veto:
                        title: burn deposits if quorum with vote type no_veto is met
                        type: boolean
                      expedited_min_deposit:
                        description: Minimum expedited deposit for a proposal to enter voting period.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      expedited_threshold:
                        description: |-
                          Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

                          Since: cosmos-sdk 0.50
                        type: string
                      expedited_voting_period:
                        description: |-
                          Duration of the voting period of an expedited proposal.

                          Since: cosmos-sdk 0.50
                        type: string
                      max_deposit_period:
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                        type: string
                      min_deposit:
                        description: Minimum deposit for a proposal to enter voting period.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      min_deposit_ratio:
                        description: |-
                          The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
                          Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
                          required.

                          Since: cosmos-sdk 0.50
                        type: string
                      min_initial_deposit_ratio:
                        description: The ratio representing the proportion of the deposit value that must be paid at proposal submission.
                        type: string
                      proposal_cancel_dest:
                        description: |-
                          The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
                          If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

                          Since: cosmos-sdk 0.50
                        type: string
                      proposal_cancel_ratio:
                        description: |-
                          The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

                          Since: cosmos-sdk 0.50
                        type: string
                      quorum:
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                           considered valid.
                        type: string
                      threshold:
                        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                        type: string
                      veto_threshold:
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                           vetoed. Default value: 1/3.
                        type: string
                      voting_period:
                        description: Duration of the voting period.
                        type: string
                    type: object
                  tally_params:
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      tally_params defines the parameters related to tally.
                    properties:
                      quorum:
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                          considered valid.
                        type: string
                      threshold:
                        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                        type: string
                      veto_threshold:
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                          vetoed. Default value: 1/3.
                        type: string
                    type: object
                  voting_params:
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      voting_params defines the parameters related to voting.
                    properties:
                      voting_period:
                        description: Duration of the voting period.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Params
      summary: Params queries all parameters of the gov module.
      x-stoplight:
        id: fhssyva4n4974
  /cosmos/gov/v1/proposals:
    get:
      parameters:
        - description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          name: proposal_status
          required: false
          schema:
            default: PROPOSAL_STATUS_UNSPECIFIED
            enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            type: string
        - description: voter defines the voter address for the proposals.
          in: query
          name: voter
          required: false
          schema:
            type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: query
          name: depositor
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  proposals:
                    description: proposals defines all the requested governance proposals.
                    items:
                      description: Proposal defines the core field members of a governance proposal.
                      properties:
                        deposit_end_time:
                          description: deposit_end_time is the end time for deposition.
                          format: date-time
                          type: string
                        expedited:
                          description: 'Since: cosmos-sdk 0.50'
                          title: expedited defines if the proposal is expedited
                          type: boolean
                        failed_reason:
                          description: 'Since: cosmos-sdk 0.50'
                          title: failed_reason defines the reason why the proposal failed
                          type: string
                        final_tally_result:
                          description: |-
                            final_tally_result is the final tally result of the proposal. When
                            querying a proposal via gRPC, this field is not populated until the
                            proposal's voting period has ended.
                          properties:
                            abstain_count:
                              description: abstain_count is the number of abstain votes on a proposal.
                              type: string
                            no_count:
                              description: no_count is the number of no votes on a proposal.
                              type: string
                            no_with_veto_count:
                              description: no_with_veto_count is the number of no with veto votes on a proposal.
                              type: string
                            yes_count:
                              description: yes_count is the number of yes votes on a proposal.
                              type: string
                          type: object
                        id:
                          description: id defines the unique id of the proposal.
                          format: uint64
                          type: string
                        messages:
                          description: messages are the arbitrary messages to be executed if the proposal passes.
                          items:
                            description: |-
                              `Any` contains an arbitrary serialized protocol buffer message along with a
                              URL that describes the type of the serialized message.

                              Protobuf library provides support to pack/unpack Any values in the form
                              of utility functions or additional generated methods of the Any type.

                              Example 1: Pack and unpack a message in C++.

                                  Foo foo = ...;
                                  Any any;
                                  any.PackFrom(foo);
                                  ...
                                  if (any.UnpackTo(&foo)) {
                                    ...
                                  }

                              Example 2: Pack and unpack a message in Java.

                                  Foo foo = ...;
                                  Any any = Any.pack(foo);
                                  ...
                                  if (any.is(Foo.class)) {
                                    foo = any.unpack(Foo.class);
                                  }
                                  // or ...
                                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                    foo = any.unpack(Foo.getDefaultInstance());
                                  }

                              Example 3: Pack and unpack a message in Python.

                                  foo = Foo(...)
                                  any = Any()
                                  any.Pack(foo)
                                  ...
                                  if any.Is(Foo.DESCRIPTOR):
                                    any.Unpack(foo)
                                    ...

                              Example 4: Pack and unpack a message in Go

                                   foo := &pb.Foo{...}
                                   any, err := anypb.New(foo)
                                   if err != nil {
                                     ...
                                   }
                                   ...
                                   foo := &pb.Foo{}
                                   if err := any.UnmarshalTo(foo); err != nil {
                                     ...
                                   }

                              The pack methods provided by protobuf library will by default use
                              'type.googleapis.com/full.type.name' as the type URL and the unpack
                              methods only use the fully qualified type name after the last '/'
                              in the type URL, for example "foo.bar.com/x/y.z" will yield type
                              name "y.z".

                              JSON

                              The JSON representation of an `Any` value uses the regular
                              representation of the deserialized, embedded message, with an
                              additional field `@type` which contains the type URL. Example:

                                  package google.profile;
                                  message Person {
                                    string first_name = 1;
                                    string last_name = 2;
                                  }

                                  {
                                    "@type": "type.googleapis.com/google.profile.Person",
                                    "firstName": <string>,
                                    "lastName": <string>
                                  }

                              If the embedded message type is well-known and has a custom JSON
                              representation, that representation will be embedded adding a field
                              `value` which holds the custom JSON in addition to the `@type`
                              field. Example (for message [google.protobuf.Duration][]):

                                  {
                                    "@type": "type.googleapis.com/google.protobuf.Duration",
                                    "value": "1.212s"
                                  }
                            properties:
                              type_url:
                                description: |-
                                  A URL/resource name that uniquely identifies the type of the serialized
                                  protocol buffer message. This string must contain at least
                                  one "/" character. The last segment of the URL's path must represent
                                  the fully qualified name of the type (as in
                                  `path/google.protobuf.Duration`). The name should be in a canonical form
                                  (e.g., leading "." is not accepted).

                                  In practice, teams usually precompile into the binary all types that they
                                  expect it to use in the context of Any. However, for URLs which use the
                                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                                  server that maps type URLs to message definitions as follows:

                                  * If no scheme is provided, `https` is assumed.
                                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                    value in binary format, or produce an error.
                                  * Applications are allowed to cache lookup results based on the
                                    URL, or have them precompiled into a binary to avoid any
                                    lookup. Therefore, binary compatibility needs to be preserved
                                    on changes to types. (Use versioned type names to manage
                                    breaking changes.)

                                  Note: this functionality is not currently available in the official
                                  protobuf release, and it is not used for type URLs beginning with
                                  type.googleapis.com.

                                  Schemes other than `http`, `https` (or the empty scheme) might be
                                  used with implementation specific semantics.
                                type: string
                              value:
                                description: Must be a valid serialized protocol buffer of the above specified type.
                                format: byte
                                type: string
                            type: object
                          type: array
                        metadata:
                          title: |-
                            metadata is any arbitrary metadata attached to the proposal.
                            the recommended format of the metadata is to be found here:
                            https://docs.cosmos.network/v0.47/modules/gov#proposal-3
                          type: string
                        proposer:
                          description: 'Since: cosmos-sdk 0.47'
                          title: proposer is the address of the proposal sumbitter
                          type: string
                        status:
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          description: status defines the proposal status.
                          enum:
                            - PROPOSAL_STATUS_UNSPECIFIED
                            - PROPOSAL_STATUS_DEPOSIT_PERIOD
                            - PROPOSAL_STATUS_VOTING_PERIOD
                            - PROPOSAL_STATUS_PASSED
                            - PROPOSAL_STATUS_REJECTED
                            - PROPOSAL_STATUS_FAILED
                          type: string
                        submit_time:
                          description: submit_time is the time of proposal submission.
                          format: date-time
                          type: string
                        summary:
                          description: 'Since: cosmos-sdk 0.47'
                          title: summary is a short summary of the proposal
                          type: string
                        title:
                          description: 'Since: cosmos-sdk 0.47'
                          title: title is the title of the proposal
                          type: string
                        total_deposit:
                          description: total_deposit is the total deposit on the proposal.
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        voting_end_time:
                          description: voting_end_time is the end time of voting on a proposal.
                          format: date-time
                          type: string
                        voting_start_time:
                          description: voting_start_time is the starting time to vote on a proposal.
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Proposal
      summary: Proposals queries all proposals based on given status.
      x-stoplight:
        id: wpdkcp4ikbmri
  '/cosmos/gov/v1/proposals/{proposal_id}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
                properties:
                  proposal:
                    description: Proposal defines the core field members of a governance proposal.
                    properties:
                      deposit_end_time:
                        description: deposit_end_time is the end time for deposition.
                        format: date-time
                        type: string
                      expedited:
                        description: 'Since: cosmos-sdk 0.50'
                        title: expedited defines if the proposal is expedited
                        type: boolean
                      failed_reason:
                        description: 'Since: cosmos-sdk 0.50'
                        title: failed_reason defines the reason why the proposal failed
                        type: string
                      final_tally_result:
                        description: |-
                          final_tally_result is the final tally result of the proposal. When
                          querying a proposal via gRPC, this field is not populated until the
                          proposal's voting period has ended.
                        properties:
                          abstain_count:
                            description: abstain_count is the number of abstain votes on a proposal.
                            type: string
                          no_count:
                            description: no_count is the number of no votes on a proposal.
                            type: string
                          no_with_veto_count:
                            description: no_with_veto_count is the number of no with veto votes on a proposal.
                            type: string
                          yes_count:
                            description: yes_count is the number of yes votes on a proposal.
                            type: string
                        type: object
                      id:
                        description: id defines the unique id of the proposal.
                        format: uint64
                        type: string
                      messages:
                        description: messages are the arbitrary messages to be executed if the proposal passes.
                        items:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        type: array
                      metadata:
                        title: |-
                          metadata is any arbitrary metadata attached to the proposal.
                          the recommended format of the metadata is to be found here:
                          https://docs.cosmos.network/v0.47/modules/gov#proposal-3
                        type: string
                      proposer:
                        description: 'Since: cosmos-sdk 0.47'
                        title: proposer is the address of the proposal sumbitter
                        type: string
                      status:
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        description: status defines the proposal status.
                        enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        type: string
                      submit_time:
                        description: submit_time is the time of proposal submission.
                        format: date-time
                        type: string
                      summary:
                        description: 'Since: cosmos-sdk 0.47'
                        title: summary is a short summary of the proposal
                        type: string
                      title:
                        description: 'Since: cosmos-sdk 0.47'
                        title: title is the title of the proposal
                        type: string
                      total_deposit:
                        description: total_deposit is the total deposit on the proposal.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      voting_end_time:
                        description: voting_end_time is the end time of voting on a proposal.
                        format: date-time
                        type: string
                      voting_start_time:
                        description: voting_start_time is the starting time to vote on a proposal.
                        format: date-time
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Proposal
      summary: Proposal queries proposal details based on ProposalID.
      x-stoplight:
        id: tb1jsi9x2at43
  '/cosmos/gov/v1/proposals/{proposal_id}/deposits':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
                properties:
                  deposits:
                    description: deposits defines the requested deposits.
                    items:
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                      properties:
                        amount:
                          description: amount to be deposited by depositor.
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        depositor:
                          description: depositor defines the deposit addresses from the proposals.
                          type: string
                        proposal_id:
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Deposit
      summary: Deposits queries all deposits of a single proposal.
      x-stoplight:
        id: dam6hsu1up8mi
  '/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: path
          name: depositor
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
                properties:
                  deposit:
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                    properties:
                      amount:
                        description: amount to be deposited by depositor.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      depositor:
                        description: depositor defines the deposit addresses from the proposals.
                        type: string
                      proposal_id:
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Deposit
      summary: 'Deposit queries single deposit information based on proposalID, depositAddr.'
      x-stoplight:
        id: 7gu4rbbkvmaa9
  '/cosmos/gov/v1/proposals/{proposal_id}/tally':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
                properties:
                  tally:
                    description: tally defines the requested tally.
                    properties:
                      abstain_count:
                        description: abstain_count is the number of abstain votes on a proposal.
                        type: string
                      no_count:
                        description: no_count is the number of no votes on a proposal.
                        type: string
                      no_with_veto_count:
                        description: no_with_veto_count is the number of no with veto votes on a proposal.
                        type: string
                      yes_count:
                        description: yes_count is the number of yes votes on a proposal.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1TallyResult
      summary: TallyResult queries the tally of a proposal vote.
      x-stoplight:
        id: zqsyn8dnhbwzs
  '/cosmos/gov/v1/proposals/{proposal_id}/votes':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVotesResponse is the response type for the Query/Votes RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  votes:
                    description: votes defines the queried votes.
                    items:
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                      properties:
                        metadata:
                          title: |-
                            metadata is any arbitrary metadata attached to the vote.
                            the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
                          type: string
                        options:
                          description: options is the weighted vote options.
                          items:
                            description: WeightedVoteOption defines a unit of vote for vote split.
                            properties:
                              option:
                                default: VOTE_OPTION_UNSPECIFIED
                                description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                                enum:
                                  - VOTE_OPTION_UNSPECIFIED
                                  - VOTE_OPTION_YES
                                  - VOTE_OPTION_ABSTAIN
                                  - VOTE_OPTION_NO
                                  - VOTE_OPTION_NO_WITH_VETO
                                type: string
                              weight:
                                description: weight is the vote weight associated with the vote option.
                                type: string
                            type: object
                          type: array
                        proposal_id:
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                          type: string
                        voter:
                          description: voter is the voter address of the proposal.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Votes
      summary: Votes queries votes of a given proposal.
      x-stoplight:
        id: y4pwgwwxzcwqg
  '/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: voter defines the voter address for the proposals.
          in: path
          name: voter
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVoteResponse is the response type for the Query/Vote RPC method.
                properties:
                  vote:
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                    properties:
                      metadata:
                        title: |-
                          metadata is any arbitrary metadata attached to the vote.
                          the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
                        type: string
                      options:
                        description: options is the weighted vote options.
                        items:
                          description: WeightedVoteOption defines a unit of vote for vote split.
                          properties:
                            option:
                              default: VOTE_OPTION_UNSPECIFIED
                              description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                              enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              type: string
                            weight:
                              description: weight is the vote weight associated with the vote option.
                              type: string
                          type: object
                        type: array
                      proposal_id:
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                        type: string
                      voter:
                        description: voter is the voter address of the proposal.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovV1Vote
      summary: 'Vote queries voted information based on proposalID, voterAddr.'
      x-stoplight:
        id: 08t43uaiuhoqz
  '/cosmos/gov/v1beta1/params/{params_type}':
    get:
      parameters:
        - description: |-
            params_type defines which parameters to query for, can be one of "voting",
            "tallying" or "deposit".
          in: path
          name: params_type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  deposit_params:
                    description: deposit_params defines the parameters related to deposit.
                    properties:
                      max_deposit_period:
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                        type: string
                      min_deposit:
                        description: Minimum deposit for a proposal to enter voting period.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                  tally_params:
                    description: tally_params defines the parameters related to tally.
                    properties:
                      quorum:
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                          considered valid.
                        format: byte
                        type: string
                      threshold:
                        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
                        format: byte
                        type: string
                      veto_threshold:
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                          vetoed. Default value: 1/3.
                        format: byte
                        type: string
                    type: object
                  voting_params:
                    description: voting_params defines the parameters related to voting.
                    properties:
                      voting_period:
                        description: Duration of the voting period.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: GovParams
      summary: Params queries all parameters of the gov module.
      x-stoplight:
        id: kgixwrcs4glh6
  /cosmos/gov/v1beta1/proposals:
    get:
      parameters:
        - description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          name: proposal_status
          required: false
          schema:
            default: PROPOSAL_STATUS_UNSPECIFIED
            enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            type: string
        - description: voter defines the voter address for the proposals.
          in: query
          name: voter
          required: false
          schema:
            type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: query
          name: depositor
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  proposals:
                    description: proposals defines all the requested governance proposals.
                    items:
                      description: Proposal defines the core field members of a governance proposal.
                      properties:
                        content:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        deposit_end_time:
                          description: deposit_end_time is the end time for deposition.
                          format: date-time
                          type: string
                        final_tally_result:
                          description: |-
                            final_tally_result is the final tally result of the proposal. When
                            querying a proposal via gRPC, this field is not populated until the
                            proposal's voting period has ended.
                          properties:
                            abstain:
                              description: abstain is the number of abstain votes on a proposal.
                              type: string
                            'no':
                              description: no is the number of no votes on a proposal.
                              type: string
                            no_with_veto:
                              description: no_with_veto is the number of no with veto votes on a proposal.
                              type: string
                            'yes':
                              description: yes is the number of yes votes on a proposal.
                              type: string
                          type: object
                        proposal_id:
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                          type: string
                        status:
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          description: status defines the proposal status.
                          enum:
                            - PROPOSAL_STATUS_UNSPECIFIED
                            - PROPOSAL_STATUS_DEPOSIT_PERIOD
                            - PROPOSAL_STATUS_VOTING_PERIOD
                            - PROPOSAL_STATUS_PASSED
                            - PROPOSAL_STATUS_REJECTED
                            - PROPOSAL_STATUS_FAILED
                          type: string
                        submit_time:
                          description: submit_time is the time of proposal submission.
                          format: date-time
                          type: string
                        total_deposit:
                          description: total_deposit is the total deposit on the proposal.
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        voting_end_time:
                          description: voting_end_time is the end time of voting on a proposal.
                          format: date-time
                          type: string
                        voting_start_time:
                          description: voting_start_time is the starting time to vote on a proposal.
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Proposals
      summary: Proposals queries all proposals based on given status.
      x-stoplight:
        id: m8a73rq1ix3gi
  '/cosmos/gov/v1beta1/proposals/{proposal_id}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
                properties:
                  proposal:
                    description: Proposal defines the core field members of a governance proposal.
                    properties:
                      content:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      deposit_end_time:
                        description: deposit_end_time is the end time for deposition.
                        format: date-time
                        type: string
                      final_tally_result:
                        description: |-
                          final_tally_result is the final tally result of the proposal. When
                          querying a proposal via gRPC, this field is not populated until the
                          proposal's voting period has ended.
                        properties:
                          abstain:
                            description: abstain is the number of abstain votes on a proposal.
                            type: string
                          'no':
                            description: no is the number of no votes on a proposal.
                            type: string
                          no_with_veto:
                            description: no_with_veto is the number of no with veto votes on a proposal.
                            type: string
                          'yes':
                            description: yes is the number of yes votes on a proposal.
                            type: string
                        type: object
                      proposal_id:
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                        type: string
                      status:
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        description: status defines the proposal status.
                        enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        type: string
                      submit_time:
                        description: submit_time is the time of proposal submission.
                        format: date-time
                        type: string
                      total_deposit:
                        description: total_deposit is the total deposit on the proposal.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      voting_end_time:
                        description: voting_end_time is the end time of voting on a proposal.
                        format: date-time
                        type: string
                      voting_start_time:
                        description: voting_start_time is the starting time to vote on a proposal.
                        format: date-time
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Proposal
      summary: Proposal queries proposal details based on ProposalID.
      x-stoplight:
        id: yr1v4on95h5bk
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
                properties:
                  deposits:
                    description: deposits defines the requested deposits.
                    items:
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                      properties:
                        amount:
                          description: amount to be deposited by depositor.
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        depositor:
                          description: depositor defines the deposit addresses from the proposals.
                          type: string
                        proposal_id:
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Deposits
      summary: Deposits queries all deposits of a single proposal.
      x-stoplight:
        id: d0fcvs8izjuls
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: path
          name: depositor
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
                properties:
                  deposit:
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                    properties:
                      amount:
                        description: amount to be deposited by depositor.
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      depositor:
                        description: depositor defines the deposit addresses from the proposals.
                        type: string
                      proposal_id:
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Deposit
      summary: 'Deposit queries single deposit information based on proposalID, depositor address.'
      x-stoplight:
        id: dl38jkc6hnneh
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/tally':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
                properties:
                  tally:
                    description: tally defines the requested tally.
                    properties:
                      abstain:
                        description: abstain is the number of abstain votes on a proposal.
                        type: string
                      'no':
                        description: no is the number of no votes on a proposal.
                        type: string
                      no_with_veto:
                        description: no_with_veto is the number of no with veto votes on a proposal.
                        type: string
                      'yes':
                        description: yes is the number of yes votes on a proposal.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TallyResult
      summary: TallyResult queries the tally of a proposal vote.
      x-stoplight:
        id: 114zlo957y9ra
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/votes':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVotesResponse is the response type for the Query/Votes RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  votes:
                    description: votes defines the queried votes.
                    items:
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                      properties:
                        option:
                          default: VOTE_OPTION_UNSPECIFIED
                          description: |-
                            Deprecated: Prefer to use `options` instead. This field is set in queries
                            if and only if `len(options) == 1` and that option has weight 1. In all
                            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                          enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                          type: string
                        options:
                          description: |-
                            options is the weighted vote options.

                            Since: cosmos-sdk 0.43
                          items:
                            description: |-
                              WeightedVoteOption defines a unit of vote for vote split.

                              Since: cosmos-sdk 0.43
                            properties:
                              option:
                                default: VOTE_OPTION_UNSPECIFIED
                                description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                                enum:
                                  - VOTE_OPTION_UNSPECIFIED
                                  - VOTE_OPTION_YES
                                  - VOTE_OPTION_ABSTAIN
                                  - VOTE_OPTION_NO
                                  - VOTE_OPTION_NO_WITH_VETO
                                type: string
                              weight:
                                description: weight is the vote weight associated with the vote option.
                                type: string
                            type: object
                          type: array
                        proposal_id:
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                          type: string
                        voter:
                          description: voter is the voter address of the proposal.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Votes
      summary: Votes queries votes of a given proposal.
      x-stoplight:
        id: fblr6420rx9oo
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}':
    get:
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          in: path
          name: proposal_id
          required: true
          schema:
            format: uint64
            type: string
        - description: voter defines the voter address for the proposals.
          in: path
          name: voter
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVoteResponse is the response type for the Query/Vote RPC method.
                properties:
                  vote:
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                    properties:
                      option:
                        default: VOTE_OPTION_UNSPECIFIED
                        description: |-
                          Deprecated: Prefer to use `options` instead. This field is set in queries
                          if and only if `len(options) == 1` and that option has weight 1. In all
                          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                        enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        type: string
                      options:
                        description: |-
                          options is the weighted vote options.

                          Since: cosmos-sdk 0.43
                        items:
                          description: |-
                            WeightedVoteOption defines a unit of vote for vote split.

                            Since: cosmos-sdk 0.43
                          properties:
                            option:
                              default: VOTE_OPTION_UNSPECIFIED
                              description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                              enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              type: string
                            weight:
                              description: weight is the vote weight associated with the vote option.
                              type: string
                          type: object
                        type: array
                      proposal_id:
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                        type: string
                      voter:
                        description: voter is the voter address of the proposal.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Vote
      summary: 'Vote queries voted information based on proposalID, voterAddr.'
      x-stoplight:
        id: b40u1ybougmnk
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAnnualProvisionsResponse is the response type for the
                  Query/AnnualProvisions RPC method.
                properties:
                  annual_provisions:
                    description: annual_provisions is the current minting annual provisions value.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AnnualProvisions
      summary: AnnualProvisions current minting annual provisions value.
      x-stoplight:
        id: 6sisdutm860vv
  /cosmos/mint/v1beta1/inflation:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryInflationResponse is the response type for the Query/Inflation RPC
                  method.
                properties:
                  inflation:
                    description: inflation is the current minting inflation value.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Inflation
      summary: Inflation returns the current minting inflation value.
      x-stoplight:
        id: gp9y1ogmkk9cn
  /cosmos/mint/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      blocks_per_year:
                        format: uint64
                        title: expected blocks per year
                        type: string
                      goal_bonded:
                        title: goal of percent bonded atoms
                        type: string
                      inflation_max:
                        title: maximum inflation rate
                        type: string
                      inflation_min:
                        title: minimum inflation rate
                        type: string
                      inflation_rate_change:
                        title: maximum annual change in inflation rate
                        type: string
                      mint_denom:
                        title: type of coin to mint
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: MintParams
      summary: Params returns the total set of minting parameters.
      x-stoplight:
        id: w9nxypkwtp9wt
  /cosmos/params/v1beta1/params:
    get:
      parameters:
        - description: subspace defines the module to query the parameter for.
          in: query
          name: subspace
          required: false
          schema:
            type: string
        - description: key defines the key of the parameter in the subspace.
          in: query
          name: key
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is response type for the Query/Params RPC method.
                properties:
                  param:
                    description: param defines the queried parameter.
                    properties:
                      key:
                        type: string
                      subspace:
                        type: string
                      value:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Params
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      x-stoplight:
        id: b8biee71nvn60
  /cosmos/params/v1beta1/subspaces:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySubspacesResponse defines the response types for querying for all
                  registered subspaces and all keys for a subspace.

                  Since: cosmos-sdk 0.46
                properties:
                  subspaces:
                    items:
                      description: |-
                        Subspace defines a parameter subspace name and all the keys that exist for
                        the subspace.

                        Since: cosmos-sdk 0.46
                      properties:
                        keys:
                          items:
                            type: string
                          type: array
                        subspace:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: Subspaces
      summary: Subspaces queries for all registered subspaces and all keys for a subspace.
      x-stoplight:
        id: uv8x2uonv0r1k
  /cosmos/slashing/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: Params represents the parameters used for by the slashing module.
                    properties:
                      downtime_jail_duration:
                        type: string
                      min_signed_per_window:
                        format: byte
                        type: string
                      signed_blocks_window:
                        format: int64
                        type: string
                      slash_fraction_double_sign:
                        format: byte
                        type: string
                      slash_fraction_downtime:
                        format: byte
                        type: string
                    type: object
                title: QueryParamsResponse is the response type for the Query/Params RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SlashingParams
      summary: Params queries the parameters of slashing module
      x-stoplight:
        id: hzv2bhx8270tc
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  info:
                    items:
                      description: |-
                        ValidatorSigningInfo defines a validator's signing info for monitoring their
                        liveness activity.
                      properties:
                        address:
                          type: string
                        index_offset:
                          description: |-
                            Index which is incremented every time a validator is bonded in a block and
                            _may_ have signed a pre-commit or not. This in conjunction with the
                            signed_blocks_window param determines the index in the missed block bitmap.
                          format: int64
                          type: string
                        jailed_until:
                          description: Timestamp until which the validator is jailed due to liveness downtime.
                          format: date-time
                          type: string
                        missed_blocks_counter:
                          description: |-
                            A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                            reads in the missed block bitmap.
                          format: int64
                          type: string
                        start_height:
                          format: int64
                          title: Height at which validator was first a candidate OR was un-jailed
                          type: string
                        tombstoned:
                          description: |-
                            Whether or not a validator has been tombstoned (killed out of validator
                            set). It is set once the validator commits an equivocation or for any other
                            configured misbehavior.
                          type: boolean
                      type: object
                    title: info is the signing info of all validators
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
                  method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SigningInfos
      summary: SigningInfos queries signing info of all validators
      x-stoplight:
        id: 8m21g02123qav
  '/cosmos/slashing/v1beta1/signing_infos/{cons_address}':
    get:
      parameters:
        - description: cons_address is the address to query signing info of
          in: path
          name: cons_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  val_signing_info:
                    description: |-
                      ValidatorSigningInfo defines a validator's signing info for monitoring their
                      liveness activity.
                    properties:
                      address:
                        type: string
                      index_offset:
                        description: |-
                          Index which is incremented every time a validator is bonded in a block and
                          _may_ have signed a pre-commit or not. This in conjunction with the
                          signed_blocks_window param determines the index in the missed block bitmap.
                        format: int64
                        type: string
                      jailed_until:
                        description: Timestamp until which the validator is jailed due to liveness downtime.
                        format: date-time
                        type: string
                      missed_blocks_counter:
                        description: |-
                          A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                          reads in the missed block bitmap.
                        format: int64
                        type: string
                      start_height:
                        format: int64
                        title: Height at which validator was first a candidate OR was un-jailed
                        type: string
                      tombstoned:
                        description: |-
                          Whether or not a validator has been tombstoned (killed out of validator
                          set). It is set once the validator commits an equivocation or for any other
                          configured misbehavior.
                        type: boolean
                    title: val_signing_info is the signing info of requested val cons address
                    type: object
                title: |-
                  QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
                  method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SigningInfo
      summary: SigningInfo queries the signing info of given cons address
      x-stoplight:
        id: 0rzbz8qji4t5r
  '/cosmos/staking/v1beta1/delegations/{delegator_addr}':
    get:
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegatorDelegationsResponse is response type for the
                  Query/DelegatorDelegations RPC method.
                properties:
                  delegation_responses:
                    description: delegation_responses defines all the delegations' info of a delegator.
                    items:
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                      properties:
                        balance:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegation:
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                          properties:
                            delegator_address:
                              description: delegator_address is the encoded address of the delegator.
                              type: string
                            shares:
                              description: shares define the delegation shares received.
                              type: string
                            validator_address:
                              description: validator_address is the encoded address of the validator.
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorDelegations
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      x-stoplight:
        id: yjzh7c0y9sv4b
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations':
    get:
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
        - description: src_validator_addr defines the validator address to redelegate from.
          in: query
          name: src_validator_addr
          required: false
          schema:
            type: string
        - description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          name: dst_validator_addr
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryRedelegationsResponse is response type for the Query/Redelegations RPC
                  method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  redelegation_responses:
                    items:
                      description: |-
                        RedelegationResponse is equivalent to a Redelegation except that its entries
                        contain a balance in addition to shares which is more suitable for client
                        responses.
                      properties:
                        entries:
                          items:
                            description: |-
                              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                              contains a balance in addition to shares which is more suitable for client
                              responses.
                            properties:
                              balance:
                                type: string
                              redelegation_entry:
                                description: RedelegationEntry defines a redelegation object with relevant metadata.
                                properties:
                                  completion_time:
                                    description: completion_time defines the unix time for redelegation completion.
                                    format: date-time
                                    type: string
                                  creation_height:
                                    description: creation_height  defines the height which the redelegation took place.
                                    format: int64
                                    type: string
                                  initial_balance:
                                    description: initial_balance defines the initial balance when redelegation started.
                                    type: string
                                  shares_dst:
                                    description: shares_dst is the amount of destination-validator shares created by redelegation.
                                    type: string
                                  unbonding_id:
                                    format: uint64
                                    title: Incrementing id that uniquely identifies this entry
                                    type: string
                                  unbonding_on_hold_ref_count:
                                    format: int64
                                    title: Strictly positive if this entry's unbonding has been stopped by external modules
                                    type: string
                                type: object
                            type: object
                          type: array
                        redelegation:
                          description: |-
                            Redelegation contains the list of a particular delegator's redelegating bonds
                            from a particular source validator to a particular destination validator.
                          properties:
                            delegator_address:
                              description: delegator_address is the bech32-encoded address of the delegator.
                              type: string
                            entries:
                              description: entries are the redelegation entries.
                              items:
                                description: RedelegationEntry defines a redelegation object with relevant metadata.
                                properties:
                                  completion_time:
                                    description: completion_time defines the unix time for redelegation completion.
                                    format: date-time
                                    type: string
                                  creation_height:
                                    description: creation_height  defines the height which the redelegation took place.
                                    format: int64
                                    type: string
                                  initial_balance:
                                    description: initial_balance defines the initial balance when redelegation started.
                                    type: string
                                  shares_dst:
                                    description: shares_dst is the amount of destination-validator shares created by redelegation.
                                    type: string
                                  unbonding_id:
                                    format: uint64
                                    title: Incrementing id that uniquely identifies this entry
                                    type: string
                                  unbonding_on_hold_ref_count:
                                    format: int64
                                    title: Strictly positive if this entry's unbonding has been stopped by external modules
                                    type: string
                                type: object
                              type: array
                            validator_dst_address:
                              description: validator_dst_address is the validator redelegation destination operator address.
                              type: string
                            validator_src_address:
                              description: validator_src_address is the validator redelegation source operator address.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Redelegations
      summary: Redelegations queries redelegations of given address.
      x-stoplight:
        id: 4y0egk8emzi0z
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations':
    get:
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryUnbondingDelegatorDelegationsResponse is response type for the
                  Query/UnbondingDelegatorDelegations RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  unbonding_responses:
                    items:
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                      properties:
                        delegator_address:
                          description: delegator_address is the encoded address of the delegator.
                          type: string
                        entries:
                          description: entries are the unbonding delegation entries.
                          items:
                            description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                            properties:
                              balance:
                                description: balance defines the tokens to receive at completion.
                                type: string
                              completion_time:
                                description: completion_time is the unix time for unbonding completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height is the height which the unbonding took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the tokens initially scheduled to receive at completion.
                                type: string
                              unbonding_id:
                                format: uint64
                                title: Incrementing id that uniquely identifies this entry
                                type: string
                              unbonding_on_hold_ref_count:
                                format: int64
                                title: Strictly positive if this entry's unbonding has been stopped by external modules
                                type: string
                            type: object
                          type: array
                        validator_address:
                          description: validator_address is the encoded address of the validator.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorUnbondingDelegations
      summary: |-
        DelegatorUnbondingDelegations queries all unbonding delegations of a given
        delegator address.
      x-stoplight:
        id: x3mmz5phtpoig
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators':
    get:
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegatorValidatorsResponse is response type for the
                  Query/DelegatorValidators RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  validators:
                    description: validators defines the validators' info of a delegator.
                    items:
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                      properties:
                        commission:
                          description: commission defines the commission parameters.
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission rates to be used for creating a validator.
                              properties:
                                max_change_rate:
                                  description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                                  type: string
                                max_rate:
                                  description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                                  type: string
                                rate:
                                  description: 'rate is the commission rate charged to delegators, as a fraction.'
                                  type: string
                              type: object
                            update_time:
                              description: update_time is the last time the commission rate was changed.
                              format: date-time
                              type: string
                          type: object
                        consensus_pubkey:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        delegator_shares:
                          description: delegator_shares defines total shares issued to a validator's delegators.
                          type: string
                        description:
                          description: description defines the description terms for the validator.
                          properties:
                            details:
                              description: details define other optional details.
                              type: string
                            identity:
                              description: identity defines an optional identity signature (ex. UPort or Keybase).
                              type: string
                            moniker:
                              description: moniker defines a human-readable name for the validator.
                              type: string
                            security_contact:
                              description: security_contact defines an optional email for security contact.
                              type: string
                            website:
                              description: website defines an optional website link.
                              type: string
                          type: object
                        jailed:
                          description: jailed defined whether the validator has been jailed from bonded status or not.
                          type: boolean
                        min_self_delegation:
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                          type: string
                        operator_address:
                          description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                          type: string
                        status:
                          default: BOND_STATUS_UNSPECIFIED
                          description: status is the validator status (bonded/unbonding/unbonded).
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          type: string
                        tokens:
                          description: tokens define the delegated tokens (incl. self-delegation).
                          type: string
                        unbonding_height:
                          description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                          format: int64
                          type: string
                        unbonding_ids:
                          items:
                            format: uint64
                            type: string
                          title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                          type: array
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: strictly positive if this validator's unbonding has been stopped by external modules
                          type: string
                        unbonding_time:
                          description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: StakingDelegatorValidators
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      x-stoplight:
        id: 7a3q4jwmhjkq5
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}':
    get:
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegatorValidatorResponse response type for the
                  Query/DelegatorValidator RPC method.
                properties:
                  validator:
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
                    properties:
                      commission:
                        description: commission defines the commission parameters.
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission rates to be used for creating a validator.
                            properties:
                              max_change_rate:
                                description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                                type: string
                              max_rate:
                                description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                                type: string
                              rate:
                                description: 'rate is the commission rate charged to delegators, as a fraction.'
                                type: string
                            type: object
                          update_time:
                            description: update_time is the last time the commission rate was changed.
                            format: date-time
                            type: string
                        type: object
                      consensus_pubkey:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      delegator_shares:
                        description: delegator_shares defines total shares issued to a validator's delegators.
                        type: string
                      description:
                        description: description defines the description terms for the validator.
                        properties:
                          details:
                            description: details define other optional details.
                            type: string
                          identity:
                            description: identity defines an optional identity signature (ex. UPort or Keybase).
                            type: string
                          moniker:
                            description: moniker defines a human-readable name for the validator.
                            type: string
                          security_contact:
                            description: security_contact defines an optional email for security contact.
                            type: string
                          website:
                            description: website defines an optional website link.
                            type: string
                        type: object
                      jailed:
                        description: jailed defined whether the validator has been jailed from bonded status or not.
                        type: boolean
                      min_self_delegation:
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                        type: string
                      operator_address:
                        description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                        type: string
                      status:
                        default: BOND_STATUS_UNSPECIFIED
                        description: status is the validator status (bonded/unbonding/unbonded).
                        enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        type: string
                      tokens:
                        description: tokens define the delegated tokens (incl. self-delegation).
                        type: string
                      unbonding_height:
                        description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                        format: int64
                        type: string
                      unbonding_ids:
                        items:
                          format: uint64
                          type: string
                        title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                        type: array
                      unbonding_on_hold_ref_count:
                        format: int64
                        title: strictly positive if this validator's unbonding has been stopped by external modules
                        type: string
                      unbonding_time:
                        description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                        format: date-time
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DelegatorValidator
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      x-stoplight:
        id: 7qurkajkqbcsj
  '/cosmos/staking/v1beta1/historical_info/{height}':
    get:
      parameters:
        - description: height defines at which height to query the historical info.
          in: path
          name: height
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
                  method.
                properties:
                  hist:
                    description: hist defines the historical info at the given height.
                    properties:
                      header:
                        description: Header defines the structure of a block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: prev block info
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      valset:
                        items:
                          description: |-
                            Validator defines a validator, together with the total amount of the
                            Validator's bond shares and their exchange rate to coins. Slashing results in
                            a decrease in the exchange rate, allowing correct calculation of future
                            undelegations without iterating over delegators. When coins are delegated to
                            this validator, the validator is credited with a delegation whose number of
                            bond shares is based on the amount of coins delegated divided by the current
                            exchange rate. Voting power can be calculated as total bonded shares
                            multiplied by exchange rate.
                          properties:
                            commission:
                              description: commission defines the commission parameters.
                              properties:
                                commission_rates:
                                  description: commission_rates defines the initial commission rates to be used for creating a validator.
                                  properties:
                                    max_change_rate:
                                      description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                                      type: string
                                    max_rate:
                                      description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                                      type: string
                                    rate:
                                      description: 'rate is the commission rate charged to delegators, as a fraction.'
                                      type: string
                                  type: object
                                update_time:
                                  description: update_time is the last time the commission rate was changed.
                                  format: date-time
                                  type: string
                              type: object
                            consensus_pubkey:
                              description: |-
                                `Any` contains an arbitrary serialized protocol buffer message along with a
                                URL that describes the type of the serialized message.

                                Protobuf library provides support to pack/unpack Any values in the form
                                of utility functions or additional generated methods of the Any type.

                                Example 1: Pack and unpack a message in C++.

                                    Foo foo = ...;
                                    Any any;
                                    any.PackFrom(foo);
                                    ...
                                    if (any.UnpackTo(&foo)) {
                                      ...
                                    }

                                Example 2: Pack and unpack a message in Java.

                                    Foo foo = ...;
                                    Any any = Any.pack(foo);
                                    ...
                                    if (any.is(Foo.class)) {
                                      foo = any.unpack(Foo.class);
                                    }
                                    // or ...
                                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                      foo = any.unpack(Foo.getDefaultInstance());
                                    }

                                Example 3: Pack and unpack a message in Python.

                                    foo = Foo(...)
                                    any = Any()
                                    any.Pack(foo)
                                    ...
                                    if any.Is(Foo.DESCRIPTOR):
                                      any.Unpack(foo)
                                      ...

                                Example 4: Pack and unpack a message in Go

                                     foo := &pb.Foo{...}
                                     any, err := anypb.New(foo)
                                     if err != nil {
                                       ...
                                     }
                                     ...
                                     foo := &pb.Foo{}
                                     if err := any.UnmarshalTo(foo); err != nil {
                                       ...
                                     }

                                The pack methods provided by protobuf library will by default use
                                'type.googleapis.com/full.type.name' as the type URL and the unpack
                                methods only use the fully qualified type name after the last '/'
                                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                                name "y.z".

                                JSON

                                The JSON representation of an `Any` value uses the regular
                                representation of the deserialized, embedded message, with an
                                additional field `@type` which contains the type URL. Example:

                                    package google.profile;
                                    message Person {
                                      string first_name = 1;
                                      string last_name = 2;
                                    }

                                    {
                                      "@type": "type.googleapis.com/google.profile.Person",
                                      "firstName": <string>,
                                      "lastName": <string>
                                    }

                                If the embedded message type is well-known and has a custom JSON
                                representation, that representation will be embedded adding a field
                                `value` which holds the custom JSON in addition to the `@type`
                                field. Example (for message [google.protobuf.Duration][]):

                                    {
                                      "@type": "type.googleapis.com/google.protobuf.Duration",
                                      "value": "1.212s"
                                    }
                              properties:
                                type_url:
                                  description: |-
                                    A URL/resource name that uniquely identifies the type of the serialized
                                    protocol buffer message. This string must contain at least
                                    one "/" character. The last segment of the URL's path must represent
                                    the fully qualified name of the type (as in
                                    `path/google.protobuf.Duration`). The name should be in a canonical form
                                    (e.g., leading "." is not accepted).

                                    In practice, teams usually precompile into the binary all types that they
                                    expect it to use in the context of Any. However, for URLs which use the
                                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                                    server that maps type URLs to message definitions as follows:

                                    * If no scheme is provided, `https` is assumed.
                                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                      value in binary format, or produce an error.
                                    * Applications are allowed to cache lookup results based on the
                                      URL, or have them precompiled into a binary to avoid any
                                      lookup. Therefore, binary compatibility needs to be preserved
                                      on changes to types. (Use versioned type names to manage
                                      breaking changes.)

                                    Note: this functionality is not currently available in the official
                                    protobuf release, and it is not used for type URLs beginning with
                                    type.googleapis.com.

                                    Schemes other than `http`, `https` (or the empty scheme) might be
                                    used with implementation specific semantics.
                                  type: string
                                value:
                                  description: Must be a valid serialized protocol buffer of the above specified type.
                                  format: byte
                                  type: string
                              type: object
                            delegator_shares:
                              description: delegator_shares defines total shares issued to a validator's delegators.
                              type: string
                            description:
                              description: description defines the description terms for the validator.
                              properties:
                                details:
                                  description: details define other optional details.
                                  type: string
                                identity:
                                  description: identity defines an optional identity signature (ex. UPort or Keybase).
                                  type: string
                                moniker:
                                  description: moniker defines a human-readable name for the validator.
                                  type: string
                                security_contact:
                                  description: security_contact defines an optional email for security contact.
                                  type: string
                                website:
                                  description: website defines an optional website link.
                                  type: string
                              type: object
                            jailed:
                              description: jailed defined whether the validator has been jailed from bonded status or not.
                              type: boolean
                            min_self_delegation:
                              description: |-
                                min_self_delegation is the validator's self declared minimum self delegation.

                                Since: cosmos-sdk 0.46
                              type: string
                            operator_address:
                              description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                              type: string
                            status:
                              default: BOND_STATUS_UNSPECIFIED
                              description: status is the validator status (bonded/unbonding/unbonded).
                              enum:
                                - BOND_STATUS_UNSPECIFIED
                                - BOND_STATUS_UNBONDED
                                - BOND_STATUS_UNBONDING
                                - BOND_STATUS_BONDED
                              type: string
                            tokens:
                              description: tokens define the delegated tokens (incl. self-delegation).
                              type: string
                            unbonding_height:
                              description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                              format: int64
                              type: string
                            unbonding_ids:
                              items:
                                format: uint64
                                type: string
                              title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                              type: array
                            unbonding_on_hold_ref_count:
                              format: int64
                              title: strictly positive if this validator's unbonding has been stopped by external modules
                              type: string
                            unbonding_time:
                              description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                              format: date-time
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: HistoricalInfo
      summary: HistoricalInfo queries the historical info for given height.
      x-stoplight:
        id: bbavxlod3379n
  /cosmos/staking/v1beta1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    properties:
                      bond_denom:
                        description: bond_denom defines the bondable coin denomination.
                        type: string
                      historical_entries:
                        description: historical_entries is the number of historical entries to persist.
                        format: int64
                        type: integer
                      max_entries:
                        description: max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
                        format: int64
                        type: integer
                      max_validators:
                        description: max_validators is the maximum number of validators.
                        format: int64
                        type: integer
                      min_commission_rate:
                        title: min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
                        type: string
                      unbonding_time:
                        description: unbonding_time is the time duration of unbonding.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: StakingParams
      summary: Parameters queries the staking parameters.
      x-stoplight:
        id: ctwmbdav6rxl1
  /cosmos/staking/v1beta1/pool:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryPoolResponse is response type for the Query/Pool RPC method.
                properties:
                  pool:
                    description: pool defines the pool info.
                    properties:
                      bonded_tokens:
                        type: string
                      not_bonded_tokens:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Pool
      summary: Pool queries the pool info.
      x-stoplight:
        id: yikfid7b0ohhl
  /cosmos/staking/v1beta1/validators:
    get:
      parameters:
        - description: status enables to query for validators matching a given status.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  validators:
                    description: validators contains all the queried validators.
                    items:
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                      properties:
                        commission:
                          description: commission defines the commission parameters.
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission rates to be used for creating a validator.
                              properties:
                                max_change_rate:
                                  description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                                  type: string
                                max_rate:
                                  description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                                  type: string
                                rate:
                                  description: 'rate is the commission rate charged to delegators, as a fraction.'
                                  type: string
                              type: object
                            update_time:
                              description: update_time is the last time the commission rate was changed.
                              format: date-time
                              type: string
                          type: object
                        consensus_pubkey:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        delegator_shares:
                          description: delegator_shares defines total shares issued to a validator's delegators.
                          type: string
                        description:
                          description: description defines the description terms for the validator.
                          properties:
                            details:
                              description: details define other optional details.
                              type: string
                            identity:
                              description: identity defines an optional identity signature (ex. UPort or Keybase).
                              type: string
                            moniker:
                              description: moniker defines a human-readable name for the validator.
                              type: string
                            security_contact:
                              description: security_contact defines an optional email for security contact.
                              type: string
                            website:
                              description: website defines an optional website link.
                              type: string
                          type: object
                        jailed:
                          description: jailed defined whether the validator has been jailed from bonded status or not.
                          type: boolean
                        min_self_delegation:
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                          type: string
                        operator_address:
                          description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                          type: string
                        status:
                          default: BOND_STATUS_UNSPECIFIED
                          description: status is the validator status (bonded/unbonding/unbonded).
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          type: string
                        tokens:
                          description: tokens define the delegated tokens (incl. self-delegation).
                          type: string
                        unbonding_height:
                          description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                          format: int64
                          type: string
                        unbonding_ids:
                          items:
                            format: uint64
                            type: string
                          title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                          type: array
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: strictly positive if this validator's unbonding has been stopped by external modules
                          type: string
                        unbonding_time:
                          description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                          format: date-time
                          type: string
                      type: object
                    type: array
                title: QueryValidatorsResponse is response type for the Query/Validators RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Validators
      summary: Validators queries all validators that match the given status.
      x-stoplight:
        id: cudpivnvpnfo6
  '/cosmos/staking/v1beta1/validators/{validator_addr}':
    get:
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  validator:
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
                    properties:
                      commission:
                        description: commission defines the commission parameters.
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission rates to be used for creating a validator.
                            properties:
                              max_change_rate:
                                description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                                type: string
                              max_rate:
                                description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                                type: string
                              rate:
                                description: 'rate is the commission rate charged to delegators, as a fraction.'
                                type: string
                            type: object
                          update_time:
                            description: update_time is the last time the commission rate was changed.
                            format: date-time
                            type: string
                        type: object
                      consensus_pubkey:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      delegator_shares:
                        description: delegator_shares defines total shares issued to a validator's delegators.
                        type: string
                      description:
                        description: description defines the description terms for the validator.
                        properties:
                          details:
                            description: details define other optional details.
                            type: string
                          identity:
                            description: identity defines an optional identity signature (ex. UPort or Keybase).
                            type: string
                          moniker:
                            description: moniker defines a human-readable name for the validator.
                            type: string
                          security_contact:
                            description: security_contact defines an optional email for security contact.
                            type: string
                          website:
                            description: website defines an optional website link.
                            type: string
                        type: object
                      jailed:
                        description: jailed defined whether the validator has been jailed from bonded status or not.
                        type: boolean
                      min_self_delegation:
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                        type: string
                      operator_address:
                        description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                        type: string
                      status:
                        default: BOND_STATUS_UNSPECIFIED
                        description: status is the validator status (bonded/unbonding/unbonded).
                        enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        type: string
                      tokens:
                        description: tokens define the delegated tokens (incl. self-delegation).
                        type: string
                      unbonding_height:
                        description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                        format: int64
                        type: string
                      unbonding_ids:
                        items:
                          format: uint64
                          type: string
                        title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                        type: array
                      unbonding_on_hold_ref_count:
                        format: int64
                        title: strictly positive if this validator's unbonding has been stopped by external modules
                        type: string
                      unbonding_time:
                        description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                        format: date-time
                        type: string
                    type: object
                title: QueryValidatorResponse is response type for the Query/Validator RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Validator
      summary: Validator queries validator info for given validator address.
      x-stoplight:
        id: 3dloaqowz0b2k
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations':
    get:
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  delegation_responses:
                    items:
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                      properties:
                        balance:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegation:
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                          properties:
                            delegator_address:
                              description: delegator_address is the encoded address of the delegator.
                              type: string
                            shares:
                              description: shares define the delegation shares received.
                              type: string
                            validator_address:
                              description: validator_address is the encoded address of the validator.
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QueryValidatorDelegationsResponse is response type for the
                  Query/ValidatorDelegations RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorDelegations
      summary: ValidatorDelegations queries delegate info for given validator.
      x-stoplight:
        id: gga5s4yhvwnmq
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}':
    get:
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDelegationResponse is response type for the Query/Delegation RPC method.
                properties:
                  delegation_response:
                    description: |-
                      DelegationResponse is equivalent to Delegation except that it contains a
                      balance in addition to shares which is more suitable for client responses.
                    properties:
                      balance:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      delegation:
                        description: |-
                          Delegation represents the bond with tokens held by an account. It is
                          owned by one delegator, and is associated with the voting power of one
                          validator.
                        properties:
                          delegator_address:
                            description: delegator_address is the encoded address of the delegator.
                            type: string
                          shares:
                            description: shares define the delegation shares received.
                            type: string
                          validator_address:
                            description: validator_address is the encoded address of the validator.
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Delegation
      summary: Delegation queries delegate info for given validator delegator pair.
      x-stoplight:
        id: v28y4bgvrg614
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation':
    get:
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDelegationResponse is response type for the Query/UnbondingDelegation
                  RPC method.
                properties:
                  unbond:
                    description: |-
                      UnbondingDelegation stores all of a single delegator's unbonding bonds
                      for a single validator in an time-ordered list.
                    properties:
                      delegator_address:
                        description: delegator_address is the encoded address of the delegator.
                        type: string
                      entries:
                        description: entries are the unbonding delegation entries.
                        items:
                          description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                          properties:
                            balance:
                              description: balance defines the tokens to receive at completion.
                              type: string
                            completion_time:
                              description: completion_time is the unix time for unbonding completion.
                              format: date-time
                              type: string
                            creation_height:
                              description: creation_height is the height which the unbonding took place.
                              format: int64
                              type: string
                            initial_balance:
                              description: initial_balance defines the tokens initially scheduled to receive at completion.
                              type: string
                            unbonding_id:
                              format: uint64
                              title: Incrementing id that uniquely identifies this entry
                              type: string
                            unbonding_on_hold_ref_count:
                              format: int64
                              title: Strictly positive if this entry's unbonding has been stopped by external modules
                              type: string
                          type: object
                        type: array
                      validator_address:
                        description: validator_address is the encoded address of the validator.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UnbondingDelegation
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      x-stoplight:
        id: 3tfasvaydhyy1
  '/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations':
    get:
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryValidatorUnbondingDelegationsResponse is response type for the
                  Query/ValidatorUnbondingDelegations RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  unbonding_responses:
                    items:
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                      properties:
                        delegator_address:
                          description: delegator_address is the encoded address of the delegator.
                          type: string
                        entries:
                          description: entries are the unbonding delegation entries.
                          items:
                            description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                            properties:
                              balance:
                                description: balance defines the tokens to receive at completion.
                                type: string
                              completion_time:
                                description: completion_time is the unix time for unbonding completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height is the height which the unbonding took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the tokens initially scheduled to receive at completion.
                                type: string
                              unbonding_id:
                                format: uint64
                                title: Incrementing id that uniquely identifies this entry
                                type: string
                              unbonding_on_hold_ref_count:
                                format: int64
                                title: Strictly positive if this entry's unbonding has been stopped by external modules
                                type: string
                            type: object
                          type: array
                        validator_address:
                          description: validator_address is the encoded address of the validator.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorUnbondingDelegations
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      x-stoplight:
        id: sifgazw5y0mo0
  /cosmos/tx/v1beta1/decode:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.TxDecodeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecode
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                TxDecodeRequest is the request type for the Service.TxDecode
                RPC method.

                Since: cosmos-sdk 0.47
              properties:
                tx_bytes:
                  description: tx_bytes is the raw transaction.
                  format: byte
                  type: string
              type: object
        required: true
      summary: TxDecode decodes the transaction.
      x-stoplight:
        id: qdxovlp14z9ve
  /cosmos/tx/v1beta1/decode/amino:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
                properties:
                  amino_json:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecodeAmino
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
              properties:
                amino_binary:
                  format: byte
                  type: string
              type: object
        required: true
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      x-stoplight:
        id: ccz8z47h6vv9j
  /cosmos/tx/v1beta1/encode:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  TxEncodeResponse is the response type for the
                  Service.TxEncode method.

                  Since: cosmos-sdk 0.47
                properties:
                  tx_bytes:
                    description: tx_bytes is the encoded transaction bytes.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.TxEncodeRequest'
        required: true
      summary: TxEncode encodes the transaction.
      x-stoplight:
        id: y961nf9h372ep
  /cosmos/tx/v1beta1/encode/amino:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
                properties:
                  amino_binary:
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncodeAmino
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
              properties:
                amino_json:
                  type: string
              type: object
        required: true
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      x-stoplight:
        id: 3swu8whnpxz34
  /cosmos/tx/v1beta1/simulate:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  SimulateResponse is the response type for the
                  Service.SimulateRPC method.
                properties:
                  gas_info:
                    description: gas_info is the information about gas used in the simulation.
                    properties:
                      gas_used:
                        description: GasUsed is the amount of gas actually consumed.
                        format: uint64
                        type: string
                      gas_wanted:
                        description: GasWanted is the maximum units of work we allow this tx to perform.
                        format: uint64
                        type: string
                    type: object
                  result:
                    description: result is the result of the simulation.
                    properties:
                      data:
                        description: |-
                          Data is any data returned from message or handler execution. It MUST be
                          length prefixed in order to separate data from multiple message executions.
                          Deprecated. This field is still populated, but prefer msg_response instead
                          because it also contains the Msg response typeURL.
                        format: byte
                        type: string
                      events:
                        description: |-
                          Events contains a slice of Event objects that were emitted during message
                          or handler execution.
                        items:
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseFinalizeBlock and ResponseCheckTx.
                            Later, transactions may be queried using these events.
                          properties:
                            attributes:
                              items:
                                description: 'EventAttribute is a single key-value pair, associated with an event.'
                                properties:
                                  index:
                                    type: boolean
                                  key:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                        type: array
                      log:
                        description: Log contains the log information from message or handler execution.
                        type: string
                      msg_responses:
                        description: |-
                          msg_responses contains the Msg handler responses type packed in Anys.

                          Since: cosmos-sdk 0.46
                        items:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: Simulate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.SimulateRequest'
        required: true
      summary: Simulate simulates executing a transaction for estimating gas usage.
      x-stoplight:
        id: s7wyx5wy9kdf1
  /cosmos/tx/v1beta1/txs:
    get:
      parameters:
        - description: |-
            events is the list of transaction event type.
            Deprecated post v0.47.x: use query instead, which should contain a valid
            events query.
          explode: true
          in: query
          name: events
          required: false
          schema:
            items:
              type: string
            type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: |2-



             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
            to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          in: query
          name: order_by
          required: false
          schema:
            default: ORDER_BY_UNSPECIFIED
            enum:
              - ORDER_BY_UNSPECIFIED
              - ORDER_BY_ASC
              - ORDER_BY_DESC
            type: string
        - description: |-
            page is the page number to query, starts at 1. If not provided, will
            default to first page.
          in: query
          name: page
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            query defines the transaction event query that is proxied to Tendermint's
            TxSearch RPC method. The query must be valid.

            Since cosmos-sdk 0.50
          in: query
          name: query
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxsEventResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetTxsEvent
      summary: GetTxsEvent fetches txs by event.
      x-stoplight:
        id: 43m0rluliu74n
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  BroadcastTxResponse is the response type for the
                  Service.BroadcastTx method.
                properties:
                  tx_response:
                    description: |-
                      TxResponse defines a structure containing relevant tx data and metadata. The
                      tags are stringified and the log is JSON decoded.
                    properties:
                      info:
                        description: Additional information. May be non-deterministic.
                        type: string
                      code:
                        description: Response code.
                        format: int64
                        type: integer
                      codespace:
                        title: Namespace for the Code
                        type: string
                      data:
                        description: 'Result bytes, if any.'
                        type: string
                      events:
                        description: |-
                          Events defines all the events emitted by processing a transaction. Note,
                          these events include those emitted by processing all the messages and those
                          emitted from the ante. Whereas Logs contains the events, with
                          additional metadata, emitted only by processing the messages.

                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                        items:
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseFinalizeBlock and ResponseCheckTx.
                            Later, transactions may be queried using these events.
                          properties:
                            attributes:
                              items:
                                description: 'EventAttribute is a single key-value pair, associated with an event.'
                                properties:
                                  index:
                                    type: boolean
                                  key:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                        type: array
                      gas_used:
                        description: Amount of gas consumed by transaction.
                        format: int64
                        type: string
                      gas_wanted:
                        description: Amount of gas requested for transaction.
                        format: int64
                        type: string
                      height:
                        format: int64
                        title: The block height
                        type: string
                      logs:
                        description: The output of the application's logger (typed). May be non-deterministic.
                        items:
                          description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
                          properties:
                            events:
                              description: |-
                                Events contains a slice of Event objects that were emitted during some
                                execution.
                              items:
                                description: |-
                                  StringEvent defines en Event object wrapper where all the attributes
                                  contain key/value pairs that are strings instead of raw bytes.
                                properties:
                                  attributes:
                                    items:
                                      description: |-
                                        Attribute defines an attribute wrapper where the key and value are
                                        strings instead of raw bytes.
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  type:
                                    type: string
                                type: object
                              type: array
                            log:
                              type: string
                            msg_index:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      raw_log:
                        description: |-
                          The output of the application's logger (raw string). May be
                          non-deterministic.
                        type: string
                      timestamp:
                        description: |-
                          Time of the previous block. For heights > 1, it's the weighted median of
                          the timestamps of the valid votes in the block.LastCommit. For height == 1,
                          it's genesis time.
                        type: string
                      tx:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      txhash:
                        description: The transaction hash.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: BroadcastTx
      requestBody:
        content:
          application/json:
            schema:
              description: |-
                BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
                RPC method.
              properties:
                mode:
                  default: BROADCAST_MODE_UNSPECIFIED
                  description: |-
                    BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
                    method.

                     - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                     - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
                    BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
                     - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
                    for a CheckTx execution response only.
                     - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
                    returns immediately.
                  enum:
                    - BROADCAST_MODE_UNSPECIFIED
                    - BROADCAST_MODE_BLOCK
                    - BROADCAST_MODE_SYNC
                    - BROADCAST_MODE_ASYNC
                  type: string
                tx_bytes:
                  description: tx_bytes is the raw transaction.
                  format: byte
                  type: string
              type: object
        required: true
      summary: BroadcastTx broadcast transaction.
      x-stoplight:
        id: sygbp3npy0dv2
  '/cosmos/tx/v1beta1/txs/block/{height}':
    get:
      parameters:
        - description: height is the height of the block to query.
          in: path
          name: height
          required: true
          schema:
            format: int64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs
      summary: GetBlockWithTxs fetches a block with decoded txs.
      x-stoplight:
        id: qbmlbkuehc0q1
  '/cosmos/tx/v1beta1/txs/{hash}':
    get:
      parameters:
        - description: 'hash is the tx hash to query, encoded as a hex string.'
          in: path
          name: hash
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Service
      operationId: GetTx
      summary: GetTx fetches a tx by hash.
      x-stoplight:
        id: 4hc6bq0su5o80
  '/cosmos/upgrade/v1beta1/applied_plan/{name}':
    get:
      parameters:
        - description: name is the name of the applied plan to query for.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
                  method.
                properties:
                  height:
                    description: height is the block height at which the plan was applied.
                    format: int64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AppliedPlan
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      x-stoplight:
        id: hk58mqynad246
  /cosmos/upgrade/v1beta1/authority:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'Since: cosmos-sdk 0.46'
                properties:
                  address:
                    type: string
                title: QueryAuthorityResponse is the response type for Query/Authority
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority
      summary: Returns the account with authority to conduct upgrades
      x-stoplight:
        id: m6hlsevo5ngri
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
                  method.
                properties:
                  plan:
                    description: plan is the current upgrade plan.
                    properties:
                      info:
                        title: |-
                          Any application specific upgrade info to be included on-chain
                          such as a git commit that validators could automatically upgrade to
                        type: string
                      height:
                        description: The height at which the upgrade must be performed.
                        format: int64
                        type: string
                      name:
                        description: |-
                          Sets the name for the upgrade. This name will be used by the upgraded
                          version of the software to apply any special "on-upgrade" commands during
                          the first BeginBlock method after the upgrade is applied. It is also used
                          to detect whether a software version can handle a given upgrade. If no
                          upgrade handler with this name has been set in the software, it will be
                          assumed that the software is out-of-date when the upgrade Time or Height is
                          reached and the software will exit.
                        type: string
                      time:
                        description: |-
                          Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                          has been removed from the SDK.
                          If this field is not empty, an error will be thrown.
                        format: date-time
                        type: string
                      upgraded_client_state:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CurrentPlan
      summary: CurrentPlan queries the current upgrade plan.
      x-stoplight:
        id: mbhjxl2tb2nev
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      parameters:
        - description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          name: module_name
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
                  RPC method.

                  Since: cosmos-sdk 0.43
                properties:
                  module_versions:
                    description: module_versions is a list of module names with their consensus versions.
                    items:
                      description: |-
                        ModuleVersion specifies a module and its consensus version.

                        Since: cosmos-sdk 0.43
                      properties:
                        name:
                          title: name of the app module
                          type: string
                        version:
                          format: uint64
                          title: consensus version of the app module
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      summary: ModuleVersions queries the list of module versions from state.
      x-stoplight:
        id: xyi7mey4cu3ie
  '/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}':
    get:
      parameters:
        - description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          in: path
          name: last_height
          required: true
          schema:
            format: int64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
                  RPC method.
                properties:
                  upgraded_consensus_state:
                    format: byte
                    title: 'Since: cosmos-sdk 0.43'
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UpgradedConsensusState
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
        This rpc is deprecated now that IBC has its own replacement
        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      x-stoplight:
        id: npiqyzuduqlws
  /cosmwasm/wasm/v1/code:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  code_infos:
                    items:
                      properties:
                        code_id:
                          format: uint64
                          type: string
                        creator:
                          type: string
                        data_hash:
                          format: byte
                          type: string
                        instantiate_permission:
                          description: AccessConfig access control type.
                          properties:
                            addresses:
                              items:
                                type: string
                              type: array
                            permission:
                              default: ACCESS_TYPE_UNSPECIFIED
                              description: |-
                                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                              enum:
                                - ACCESS_TYPE_UNSPECIFIED
                                - ACCESS_TYPE_NOBODY
                                - ACCESS_TYPE_EVERYBODY
                                - ACCESS_TYPE_ANY_OF_ADDRESSES
                              title: AccessType permission types
                              type: string
                          type: object
                      title: CodeInfoResponse contains code meta data from CodeInfo
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: QueryCodesResponse is the response type for the Query/Codes RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Codes
      summary: Codes gets the metadata for all stored wasm codes
      x-stoplight:
        id: lemirwarxpw52
  '/cosmwasm/wasm/v1/code/{code_id}':
    get:
      parameters:
        - in: path
          name: code_id
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  code_info:
                    properties:
                      code_id:
                        format: uint64
                        type: string
                      creator:
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      instantiate_permission:
                        description: AccessConfig access control type.
                        properties:
                          addresses:
                            items:
                              type: string
                            type: array
                          permission:
                            default: ACCESS_TYPE_UNSPECIFIED
                            description: |-
                              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                            enum:
                              - ACCESS_TYPE_UNSPECIFIED
                              - ACCESS_TYPE_NOBODY
                              - ACCESS_TYPE_EVERYBODY
                              - ACCESS_TYPE_ANY_OF_ADDRESSES
                            title: AccessType permission types
                            type: string
                        type: object
                    title: CodeInfoResponse contains code meta data from CodeInfo
                    type: object
                  data:
                    format: byte
                    type: string
                title: QueryCodeResponse is the response type for the Query/Code RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CosmwasmCode
      summary: Code gets the binary code and metadata for a singe wasm code
      x-stoplight:
        id: 3qet77ek3aidz
  '/cosmwasm/wasm/v1/code/{code_id}/contracts':
    get:
      parameters:
        - in: path
          name: code_id
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  contracts:
                    items:
                      type: string
                    title: contracts are a set of contract addresses
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QueryContractsByCodeResponse is the response type for the
                  Query/ContractsByCode RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ContractsByCode
      summary: ContractsByCode lists all smart contracts for a code id
      x-stoplight:
        id: iwf77oqm1cxzt
  /cosmwasm/wasm/v1/codes/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      code_upload_access:
                        description: AccessConfig access control type.
                        properties:
                          addresses:
                            items:
                              type: string
                            type: array
                          permission:
                            default: ACCESS_TYPE_UNSPECIFIED
                            description: |-
                              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                            enum:
                              - ACCESS_TYPE_UNSPECIFIED
                              - ACCESS_TYPE_NOBODY
                              - ACCESS_TYPE_EVERYBODY
                              - ACCESS_TYPE_ANY_OF_ADDRESSES
                            title: AccessType permission types
                            type: string
                        type: object
                      instantiate_default_permission:
                        default: ACCESS_TYPE_UNSPECIFIED
                        description: |-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        enum:
                          - ACCESS_TYPE_UNSPECIFIED
                          - ACCESS_TYPE_NOBODY
                          - ACCESS_TYPE_EVERYBODY
                          - ACCESS_TYPE_ANY_OF_ADDRESSES
                        title: AccessType permission types
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CosmwasmParams
      summary: Params gets the module params
      x-stoplight:
        id: vyp4wf1h40ixu
  /cosmwasm/wasm/v1/codes/pinned:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  code_ids:
                    items:
                      format: uint64
                      type: string
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QueryPinnedCodesResponse is the response type for the
                  Query/PinnedCodes RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PinnedCodes
      summary: PinnedCodes gets the pinned code ids
      x-stoplight:
        id: rjhu4w0t566zp
  '/cosmwasm/wasm/v1/contract/{address}':
    get:
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  address:
                    title: address is the address of the contract
                    type: string
                  contract_info:
                    properties:
                      admin:
                        title: Admin is an optional address that can execute migrations
                        type: string
                      code_id:
                        format: uint64
                        title: CodeID is the reference to the stored Wasm code
                        type: string
                      created:
                        description: Created Tx position when the contract was instantiated.
                        properties:
                          block_height:
                            format: uint64
                            title: BlockHeight is the block the contract was created at
                            type: string
                          tx_index:
                            format: uint64
                            title: |-
                              TxIndex is a monotonic counter within the block (actual transaction index,
                              or gas consumed)
                            type: string
                        type: object
                      creator:
                        title: Creator address who initially instantiated the contract
                        type: string
                      extension:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        type: object
                      ibc_port_id:
                        type: string
                      label:
                        description: Label is optional metadata to be stored with a contract instance.
                        type: string
                    title: ContractInfo stores a WASM contract instance
                    type: object
                title: |-
                  QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
                  method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ContractInfo
      summary: ContractInfo gets the contract meta data
      x-stoplight:
        id: 6nori41dy0o6n
  '/cosmwasm/wasm/v1/contract/{address}/history':
    get:
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  entries:
                    items:
                      description: ContractCodeHistoryEntry metadata to a contract.
                      properties:
                        code_id:
                          format: uint64
                          title: CodeID is the reference to the stored WASM code
                          type: string
                        msg:
                          format: byte
                          type: string
                        operation:
                          default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                          description: |-
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                          enum:
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                          title: ContractCodeHistoryOperationType actions that caused a code change
                          type: string
                        updated:
                          description: Updated Tx position when the operation was executed.
                          properties:
                            block_height:
                              format: uint64
                              title: BlockHeight is the block the contract was created at
                              type: string
                            tx_index:
                              format: uint64
                              title: |-
                                TxIndex is a monotonic counter within the block (actual transaction index,
                                or gas consumed)
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QueryContractHistoryResponse is the response type for the
                  Query/ContractHistory RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ContractHistory
      summary: ContractHistory gets the contract code history
      x-stoplight:
        id: gnl9wnu1pcyw1
  '/cosmwasm/wasm/v1/contract/{address}/raw/{query_data}':
    get:
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          schema:
            type: string
        - in: path
          name: query_data
          required: true
          schema:
            format: byte
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    format: byte
                    title: Data contains the raw store data
                    type: string
                title: |-
                  QueryRawContractStateResponse is the response type for the
                  Query/RawContractState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: RawContractState
      summary: RawContractState gets single key from the raw store data of a contract
      x-stoplight:
        id: l5l2knoe955ea
  '/cosmwasm/wasm/v1/contract/{address}/smart/{query_data}':
    get:
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: QueryData contains the query data passed to the contract
          in: path
          name: query_data
          required: true
          schema:
            format: byte
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    format: byte
                    title: Data contains the json data returned from the smart contract
                    type: string
                title: |-
                  QuerySmartContractStateResponse is the response type for the
                  Query/SmartContractState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SmartContractState
      summary: SmartContractState get smart query result from the contract
      x-stoplight:
        id: vd9usnhu42ou8
  '/cosmwasm/wasm/v1/contract/{address}/state':
    get:
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  models:
                    items:
                      properties:
                        key:
                          format: byte
                          title: hex-encode key to read it better (this is often ascii)
                          type: string
                        value:
                          format: byte
                          title: base64-encode raw value
                          type: string
                      title: Model is a struct that holds a KV pair
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: |-
                  QueryAllContractStateResponse is the response type for the
                  Query/AllContractState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AllContractState
      summary: AllContractState gets all raw store data for a single contract
      x-stoplight:
        id: e4osws8hhlpn4
  '/cosmwasm/wasm/v1/contracts/creator/{creator_address}':
    get:
      parameters:
        - description: CreatorAddress is the address of contract creator
          in: path
          name: creator_address
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryContractsByCreatorResponse is the response type for the
                  Query/ContractsByCreator RPC method.
                properties:
                  contract_addresses:
                    items:
                      type: string
                    title: ContractAddresses result set
                    type: array
                  pagination:
                    description: Pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ContractsByCreator
      summary: ContractsByCreator gets the contracts by creator
      x-stoplight:
        id: h1awdn7aurqqs
  '/ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/fee_enabled':
    get:
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: unique port identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  fee_enabled:
                    title: boolean flag representing the fee enabled channel status
                    type: boolean
                title: QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: FeeEnabledChannel
      summary: FeeEnabledChannel returns true if the provided port and channel identifiers belong to a fee enabled channel
      x-stoplight:
        id: cqi5pthw0puvx
  '/ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/incentivized_packets':
    get:
      parameters:
        - in: path
          name: channel_id
          required: true
          schema:
            type: string
        - in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: Height to query at.
          in: query
          name: query_height
          required: false
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  incentivized_packets:
                    items:
                      properties:
                        packet_fees:
                          items:
                            properties:
                              fee:
                                properties:
                                  ack_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet acknowledgement fee
                                    type: array
                                  recv_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet receive fee
                                    type: array
                                  timeout_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet timeout fee
                                    type: array
                                title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                                type: object
                              refund_address:
                                title: the refund address for unspent fees
                                type: string
                              relayers:
                                items:
                                  type: string
                                title: optional list of relayers permitted to receive fees
                                type: array
                            title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                            type: object
                          title: list of packet fees
                          type: array
                        packet_id:
                          properties:
                            channel_id:
                              title: channel unique identifier
                              type: string
                            port_id:
                              title: channel port identifier
                              type: string
                            sequence:
                              format: uint64
                              title: packet sequence
                              type: string
                          title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
                          type: object
                      title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
                      type: object
                    title: Map of all incentivized_packets
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IncentivizedPacketsForChannel
      summary: Gets all incentivized packets for a specific channel
      x-stoplight:
        id: 1a6z9xu70r00i
  '/ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/counterparty_payee':
    get:
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: the relayer address to which the counterparty is registered
          in: path
          name: relayer
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  counterparty_payee:
                    title: the counterparty payee address used to compensate forward relaying
                    type: string
                title: QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CounterpartyPayee
      summary: CounterpartyPayee returns the registered counterparty payee for forward relaying
      x-stoplight:
        id: tpw47b0jvzohz
  '/ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/payee':
    get:
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: the relayer address to which the distribution address is registered
          in: path
          name: relayer
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  payee_address:
                    title: the payee address to which packet fees are paid out
                    type: string
                title: QueryPayeeResponse defines the response type for the Payee rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Payee
      summary: Payee returns the registered payee address for a specific channel given the relayer address
      x-stoplight:
        id: 7hyypf2vtbe2z
  '/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/incentivized_packet':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          schema:
            type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: packet_id.sequence
          required: true
          schema:
            format: uint64
            type: string
        - description: block height at which to query.
          in: query
          name: query_height
          required: false
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  incentivized_packet:
                    properties:
                      packet_fees:
                        items:
                          properties:
                            fee:
                              properties:
                                ack_fee:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  title: the packet acknowledgement fee
                                  type: array
                                recv_fee:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  title: the packet receive fee
                                  type: array
                                timeout_fee:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  title: the packet timeout fee
                                  type: array
                              title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                              type: object
                            refund_address:
                              title: the refund address for unspent fees
                              type: string
                            relayers:
                              items:
                                type: string
                              title: optional list of relayers permitted to receive fees
                              type: array
                          title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                          type: object
                        title: list of packet fees
                        type: array
                      packet_id:
                        properties:
                          channel_id:
                            title: channel unique identifier
                            type: string
                          port_id:
                            title: channel port identifier
                            type: string
                          sequence:
                            format: uint64
                            title: packet sequence
                            type: string
                        title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
                        type: object
                    title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
                    type: object
                title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IncentivizedPacket
      summary: IncentivizedPacket returns all packet fees for a packet given its identifier
      x-stoplight:
        id: 9tfdcrqhuvcdr
  '/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_ack_fees':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          schema:
            type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: packet_id.sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  ack_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the total packet acknowledgement fees
                    type: array
                title: QueryTotalAckFeesResponse defines the response type for the TotalAckFees rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TotalAckFees
      summary: TotalAckFees returns the total acknowledgement fees for a packet given its identifier
      x-stoplight:
        id: 57qkb4xtsfmsy
  '/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_recv_fees':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          schema:
            type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: packet_id.sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  recv_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the total packet receive fees
                    type: array
                title: QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TotalRecvFees
      summary: TotalRecvFees returns the total receive fees for a packet given its identifier
      x-stoplight:
        id: 5eqhp7jo8vygq
  '/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_timeout_fees':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          schema:
            type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: packet_id.sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  timeout_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the total packet timeout fees
                    type: array
                title: QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TotalTimeoutFees
      summary: TotalTimeoutFees returns the total timeout fees for a packet given its identifier
      x-stoplight:
        id: ugekfz24o4frz
  /ibc/apps/fee/v1/fee_enabled:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: block height at which to query.
          in: query
          name: query_height
          required: false
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  fee_enabled_channels:
                    items:
                      properties:
                        channel_id:
                          title: unique channel identifier
                          type: string
                        port_id:
                          title: unique port identifier
                          type: string
                      title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
                      type: object
                    title: list of fee enabled channels
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: FeeEnabledChannels
      summary: FeeEnabledChannels returns a list of all fee enabled channels
      x-stoplight:
        id: h9coygc3ionus
  /ibc/apps/fee/v1/incentivized_packets:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: block height at which to query.
          in: query
          name: query_height
          required: false
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  incentivized_packets:
                    items:
                      properties:
                        packet_fees:
                          items:
                            properties:
                              fee:
                                properties:
                                  ack_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet acknowledgement fee
                                    type: array
                                  recv_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet receive fee
                                    type: array
                                  timeout_fee:
                                    items:
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                      properties:
                                        amount:
                                          type: string
                                        denom:
                                          type: string
                                      type: object
                                    title: the packet timeout fee
                                    type: array
                                title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                                type: object
                              refund_address:
                                title: the refund address for unspent fees
                                type: string
                              relayers:
                                items:
                                  type: string
                                title: optional list of relayers permitted to receive fees
                                type: array
                            title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                            type: object
                          title: list of packet fees
                          type: array
                        packet_id:
                          properties:
                            channel_id:
                              title: channel unique identifier
                              type: string
                            port_id:
                              title: channel port identifier
                              type: string
                            sequence:
                              format: uint64
                              title: packet sequence
                              type: string
                          title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
                          type: object
                      title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
                      type: object
                    title: list of identified fees for incentivized packets
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets rpc
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IncentivizedPackets
      summary: IncentivizedPackets returns all incentivized packets and their associated fees
      x-stoplight:
        id: lzbkn14nyxfye
  '/ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}':
    get:
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryInterchainAccountResponse the response type for the Query/InterchainAccount RPC method.
                properties:
                  address:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: InterchainAccount
      summary: InterchainAccount returns the interchain account address for a given owner address on a given connection
      x-stoplight:
        id: d9iw3twcferrx
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      controller_enabled:
                        description: controller_enabled enables or disables the controller submodule.
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ICAControllerParams
      summary: Params queries all parameters of the ICA controller submodule.
      x-stoplight:
        id: ngmpizm8yflm6
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      allow_messages:
                        description: allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
                        items:
                          type: string
                        type: array
                      host_enabled:
                        description: host_enabled enables or disables the host submodule.
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ICAHostParams
      summary: Params queries all parameters of the ICA host submodule.
      x-stoplight:
        id: ifmsrr8j70s90
  '/ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address':
    get:
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: unique port identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method.
                properties:
                  escrow_address:
                    title: the escrow account address
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: EscrowAddress
      summary: EscrowAddress returns the escrow address for a particular port and channel id.
      x-stoplight:
        id: g3ojznyjtpcar
  '/ibc/apps/transfer/v1/denom_hashes/{trace}':
    get:
      parameters:
        - description: 'The denomination trace ([port_id]/[channel_id])+/[denom]'
          in: path
          name: trace
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomHashResponse is the response type for the Query/DenomHash RPC
                  method.
                properties:
                  hash:
                    description: hash (in hex format) of the denomination trace information.
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomHash
      summary: DenomHash queries a denomination hash information.
      x-stoplight:
        id: 3wdogxrle706n
  /ibc/apps/transfer/v1/denom_traces:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
                  method.
                properties:
                  denom_traces:
                    description: denom_traces returns all denominations trace information.
                    items:
                      description: |-
                        DenomTrace contains the base denomination for ICS20 fungible tokens and the
                        source tracing information path.
                      properties:
                        base_denom:
                          description: base denomination of the relayed fungible token.
                          type: string
                        path:
                          description: |-
                            path defines the chain of port/channel identifiers used for tracing the
                            source of the fungible token.
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomTraces
      summary: DenomTraces queries all denomination traces.
      x-stoplight:
        id: d4cw5aus509uz
  '/ibc/apps/transfer/v1/denom_traces/{hash}':
    get:
      parameters:
        - description: hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information.
          in: path
          name: hash
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
                  method.
                properties:
                  denom_trace:
                    description: |-
                      DenomTrace contains the base denomination for ICS20 fungible tokens and the
                      source tracing information path.
                    properties:
                      base_denom:
                        description: base denomination of the relayed fungible token.
                        type: string
                      path:
                        description: |-
                          path defines the chain of port/channel identifiers used for tracing the
                          source of the fungible token.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DenomTrace
      summary: DenomTrace queries a denomination trace information.
      x-stoplight:
        id: ik1pky9aq7jrh
  '/ibc/apps/transfer/v1/denoms/{denom}/total_escrow':
    get:
      parameters:
        - in: path
          name: denom
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method.
                properties:
                  amount:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TotalEscrowForDenom
      summary: TotalEscrowForDenom returns the total amount of tokens in escrow based on the denom.
      x-stoplight:
        id: ygov02gfx1ai5
  /ibc/apps/transfer/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      receive_enabled:
                        description: |-
                          receive_enabled enables or disables all cross-chain token transfers to this
                          chain.
                        type: boolean
                      send_enabled:
                        description: |-
                          send_enabled enables or disables all cross-chain token transfers from this
                          chain.
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IBCTransferParams
      summary: Params queries all parameters of the ibc-transfer module.
      x-stoplight:
        id: xukr6lwmznt9p
  /ibc/core/channel/v1/channels:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryChannelsResponse is the response type for the Query/Channels RPC method.
                properties:
                  channels:
                    description: list of stored channels of the chain.
                    items:
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                      properties:
                        channel_id:
                          title: channel identifier
                          type: string
                        connection_hops:
                          items:
                            type: string
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                        counterparty:
                          properties:
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                            port_id:
                              description: port on the counterparty chain which owns the other end of the channel.
                              type: string
                          title: counterparty channel end
                          type: object
                        ordering:
                          default: ORDER_NONE_UNSPECIFIED
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          enum:
                            - ORDER_NONE_UNSPECIFIED
                            - ORDER_UNORDERED
                            - ORDER_ORDERED
                          title: whether the channel is ordered or unordered
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        state:
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                             - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                             - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                          enum:
                            - STATE_UNINITIALIZED_UNSPECIFIED
                            - STATE_INIT
                            - STATE_TRYOPEN
                            - STATE_OPEN
                            - STATE_CLOSED
                            - STATE_FLUSHING
                            - STATE_FLUSHCOMPLETE
                          title: current state of the channel end
                          type: string
                        upgrade_sequence:
                          format: uint64
                          title: |-
                            upgrade sequence indicates the latest upgrade attempt performed by this channel
                            the value of 0 indicates the channel has never been upgraded
                          type: string
                        version:
                          title: 'opaque channel version, which is agreed upon during the handshake'
                          type: string
                      type: object
                    type: array
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Channels
      summary: Channels queries all the IBC channels of a chain.
      x-stoplight:
        id: krkktkqf9a5cm
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryChannelResponse is the response type for the Query/Channel RPC method.
                  Besides the Channel end, it includes a proof and the height from which the
                  proof was retrieved.
                properties:
                  channel:
                    description: |-
                      Channel defines pipeline for exactly-once packet delivery between specific
                      modules on separate blockchains, which has at least one end capable of
                      sending packets and one end capable of receiving packets.
                    properties:
                      connection_hops:
                        items:
                          type: string
                        title: |-
                          list of connection identifiers, in order, along which packets sent on
                          this channel will travel
                        type: array
                      counterparty:
                        properties:
                          channel_id:
                            title: channel end on the counterparty chain
                            type: string
                          port_id:
                            description: port on the counterparty chain which owns the other end of the channel.
                            type: string
                        title: counterparty channel end
                        type: object
                      ordering:
                        default: ORDER_NONE_UNSPECIFIED
                        description: |-
                          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                          which they were sent.
                           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        title: whether the channel is ordered or unordered
                        type: string
                      state:
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        description: |-
                          State defines if a channel is in one of the following states:
                          CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                           - STATE_INIT: A channel has just started the opening handshake.
                           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                           - STATE_OPEN: A channel has completed the handshake. Open channels are
                          ready to send and receive packets.
                           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                          packets.
                           - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                           - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                        enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                          - STATE_FLUSHING
                          - STATE_FLUSHCOMPLETE
                        title: current state of the channel end
                        type: string
                      upgrade_sequence:
                        format: uint64
                        title: |-
                          upgrade sequence indicates the latest upgrade attempt performed by this channel
                          the value of 0 indicates the channel has never been upgraded
                        type: string
                      version:
                        title: 'opaque channel version, which is agreed upon during the handshake'
                        type: string
                    title: channel associated with the request identifiers
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Channel
      summary: Channel queries an IBC Channel.
      x-stoplight:
        id: p50ukyse4g76p
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  identified_client_state:
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        title: client state
                        type: object
                    title: client state associated with the channel
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ChannelClientState
      summary: |-
        ChannelClientState queries for the client state for the channel associated
        with the provided channel identifiers.
      x-stoplight:
        id: w29p28w6c4pxj
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: revision number of the consensus state
          in: path
          name: revision_number
          required: true
          schema:
            format: uint64
            type: string
        - description: revision height of the consensus state
          in: path
          name: revision_height
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  consensus_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: consensus state associated with the channel
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ChannelConsensusState
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      x-stoplight:
        id: sdtx3uzrjm37o
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  next_sequence_receive:
                    format: uint64
                    title: next sequence receive number
                    type: string
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QuerySequenceResponse is the response type for the
                  Query/QueryNextSequenceReceiveResponse RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: NextSequenceReceive
      summary: NextSequenceReceive returns the next receive sequence for a given channel.
      x-stoplight:
        id: e24fgbtn5em4u
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  next_sequence_send:
                    format: uint64
                    title: next sequence send number
                    type: string
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryNextSequenceSendResponse is the request type for the
                  Query/QueryNextSequenceSend RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: NextSequenceSend
      summary: NextSequenceSend returns the next send sequence for a given channel.
      x-stoplight:
        id: keq1r8q57jrqw
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
        - description: list of packet sequences.
          explode: true
          in: query
          name: packet_commitment_sequences
          required: false
          schema:
            items:
              format: uint64
              type: string
            type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  acknowledgements:
                    items:
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                      properties:
                        channel_id:
                          description: channel unique identifier.
                          type: string
                        data:
                          description: embedded data that represents packet state.
                          format: byte
                          type: string
                        port_id:
                          description: channel port identifier.
                          type: string
                        sequence:
                          description: packet sequence.
                          format: uint64
                          type: string
                      type: object
                    type: array
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                title: |-
                  QueryPacketAcknowledgemetsResponse is the request type for the
                  Query/QueryPacketAcknowledgements RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PacketAcknowledgements
      summary: |-
        PacketAcknowledgements returns all the packet acknowledgements associated
        with a channel.
      x-stoplight:
        id: iojqzivmaq98k
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  acknowledgement:
                    format: byte
                    title: packet associated with the request fields
                    type: string
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryPacketAcknowledgementResponse defines the client query response for a
                  packet which also includes a proof and the height from which the
                  proof was retrieved
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PacketAcknowledgement
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      x-stoplight:
        id: qtp22qs6078gx
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  commitments:
                    items:
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                      properties:
                        channel_id:
                          description: channel unique identifier.
                          type: string
                        data:
                          description: embedded data that represents packet state.
                          format: byte
                          type: string
                        port_id:
                          description: channel port identifier.
                          type: string
                        sequence:
                          description: packet sequence.
                          format: uint64
                          type: string
                      type: object
                    type: array
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                title: |-
                  QueryPacketCommitmentsResponse is the request type for the
                  Query/QueryPacketCommitments RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PacketCommitments
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      x-stoplight:
        id: 2bvrfyrgqpu20
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: list of acknowledgement sequences
          in: path
          name: packet_ack_sequences
          required: true
          schema:
            items:
              format: uint64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  sequences:
                    items:
                      format: uint64
                      type: string
                    title: list of unreceived acknowledgement sequences
                    type: array
                title: |-
                  QueryUnreceivedAcksResponse is the response type for the
                  Query/UnreceivedAcks RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UnreceivedAcks
      summary: |-
        UnreceivedAcks returns all the unreceived IBC acknowledgements associated
        with a channel and sequences.
      x-stoplight:
        id: fq66yer1jfdik
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: list of packet sequences
          in: path
          name: packet_commitment_sequences
          required: true
          schema:
            items:
              format: uint64
              type: string
            minItems: 1
            type: array
          style: simple
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  sequences:
                    items:
                      format: uint64
                      type: string
                    title: list of unreceived packet sequences
                    type: array
                title: |-
                  QueryUnreceivedPacketsResponse is the response type for the
                  Query/UnreceivedPacketCommitments RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UnreceivedPackets
      summary: |-
        UnreceivedPackets returns all the unreceived IBC packets associated with a
        channel and sequences.
      x-stoplight:
        id: himt49jn25xey
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  commitment:
                    format: byte
                    title: packet associated with the request fields
                    type: string
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryPacketCommitmentResponse defines the client query response for a packet
                  which also includes a proof and the height from which the proof was
                  retrieved
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PacketCommitment
      summary: PacketCommitment queries a stored packet commitment hash.
      x-stoplight:
        id: 5uz4n1jimb1gk
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}':
    get:
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          schema:
            type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          schema:
            type: string
        - description: packet sequence
          in: path
          name: sequence
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                  received:
                    title: success flag for if receipt exists
                    type: boolean
                title: |-
                  QueryPacketReceiptResponse defines the client query response for a packet
                  receipt which also includes a proof, and the height from which the proof was
                  retrieved
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: PacketReceipt
      summary: |-
        PacketReceipt queries if a given packet sequence has been received on the
        queried chain
      x-stoplight:
        id: ugvt72rb9gfwk
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade':
    get:
      parameters:
        - in: path
          name: channel_id
          required: true
          schema:
            type: string
        - in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                  upgrade:
                    description: |-
                      Upgrade is a verifiable type which contains the relevant information
                      for an attempted upgrade. It provides the proposed changes to the channel
                      end, the timeout for this upgrade attempt and the next packet sequence
                      which allows the counterparty to efficiently know the highest sequence it has received.
                      The next sequence send is used for pruning and upgrading from unordered to ordered channels.
                    properties:
                      fields:
                        description: |-
                          UpgradeFields are the fields in a channel end which may be changed
                          during a channel upgrade.
                        properties:
                          connection_hops:
                            items:
                              type: string
                            type: array
                          ordering:
                            default: ORDER_NONE_UNSPECIFIED
                            description: |-
                              - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                               - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                              which they were sent.
                               - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                            enum:
                              - ORDER_NONE_UNSPECIFIED
                              - ORDER_UNORDERED
                              - ORDER_ORDERED
                            title: Order defines if a channel is ORDERED or UNORDERED
                            type: string
                          version:
                            type: string
                        type: object
                      next_sequence_send:
                        format: uint64
                        type: string
                      timeout:
                        description: |-
                          Timeout defines an execution deadline structure for 04-channel handlers.
                          This includes packet lifecycle handlers as well as the upgrade handshake handlers.
                          A valid Timeout contains either one or both of a timestamp and block height (sequence).
                        properties:
                          height:
                            description: |-
                              Normally the RevisionHeight is incremented at each height while keeping
                              RevisionNumber the same. However some consensus algorithms may choose to
                              reset the height in certain conditions e.g. hard forks, state-machine
                              breaking changes In these cases, the RevisionNumber is incremented so that
                              height continues to be monitonically increasing even as the RevisionHeight
                              gets reset
                            properties:
                              revision_height:
                                format: uint64
                                title: the height within the given revision
                                type: string
                              revision_number:
                                format: uint64
                                title: the revision that the client is currently on
                                type: string
                            title: block height after which the packet or upgrade times out
                            type: object
                          timestamp:
                            format: uint64
                            title: block timestamp (in nanoseconds) after which the packet or upgrade times out
                            type: string
                        type: object
                    type: object
                title: QueryUpgradeResponse is the response type for the QueryUpgradeResponse RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Upgrade
      summary: Upgrade returns the upgrade for a given port and channel id.
      x-stoplight:
        id: kix229cmzia5s
  '/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade_error':
    get:
      parameters:
        - in: path
          name: channel_id
          required: true
          schema:
            type: string
        - in: path
          name: port_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  error_receipt:
                    description: |-
                      ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the
                      upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the
                      next sequence.
                    properties:
                      message:
                        title: the error message detailing the cause of failure
                        type: string
                      sequence:
                        format: uint64
                        title: the channel upgrade sequence
                        type: string
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: QueryUpgradeErrorResponse is the response type for the Query/QueryUpgradeError RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UpgradeError
      summary: UpgradeError returns the error receipt if the upgrade handshake failed.
      x-stoplight:
        id: s5tzmt787u1so
  '/ibc/core/channel/v1/connections/{connection}/channels':
    get:
      parameters:
        - description: connection unique identifier
          in: path
          name: connection
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  channels:
                    description: list of channels associated with a connection.
                    items:
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                      properties:
                        channel_id:
                          title: channel identifier
                          type: string
                        connection_hops:
                          items:
                            type: string
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                        counterparty:
                          properties:
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                            port_id:
                              description: port on the counterparty chain which owns the other end of the channel.
                              type: string
                          title: counterparty channel end
                          type: object
                        ordering:
                          default: ORDER_NONE_UNSPECIFIED
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          enum:
                            - ORDER_NONE_UNSPECIFIED
                            - ORDER_UNORDERED
                            - ORDER_ORDERED
                          title: whether the channel is ordered or unordered
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        state:
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                             - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                             - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                          enum:
                            - STATE_UNINITIALIZED_UNSPECIFIED
                            - STATE_INIT
                            - STATE_TRYOPEN
                            - STATE_OPEN
                            - STATE_CLOSED
                            - STATE_FLUSHING
                            - STATE_FLUSHCOMPLETE
                          title: current state of the channel end
                          type: string
                        upgrade_sequence:
                          format: uint64
                          title: |-
                            upgrade sequence indicates the latest upgrade attempt performed by this channel
                            the value of 0 indicates the channel has never been upgraded
                          type: string
                        version:
                          title: 'opaque channel version, which is agreed upon during the handshake'
                          type: string
                      type: object
                    type: array
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                title: |-
                  QueryConnectionChannelsResponse is the Response type for the
                  Query/QueryConnectionChannels RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConnectionChannels
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      x-stoplight:
        id: li7zcf9vnjv55
  /ibc/core/channel/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryChannelParamsResponse is the response type for the Query/ChannelParams RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      upgrade_timeout:
                        description: |-
                          Timeout defines an execution deadline structure for 04-channel handlers.
                          This includes packet lifecycle handlers as well as the upgrade handshake handlers.
                          A valid Timeout contains either one or both of a timestamp and block height (sequence).
                        properties:
                          height:
                            description: |-
                              Normally the RevisionHeight is incremented at each height while keeping
                              RevisionNumber the same. However some consensus algorithms may choose to
                              reset the height in certain conditions e.g. hard forks, state-machine
                              breaking changes In these cases, the RevisionNumber is incremented so that
                              height continues to be monitonically increasing even as the RevisionHeight
                              gets reset
                            properties:
                              revision_height:
                                format: uint64
                                title: the height within the given revision
                                type: string
                              revision_number:
                                format: uint64
                                title: the revision that the client is currently on
                                type: string
                            title: block height after which the packet or upgrade times out
                            type: object
                          timestamp:
                            format: uint64
                            title: block timestamp (in nanoseconds) after which the packet or upgrade times out
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ChannelParams
      summary: ChannelParams queries all parameters of the ibc channel submodule.
      x-stoplight:
        id: ud91vfucw9jw5
  /ibc/core/client/v1/client_states:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryClientStatesResponse is the response type for the Query/ClientStates RPC
                  method.
                properties:
                  client_states:
                    description: list of stored ClientStates of the chain.
                    items:
                      description: |-
                        IdentifiedClientState defines a client state with an additional client
                        identifier field.
                      properties:
                        client_id:
                          title: client identifier
                          type: string
                        client_state:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          title: client state
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClientStates
      summary: ClientStates queries all the IBC light clients of a chain.
      x-stoplight:
        id: htovatq69nwd9
  '/ibc/core/client/v1/client_states/{client_id}':
    get:
      parameters:
        - description: client state unique identifier
          in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryClientStateResponse is the response type for the Query/ClientState RPC
                  method. Besides the client state, it includes a proof and the height from
                  which the proof was retrieved.
                properties:
                  client_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: client state associated with the request identifier
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClientState
      summary: ClientState queries an IBC light client.
      x-stoplight:
        id: d02cmai3yjked
  '/ibc/core/client/v1/client_status/{client_id}':
    get:
      parameters:
        - description: client unique identifier
          in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
                  method. It returns the current status of the IBC client.
                properties:
                  status:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClientStatus
      summary: Status queries the status of an IBC client.
      x-stoplight:
        id: osi2koxhbcrv8
  '/ibc/core/client/v1/consensus_states/{client_id}':
    get:
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  consensus_states:
                    items:
                      description: |-
                        ConsensusStateWithHeight defines a consensus state with an additional height
                        field.
                      properties:
                        consensus_state:
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }
                                // or ...
                                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                  foo = any.unpack(Foo.getDefaultInstance());
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".

                            JSON

                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                          properties:
                            type_url:
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer of the above specified type.
                              format: byte
                              type: string
                          title: consensus state
                          type: object
                        height:
                          description: |-
                            Normally the RevisionHeight is incremented at each height while keeping
                            RevisionNumber the same. However some consensus algorithms may choose to
                            reset the height in certain conditions e.g. hard forks, state-machine
                            breaking changes In these cases, the RevisionNumber is incremented so that
                            height continues to be monitonically increasing even as the RevisionHeight
                            gets reset
                          properties:
                            revision_height:
                              format: uint64
                              title: the height within the given revision
                              type: string
                            revision_number:
                              format: uint64
                              title: the revision that the client is currently on
                              type: string
                          title: consensus state height
                          type: object
                      type: object
                    title: consensus states associated with the identifier
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                title: |-
                  QueryConsensusStatesResponse is the response type for the
                  Query/ConsensusStates RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConsensusStates
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      x-stoplight:
        id: aqfmk225716po
  '/ibc/core/client/v1/consensus_states/{client_id}/heights':
    get:
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  consensus_state_heights:
                    items:
                      description: |-
                        Normally the RevisionHeight is incremented at each height while keeping
                        RevisionNumber the same. However some consensus algorithms may choose to
                        reset the height in certain conditions e.g. hard forks, state-machine
                        breaking changes In these cases, the RevisionNumber is incremented so that
                        height continues to be monitonically increasing even as the RevisionHeight
                        gets reset
                      properties:
                        revision_height:
                          format: uint64
                          title: the height within the given revision
                          type: string
                        revision_number:
                          format: uint64
                          title: the revision that the client is currently on
                          type: string
                      title: |-
                        Height is a monotonically increasing data type
                        that can be compared against another Height for the purposes of updating and
                        freezing clients
                      type: object
                    title: consensus state heights
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                title: |-
                  QueryConsensusStateHeightsResponse is the response type for the
                  Query/ConsensusStateHeights RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConsensusStateHeights
      summary: ConsensusStateHeights queries the height of every consensus states associated with a given client.
      x-stoplight:
        id: uq3gbzflvasbd
  '/ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}':
    get:
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          schema:
            type: string
        - description: consensus state revision number
          in: path
          name: revision_number
          required: true
          schema:
            format: uint64
            type: string
        - description: consensus state revision height
          in: path
          name: revision_height
          required: true
          schema:
            format: uint64
            type: string
        - description: |-
            latest_height overrrides the height field and queries the latest stored
            ConsensusState.
          in: query
          name: latest_height
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  consensus_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: consensus state associated with the client identifier at the given height
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: |-
                      Height is a monotonically increasing data type
                      that can be compared against another Height for the purposes of updating and
                      freezing clients
                    type: object
                title: |-
                  QueryConsensusStateResponse is the response type for the Query/ConsensusState
                  RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConsensusState
      summary: |-
        ConsensusState queries a consensus state associated with a client state at
        a given height.
      x-stoplight:
        id: 2oeyy9m1qqk5r
  /ibc/core/client/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryClientParamsResponse is the response type for the Query/ClientParams RPC
                  method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      allowed_clients:
                        description: |-
                          allowed_clients defines the list of allowed client state types which can be created
                          and interacted with. If a client type is removed from the allowed clients list, usage
                          of this client will be disabled until it is added again to the list.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClientParams
      summary: ClientParams queries all parameters of the ibc client submodule.
      x-stoplight:
        id: v2t9fj74noth9
  /ibc/core/client/v1/upgraded_client_states:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryUpgradedClientStateResponse is the response type for the
                  Query/UpgradedClientState RPC method.
                properties:
                  upgraded_client_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: client state associated with the request identifier
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: UpgradedClientState
      summary: UpgradedClientState queries an Upgraded IBC light client.
      x-stoplight:
        id: to8w84wnqpcbe
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the
                  Query/UpgradedConsensusState RPC method.
                properties:
                  upgraded_consensus_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: Consensus state associated with the request identifier
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IBCClientUpgradedConsensusState
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      x-stoplight:
        id: vixv0l2blttbs
  /ibc/core/client/v1/verify_membership:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  success:
                    description: boolean indicating success or failure of proof verification.
                    type: boolean
                title: QueryVerifyMembershipResponse is the response type for the Query/VerifyMembership RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: VerifyMembership
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block_delay:
                  format: uint64
                  title: optional block delay
                  type: string
                client_id:
                  description: client unique identifier.
                  type: string
                merkle_path:
                  description: the commitment key path.
                  properties:
                    key_path:
                      items:
                        type: string
                      type: array
                  title: |-
                    MerklePath is the path used to verify commitment proofs, which can be an
                    arbitrary structured object (defined by a commitment type).
                    MerklePath is represented from root-to-leaf
                  type: object
                proof:
                  description: the proof to be verified by the client.
                  format: byte
                  type: string
                proof_height:
                  description: |-
                    Normally the RevisionHeight is incremented at each height while keeping
                    RevisionNumber the same. However some consensus algorithms may choose to
                    reset the height in certain conditions e.g. hard forks, state-machine
                    breaking changes In these cases, the RevisionNumber is incremented so that
                    height continues to be monitonically increasing even as the RevisionHeight
                    gets reset
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: |-
                    Height is a monotonically increasing data type
                    that can be compared against another Height for the purposes of updating and
                    freezing clients
                  type: object
                time_delay:
                  format: uint64
                  title: optional time delay
                  type: string
                value:
                  description: the value which is proven.
                  format: byte
                  type: string
              title: QueryVerifyMembershipRequest is the request type for the Query/VerifyMembership RPC method
              type: object
        required: true
      summary: VerifyMembership queries an IBC light client for proof verification of a value at a given key path.
      x-stoplight:
        id: x9dsd3wyd7mvc
  '/ibc/core/connection/v1/client_connections/{client_id}':
    get:
      parameters:
        - description: client identifier associated with a connection
          in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  connection_paths:
                    description: slice of all the connection paths associated with a client.
                    items:
                      type: string
                    type: array
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was generated
                    type: object
                title: |-
                  QueryClientConnectionsResponse is the response type for the
                  Query/ClientConnections RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClientConnections
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      x-stoplight:
        id: 3pb9rv1yvsl4r
  /ibc/core/connection/v1/connections:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryConnectionsResponse is the response type for the Query/Connections RPC
                  method.
                properties:
                  connections:
                    description: list of stored connections of the chain.
                    items:
                      description: |-
                        IdentifiedConnection defines a connection with additional connection
                        identifier field.
                      properties:
                        client_id:
                          description: client associated with this connection.
                          type: string
                        counterparty:
                          description: counterparty chain associated with this connection.
                          properties:
                            client_id:
                              description: |-
                                identifies the client on the counterparty chain associated with a given
                                connection.
                              type: string
                            connection_id:
                              description: |-
                                identifies the connection end on the counterparty chain associated with a
                                given connection.
                              type: string
                            prefix:
                              description: commitment merkle prefix of the counterparty chain.
                              properties:
                                key_prefix:
                                  format: byte
                                  type: string
                              title: |-
                                MerklePrefix is merkle path prefixed to the key.
                                The constructed key from the Path and the key will be append(Path.KeyPath,
                                append(Path.KeyPrefix, key...))
                              type: object
                          type: object
                        delay_period:
                          description: delay period associated with this connection.
                          format: uint64
                          type: string
                        id:
                          description: connection identifier.
                          type: string
                        state:
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          description: current state of the connection end.
                          enum:
                            - STATE_UNINITIALIZED_UNSPECIFIED
                            - STATE_INIT
                            - STATE_TRYOPEN
                            - STATE_OPEN
                          type: string
                        versions:
                          items:
                            description: |-
                              Version defines the versioning scheme used to negotiate the IBC verison in
                              the connection handshake.
                            properties:
                              features:
                                items:
                                  type: string
                                title: list of features compatible with the specified identifier
                                type: array
                              identifier:
                                title: unique version identifier
                                type: string
                            type: object
                          title: |-
                            IBC version which can be utilised to determine encodings or protocols for
                            channels or packets utilising this connection
                          type: array
                      type: object
                    type: array
                  height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: query block height
                    type: object
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    title: pagination response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Connections
      summary: Connections queries all the IBC connections of a chain.
      x-stoplight:
        id: rq3k0h1x2ybk6
  '/ibc/core/connection/v1/connections/{connection_id}':
    get:
      parameters:
        - description: connection unique identifier
          in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryConnectionResponse is the response type for the Query/Connection RPC
                  method. Besides the connection end, it includes a proof and the height from
                  which the proof was retrieved.
                properties:
                  connection:
                    description: |-
                      ConnectionEnd defines a stateful object on a chain connected to another
                      separate one.
                      NOTE: there must only be 2 defined ConnectionEnds to establish
                      a connection between two chains.
                    properties:
                      client_id:
                        description: client associated with this connection.
                        type: string
                      counterparty:
                        description: counterparty chain associated with this connection.
                        properties:
                          client_id:
                            description: |-
                              identifies the client on the counterparty chain associated with a given
                              connection.
                            type: string
                          connection_id:
                            description: |-
                              identifies the connection end on the counterparty chain associated with a
                              given connection.
                            type: string
                          prefix:
                            description: commitment merkle prefix of the counterparty chain.
                            properties:
                              key_prefix:
                                format: byte
                                type: string
                            title: |-
                              MerklePrefix is merkle path prefixed to the key.
                              The constructed key from the Path and the key will be append(Path.KeyPath,
                              append(Path.KeyPrefix, key...))
                            type: object
                        type: object
                      delay_period:
                        description: |-
                          delay period that must pass before a consensus state can be used for
                          packet-verification NOTE: delay period logic is only implemented by some
                          clients.
                        format: uint64
                        type: string
                      state:
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        description: current state of the connection end.
                        enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                        type: string
                      versions:
                        description: |-
                          IBC version which can be utilised to determine encodings or protocols for
                          channels or packets utilising this connection.
                        items:
                          description: |-
                            Version defines the versioning scheme used to negotiate the IBC verison in
                            the connection handshake.
                          properties:
                            features:
                              items:
                                type: string
                              title: list of features compatible with the specified identifier
                              type: array
                            identifier:
                              title: unique version identifier
                              type: string
                          type: object
                        type: array
                    title: connection associated with the request identifier
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Connection
      summary: Connection queries an IBC connection end.
      x-stoplight:
        id: wdk5gf70fnuwe
  '/ibc/core/connection/v1/connections/{connection_id}/client_state':
    get:
      parameters:
        - description: connection identifier
          in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  identified_client_state:
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }
                              // or ...
                              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                                foo = any.unpack(Foo.getDefaultInstance());
                              }

                          Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                          Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".

                          JSON

                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                        properties:
                          type_url:
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer of the above specified type.
                            format: byte
                            type: string
                        title: client state
                        type: object
                    title: client state associated with the channel
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryConnectionClientStateResponse is the response type for the
                  Query/ConnectionClientState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConnectionClientState
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      x-stoplight:
        id: 5dk0gfac6nfwl
  '/ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}':
    get:
      parameters:
        - description: connection identifier
          in: path
          name: connection_id
          required: true
          schema:
            type: string
        - in: path
          name: revision_number
          required: true
          schema:
            format: uint64
            type: string
        - in: path
          name: revision_height
          required: true
          schema:
            format: uint64
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  consensus_state:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    title: consensus state associated with the channel
                    type: object
                  proof:
                    format: byte
                    title: merkle proof of existence
                    type: string
                  proof_height:
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: height at which the proof was retrieved
                    type: object
                title: |-
                  QueryConnectionConsensusStateResponse is the response type for the
                  Query/ConnectionConsensusState RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConnectionConsensusState
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      x-stoplight:
        id: ddl3ixbgnfz56
  /ibc/core/connection/v1/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryConnectionParamsResponse is the response type for the Query/ConnectionParams RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      max_expected_time_per_block:
                        description: |-
                          maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                          largest amount of time that the chain might reasonably take to produce the next block under normal operating
                          conditions. A safe choice is 3-5x the expected time per block.
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }
                            // or ...
                            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                              foo = any.unpack(Foo.getDefaultInstance());
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".

                        JSON

                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      properties:
                        type_url:
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ConnectionParams
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      x-stoplight:
        id: 1rs9wqljnrw78
  /ibc/lightclients/wasm/v1/checksums:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryChecksumsResponse is the response type for the Query/Checksums RPC method.
                properties:
                  checksums:
                    description: checksums is a list of the hex encoded checksums of all wasm codes stored.
                    items:
                      type: string
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Checksums
      summary: Get all Wasm checksums
      x-stoplight:
        id: npdhg2276xwe9
  '/ibc/lightclients/wasm/v1/checksums/{checksum}/code':
    get:
      parameters:
        - description: checksum is a hex encoded string of the code stored.
          in: path
          name: checksum
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryCodeResponse is the response type for the Query/Code RPC method.
                properties:
                  data:
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IBCLightClientsWasmCode
      summary: Get Wasm code for given checksum
      x-stoplight:
        id: l3aliqqmx1i86
  /ixo/bonds/bonds:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBondsResponse is the response type for the Query/Bonds RPC method.
                properties:
                  bonds:
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Bonds
      summary: Bonds returns all existing bonds.
      x-stoplight:
        id: szhx3e2efjanx
  /ixo/bonds/bonds_detailed:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryBondsDetailedResponse is the response type for the Query/BondsDetailed
                  RPC method.
                properties:
                  bonds_detailed:
                    items:
                      description: BondDetails contains details about the current state of a given bond.
                      properties:
                        bond_did:
                          type: string
                        reserve:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        spot_price:
                          items:
                            description: |-
                              DecCoin defines a token with a denomination and a decimal amount.

                              NOTE: The amount field is an Dec which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        supply:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: BondsDetailed
      summary: |-
        BondsDetailed returns a list of all existing bonds with some details about
        their current state.
      x-stoplight:
        id: rxdioxfh2t6me
  /ixo/bonds/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params RPC method.
                properties:
                  params:
                    description: Params defines the parameters for the bonds module.
                    properties:
                      reserved_bond_tokens:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IXOBondsParams
      summary: Params queries the parameters of x/bonds module.
      x-stoplight:
        id: 5c0rnoydmjmhj
  '/ixo/bonds/{bond_did}':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBondResponse is the response type for the Query/Bond RPC method.
                properties:
                  bond:
                    description: Bond defines a token bonding curve type with all of its parameters.
                    properties:
                      allow_reserve_withdrawals:
                        type: boolean
                      allow_sells:
                        type: boolean
                      alpha_bond:
                        type: boolean
                      available_reserve:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      batch_blocks:
                        type: string
                      bond_did:
                        type: string
                      controller_did:
                        type: string
                      creator_did:
                        type: string
                      current_outcome_payment_reserve:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      current_reserve:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      current_supply:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      description:
                        type: string
                      exit_fee_percentage:
                        type: string
                      fee_address:
                        type: string
                      function_parameters:
                        items:
                          description: |-
                            FunctionParam is a key-value pair used for specifying a specific bond
                            parameter.
                          properties:
                            param:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      function_type:
                        type: string
                      max_supply:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      name:
                        type: string
                      oracle_did:
                        type: string
                      order_quantity_limits:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      outcome_payment:
                        type: string
                      reserve_tokens:
                        items:
                          type: string
                        type: array
                      reserve_withdrawal_address:
                        type: string
                      sanity_margin_percentage:
                        type: string
                      sanity_rate:
                        type: string
                      state:
                        type: string
                      token:
                        type: string
                      tx_fee_percentage:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Bond
      summary: Bond queries info of a specific bond.
      x-stoplight:
        id: ph7tpvrtzt71b
  '/ixo/bonds/{bond_did}/alpha_maximums':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAlphaMaximumsResponse is the response type for the Query/AlphaMaximums
                  RPC method.
                properties:
                  max_system_alpha:
                    type: string
                  max_system_alpha_increase:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AlphaMaximums
      summary: |-
        AlphaMaximums queries alpha maximums for a specific augmented bonding
        curve.
      x-stoplight:
        id: 5fal3hnj0ltg9
  '/ixo/bonds/{bond_did}/available_reserve':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryAvailableReserveResponse is the response type for the
                  Query/AvailableReserve RPC method.
                properties:
                  available_reserve:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: AvailableReserve
      summary: |-
        AvailableReserve queries current available balance/s of the reserve pool
        for a specific bond.
      x-stoplight:
        id: ksld2bht5guvx
  '/ixo/bonds/{bond_did}/batch':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBatchResponse is the response type for the Query/Batch RPC method.
                properties:
                  batch:
                    description: |-
                      Batch holds a collection of outstanding buy, sell, and swap orders on a
                      particular bond.
                    properties:
                      blocks_remaining:
                        type: string
                      bond_did:
                        type: string
                      buy_prices:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      buys:
                        items:
                          description: |-
                            BuyOrder defines a type for submitting a buy order on a bond, together with
                            the maximum amount of reserve tokens the buyer is willing to pay.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                            max_prices:
                              items:
                                description: |-
                                  Coin defines a token with a denomination and an amount.

                                  NOTE: The amount field is an Int which implements the custom method
                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      next_public_alpha:
                        type: string
                      sell_prices:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      sells:
                        items:
                          description: SellOrder defines a type for submitting a sell order on a bond.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      swaps:
                        items:
                          description: |-
                            SwapOrder defines a type for submitting a swap order between two tokens on a
                            bond.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                            to_token:
                              type: string
                          type: object
                        type: array
                      total_buy_amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      total_sell_amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Batch
      summary: Batch queries info of a specific bond's current batch.
      x-stoplight:
        id: iem9u3v8adwl3
  '/ixo/bonds/{bond_did}/buy_price/{bond_amount}':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
        - in: path
          name: bond_amount
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCustomPriceResponse is the response type for the Query/BuyPrice RPC
                  method.
                properties:
                  adjusted_supply:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  prices:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_prices:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  tx_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: BuyPrice
      summary: |-
        BuyPrice queries price/s of buying an amount of tokens from a specific
        bond.
      x-stoplight:
        id: 4zrbc9exoqyag
  '/ixo/bonds/{bond_did}/current_price':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCurrentPriceResponse is the response type for the Query/CurrentPrice RPC
                  method.
                properties:
                  current_price:
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CurrentPrice
      summary: CurrentPrice queries the current price/s of a specific bond.
      x-stoplight:
        id: yu214ecsoll7f
  '/ixo/bonds/{bond_did}/current_reserve':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCurrentReserveResponse is the response type for the Query/CurrentReserve
                  RPC method.
                properties:
                  current_reserve:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CurrentReserve
      summary: |-
        CurrentReserve queries the current balance/s of the reserve pool for a
        specific bond.
      x-stoplight:
        id: 2x6yy6tr2v0ef
  '/ixo/bonds/{bond_did}/last_batch':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryLastBatchResponse is the response type for the Query/LastBatch RPC
                  method.
                properties:
                  last_batch:
                    description: |-
                      Batch holds a collection of outstanding buy, sell, and swap orders on a
                      particular bond.
                    properties:
                      blocks_remaining:
                        type: string
                      bond_did:
                        type: string
                      buy_prices:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      buys:
                        items:
                          description: |-
                            BuyOrder defines a type for submitting a buy order on a bond, together with
                            the maximum amount of reserve tokens the buyer is willing to pay.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                            max_prices:
                              items:
                                description: |-
                                  Coin defines a token with a denomination and an amount.

                                  NOTE: The amount field is an Int which implements the custom method
                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      next_public_alpha:
                        type: string
                      sell_prices:
                        items:
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      sells:
                        items:
                          description: SellOrder defines a type for submitting a sell order on a bond.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      swaps:
                        items:
                          description: |-
                            SwapOrder defines a type for submitting a swap order between two tokens on a
                            bond.
                          properties:
                            base_order:
                              description: |-
                                BaseOrder defines a base order type. It contains all the necessary fields for
                                specifying the general details about a buy, sell, or swap order.
                              properties:
                                account_did:
                                  type: string
                                amount:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                cancel_reason:
                                  type: string
                                cancelled:
                                  type: boolean
                              type: object
                            to_token:
                              type: string
                          type: object
                        type: array
                      total_buy_amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      total_sell_amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: LastBatch
      summary: LastBatch queries info of a specific bond's last batch.
      x-stoplight:
        id: lrjcinjkx79dc
  '/ixo/bonds/{bond_did}/price/{bond_amount}':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
        - in: path
          name: bond_amount
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QueryCustomPriceResponse is the response type for the Query/CustomPrice RPC
                  method.
                properties:
                  price:
                    items:
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CustomPrice
      summary: CustomPrice queries price/s of a specific bond at a specific supply.
      x-stoplight:
        id: cnlw7zu2hea25
  '/ixo/bonds/{bond_did}/sell_return/{bond_amount}':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
        - in: path
          name: bond_amount
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySellReturnResponse is the response type for the Query/SellReturn RPC
                  method.
                properties:
                  adjusted_supply:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  exit_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  returns:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_returns:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  tx_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SellReturn
      summary: |-
        SellReturn queries return/s on selling an amount of tokens of a specific
        bond.
      x-stoplight:
        id: geflo77bvg4c5
  '/ixo/bonds/{bond_did}/swap_return/{from_token_with_amount}/{to_token}':
    get:
      parameters:
        - in: path
          name: bond_did
          required: true
          schema:
            type: string
        - in: path
          name: from_token_with_amount
          required: true
          schema:
            type: string
        - in: path
          name: to_token
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: |-
                  QuerySwapReturnResponse is the response type for the Query/SwapReturn RPC
                  method.
                properties:
                  total_fees:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_returns:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: SwapReturn
      summary: |-
        SwapReturn queries return/s on swapping an amount of tokens to another
        token of a specific bond.
      x-stoplight:
        id: cwu00gk25tesk
  '/ixo/claims/claim/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  claim:
                    properties:
                      agent_address:
                        type: string
                      agent_did:
                        title: agent is the DID of the agent submitting the claim
                        type: string
                      amount:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: |-
                          NOTE: if both amount and cw20 amount are empty then use default by
                          Collection custom amount specified by service agent for claim approval
                        type: array
                      claim_id:
                        title: claimID is the unique identifier of the claim in the cid hash format
                        type: string
                      collection_id:
                        title: collection_id indicates to which Collection this claim belongs
                        type: string
                      cw20_payment:
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        title: |-
                          NOTE: if both amount and cw20 amount are empty then use default by
                          Collection custom cw20 payments specified by service agent for claim
                          approval
                        type: array
                      evaluation:
                        properties:
                          agent_address:
                            type: string
                          agent_did:
                            title: agent is the DID of the agent that submits the evaluation
                            type: string
                          amount:
                            items:
                              description: |-
                                Coin defines a token with a denomination and an amount.

                                NOTE: The amount field is an Int which implements the custom method
                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: |-
                              if both amount and cw20 amount are empty then use default by Collection
                              custom amount specified by evaluator for claim approval
                            type: array
                          claim_id:
                            title: claim_id indicates which Claim this evaluation is for
                            type: string
                          collection_id:
                            title: |-
                              collection_id indicates to which Collection the claim being evaluated
                              belongs to
                            type: string
                          cw20_payment:
                            items:
                              properties:
                                address:
                                  type: string
                                amount:
                                  format: uint64
                                  title: |-
                                    chose uint64 for now as amounts should be small enough to fit in a
                                    uint64(max 18446744073709551615)
                                  type: string
                              type: object
                            title: custom cw20 payments specified by evaluator for claim approval
                            type: array
                          evaluation_date:
                            format: date-time
                            title: |-
                              evaluationDate is the date and time that the claim evaluation was submitted
                              on-chain
                            type: string
                          oracle:
                            title: oracle is the DID of the Oracle entity that evaluates the claim
                            type: string
                          reason:
                            format: int64
                            title: |-
                              reason is the code expressed as an integer, for why the evaluation result
                              was given (codes defined by evaluator)
                            type: integer
                          status:
                            default: PENDING
                            enum:
                              - PENDING
                              - APPROVED
                              - REJECTED
                              - DISPUTED
                              - INVALIDATED
                            title: |-
                              status is the evaluation status expressed as an integer (2=approved,
                              3=rejected, ...)
                            type: string
                          verification_proof:
                            title: verificationProof is the cid of the evaluation Verfiable Credential
                            type: string
                        title: evaluation is the result of one or more claim evaluations
                        type: object
                      payments_status:
                        properties:
                          approval:
                            default: NO_PAYMENT
                            enum:
                              - NO_PAYMENT
                              - PROMISED
                              - AUTHORIZED
                              - GUARANTEED
                              - PAID
                              - FAILED
                              - DISPUTED_PAYMENT
                            title: |-
                              - PROMISED: Promised: Agent is contracted to receive payment
                               - AUTHORIZED: Authorized: Authz set up, no guarantee
                               - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                               - PAID: Paid: Funds have been paid
                               - FAILED: Failed: Payment failed, most probably due to insufficient funds
                               - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                            type: string
                          evaluation:
                            default: NO_PAYMENT
                            enum:
                              - NO_PAYMENT
                              - PROMISED
                              - AUTHORIZED
                              - GUARANTEED
                              - PAID
                              - FAILED
                              - DISPUTED_PAYMENT
                            title: |-
                              - PROMISED: Promised: Agent is contracted to receive payment
                               - AUTHORIZED: Authorized: Authz set up, no guarantee
                               - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                               - PAID: Paid: Funds have been paid
                               - FAILED: Failed: Payment failed, most probably due to insufficient funds
                               - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                            type: string
                          rejection:
                            default: NO_PAYMENT
                            enum:
                              - NO_PAYMENT
                              - PROMISED
                              - AUTHORIZED
                              - GUARANTEED
                              - PAID
                              - FAILED
                              - DISPUTED_PAYMENT
                            title: |-
                              - PROMISED: Promised: Agent is contracted to receive payment
                               - AUTHORIZED: Authorized: Authz set up, no guarantee
                               - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                               - PAID: Paid: Funds have been paid
                               - FAILED: Failed: Payment failed, most probably due to insufficient funds
                               - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                            type: string
                          submission:
                            default: NO_PAYMENT
                            enum:
                              - NO_PAYMENT
                              - PROMISED
                              - AUTHORIZED
                              - GUARANTEED
                              - PAID
                              - FAILED
                              - DISPUTED_PAYMENT
                            title: |-
                              - PROMISED: Promised: Agent is contracted to receive payment
                               - AUTHORIZED: Authorized: Authz set up, no guarantee
                               - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                               - PAID: Paid: Funds have been paid
                               - FAILED: Failed: Payment failed, most probably due to insufficient funds
                               - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                            type: string
                        title: payments_status is the status of the payments for the claim
                        type: object
                      submission_date:
                        format: date-time
                        title: submissionDate is the date and time that the claim was submitted on-chain
                        type: string
                      use_intent:
                        title: 'intent_id is the id of the intent for this claim, if any'
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Claim
      x-stoplight:
        id: 5y9fci3bfez24
  /ixo/claims/claims:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  claims:
                    items:
                      properties:
                        agent_address:
                          type: string
                        agent_did:
                          title: agent is the DID of the agent submitting the claim
                          type: string
                        amount:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: |-
                            NOTE: if both amount and cw20 amount are empty then use default by
                            Collection custom amount specified by service agent for claim approval
                          type: array
                        claim_id:
                          title: claimID is the unique identifier of the claim in the cid hash format
                          type: string
                        collection_id:
                          title: collection_id indicates to which Collection this claim belongs
                          type: string
                        cw20_payment:
                          items:
                            properties:
                              address:
                                type: string
                              amount:
                                format: uint64
                                title: |-
                                  chose uint64 for now as amounts should be small enough to fit in a
                                  uint64(max 18446744073709551615)
                                type: string
                            type: object
                          title: |-
                            NOTE: if both amount and cw20 amount are empty then use default by
                            Collection custom cw20 payments specified by service agent for claim
                            approval
                          type: array
                        evaluation:
                          properties:
                            agent_address:
                              type: string
                            agent_did:
                              title: agent is the DID of the agent that submits the evaluation
                              type: string
                            amount:
                              items:
                                description: |-
                                  Coin defines a token with a denomination and an amount.

                                  NOTE: The amount field is an Int which implements the custom method
                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              title: |-
                                if both amount and cw20 amount are empty then use default by Collection
                                custom amount specified by evaluator for claim approval
                              type: array
                            claim_id:
                              title: claim_id indicates which Claim this evaluation is for
                              type: string
                            collection_id:
                              title: |-
                                collection_id indicates to which Collection the claim being evaluated
                                belongs to
                              type: string
                            cw20_payment:
                              items:
                                properties:
                                  address:
                                    type: string
                                  amount:
                                    format: uint64
                                    title: |-
                                      chose uint64 for now as amounts should be small enough to fit in a
                                      uint64(max 18446744073709551615)
                                    type: string
                                type: object
                              title: custom cw20 payments specified by evaluator for claim approval
                              type: array
                            evaluation_date:
                              format: date-time
                              title: |-
                                evaluationDate is the date and time that the claim evaluation was submitted
                                on-chain
                              type: string
                            oracle:
                              title: oracle is the DID of the Oracle entity that evaluates the claim
                              type: string
                            reason:
                              format: int64
                              title: |-
                                reason is the code expressed as an integer, for why the evaluation result
                                was given (codes defined by evaluator)
                              type: integer
                            status:
                              default: PENDING
                              enum:
                                - PENDING
                                - APPROVED
                                - REJECTED
                                - DISPUTED
                                - INVALIDATED
                              title: |-
                                status is the evaluation status expressed as an integer (2=approved,
                                3=rejected, ...)
                              type: string
                            verification_proof:
                              title: verificationProof is the cid of the evaluation Verfiable Credential
                              type: string
                          title: evaluation is the result of one or more claim evaluations
                          type: object
                        payments_status:
                          properties:
                            approval:
                              default: NO_PAYMENT
                              enum:
                                - NO_PAYMENT
                                - PROMISED
                                - AUTHORIZED
                                - GUARANTEED
                                - PAID
                                - FAILED
                                - DISPUTED_PAYMENT
                              title: |-
                                - PROMISED: Promised: Agent is contracted to receive payment
                                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                                 - PAID: Paid: Funds have been paid
                                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                              type: string
                            evaluation:
                              default: NO_PAYMENT
                              enum:
                                - NO_PAYMENT
                                - PROMISED
                                - AUTHORIZED
                                - GUARANTEED
                                - PAID
                                - FAILED
                                - DISPUTED_PAYMENT
                              title: |-
                                - PROMISED: Promised: Agent is contracted to receive payment
                                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                                 - PAID: Paid: Funds have been paid
                                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                              type: string
                            rejection:
                              default: NO_PAYMENT
                              enum:
                                - NO_PAYMENT
                                - PROMISED
                                - AUTHORIZED
                                - GUARANTEED
                                - PAID
                                - FAILED
                                - DISPUTED_PAYMENT
                              title: |-
                                - PROMISED: Promised: Agent is contracted to receive payment
                                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                                 - PAID: Paid: Funds have been paid
                                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                              type: string
                            submission:
                              default: NO_PAYMENT
                              enum:
                                - NO_PAYMENT
                                - PROMISED
                                - AUTHORIZED
                                - GUARANTEED
                                - PAID
                                - FAILED
                                - DISPUTED_PAYMENT
                              title: |-
                                - PROMISED: Promised: Agent is contracted to receive payment
                                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                                 - PAID: Paid: Funds have been paid
                                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                              type: string
                          title: payments_status is the status of the payments for the claim
                          type: object
                        submission_date:
                          format: date-time
                          title: submissionDate is the date and time that the claim was submitted on-chain
                          type: string
                        use_intent:
                          title: 'intent_id is the id of the intent for this claim, if any'
                          type: boolean
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: ClaimList
      x-stoplight:
        id: g40atyo3ynjfg
  '/ixo/claims/collection/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  collection:
                    properties:
                      admin:
                        title: |-
                          admin is the account address that will authorize or revoke agents and
                          payments (the grantor), and can update the collection
                        type: string
                      approved:
                        format: uint64
                        title: |-
                          approved is the number of claims that have been evaluated and approved
                          (internally calculated)
                        type: string
                      count:
                        format: uint64
                        title: count is the number of claims already submitted (internally calculated)
                        type: string
                      disputed:
                        format: uint64
                        title: |-
                          disputed is the number of claims that have disputed status (internally
                          calculated)
                        type: string
                      end_date:
                        format: date-time
                        title: |-
                          endDate is the date after which no more claims may be submitted (no endDate
                          is allowed)
                        type: string
                      entity:
                        title: entity is the DID of the entity for which the claims are being created
                        type: string
                      escrow_account:
                        title: |-
                          escrow_account is the escrow account address for this collection created at
                          collection creation, current purpose is to transfer payments to escrow
                          account for GUARANTEED payments through intents
                        type: string
                      evaluated:
                        format: uint64
                        title: |-
                          evaluated is the number of claims that have been evaluated (internally
                          calculated)
                        type: string
                      id:
                        title: collection id is the incremented internal id for the collection of claims
                        type: string
                      intents:
                        default: ALLOW
                        description: |2-



                           - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
                          intents.
                           - DENY: Deny: Intents cannot be made for claims for the collection.
                           - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
                          mandatory before a claim can be submitted.
                        enum:
                          - ALLOW
                          - DENY
                          - REQUIRED
                        title: |-
                          intents is the option for intents for this collection (allow, deny,
                          required)
                        type: string
                      invalidated:
                        format: uint64
                        title: |-
                          invalidated is the number of claims that have been evaluated as invalid
                          (internally calculated)
                        type: string
                      payments:
                        properties:
                          approval:
                            properties:
                              account:
                                title: account is the entity account address from which the payment will be made
                                type: string
                              amount:
                                items:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                type: array
                              contract_1155_payment:
                                properties:
                                  address:
                                    type: string
                                  amount:
                                    format: int64
                                    type: integer
                                  token_id:
                                    type: string
                                title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                type: object
                              cw20_payment:
                                items:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: uint64
                                      title: |-
                                        chose uint64 for now as amounts should be small enough to fit in a
                                        uint64(max 18446744073709551615)
                                      type: string
                                  type: object
                                title: 'cw20 payments, can be empty or multiple'
                                type: array
                              is_oracle_payment:
                                title: |-
                                  boolean to indicate if the payment is for oracle payments, aka it will go
                                  through network fees split NOTE: if true the payment can only have amount
                                  values(Native coins), no cw20 payments allowed then
                                type: boolean
                              timeout_ns:
                                title: |-
                                  timeout after claim/evaluation to create authZ for payment, if 0 then
                                  immediate direct payment
                                type: string
                            type: object
                          evaluation:
                            properties:
                              account:
                                title: account is the entity account address from which the payment will be made
                                type: string
                              amount:
                                items:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                type: array
                              contract_1155_payment:
                                properties:
                                  address:
                                    type: string
                                  amount:
                                    format: int64
                                    type: integer
                                  token_id:
                                    type: string
                                title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                type: object
                              cw20_payment:
                                items:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: uint64
                                      title: |-
                                        chose uint64 for now as amounts should be small enough to fit in a
                                        uint64(max 18446744073709551615)
                                      type: string
                                  type: object
                                title: 'cw20 payments, can be empty or multiple'
                                type: array
                              is_oracle_payment:
                                title: |-
                                  boolean to indicate if the payment is for oracle payments, aka it will go
                                  through network fees split NOTE: if true the payment can only have amount
                                  values(Native coins), no cw20 payments allowed then
                                type: boolean
                              timeout_ns:
                                title: |-
                                  timeout after claim/evaluation to create authZ for payment, if 0 then
                                  immediate direct payment
                                type: string
                            type: object
                          rejection:
                            properties:
                              account:
                                title: account is the entity account address from which the payment will be made
                                type: string
                              amount:
                                items:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                type: array
                              contract_1155_payment:
                                properties:
                                  address:
                                    type: string
                                  amount:
                                    format: int64
                                    type: integer
                                  token_id:
                                    type: string
                                title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                type: object
                              cw20_payment:
                                items:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: uint64
                                      title: |-
                                        chose uint64 for now as amounts should be small enough to fit in a
                                        uint64(max 18446744073709551615)
                                      type: string
                                  type: object
                                title: 'cw20 payments, can be empty or multiple'
                                type: array
                              is_oracle_payment:
                                title: |-
                                  boolean to indicate if the payment is for oracle payments, aka it will go
                                  through network fees split NOTE: if true the payment can only have amount
                                  values(Native coins), no cw20 payments allowed then
                                type: boolean
                              timeout_ns:
                                title: |-
                                  timeout after claim/evaluation to create authZ for payment, if 0 then
                                  immediate direct payment
                                type: string
                            type: object
                          submission:
                            properties:
                              account:
                                title: account is the entity account address from which the payment will be made
                                type: string
                              amount:
                                items:
                                  description: |-
                                    Coin defines a token with a denomination and an amount.

                                    NOTE: The amount field is an Int which implements the custom method
                                    signatures required by gogoproto.
                                  properties:
                                    amount:
                                      type: string
                                    denom:
                                      type: string
                                  type: object
                                type: array
                              contract_1155_payment:
                                properties:
                                  address:
                                    type: string
                                  amount:
                                    format: int64
                                    type: integer
                                  token_id:
                                    type: string
                                title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                type: object
                              cw20_payment:
                                items:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: uint64
                                      title: |-
                                        chose uint64 for now as amounts should be small enough to fit in a
                                        uint64(max 18446744073709551615)
                                      type: string
                                  type: object
                                title: 'cw20 payments, can be empty or multiple'
                                type: array
                              is_oracle_payment:
                                title: |-
                                  boolean to indicate if the payment is for oracle payments, aka it will go
                                  through network fees split NOTE: if true the payment can only have amount
                                  values(Native coins), no cw20 payments allowed then
                                type: boolean
                              timeout_ns:
                                title: |-
                                  timeout after claim/evaluation to create authZ for payment, if 0 then
                                  immediate direct payment
                                type: string
                            type: object
                        title: |-
                          payments is the amount paid for claim submission, evaluation, approval, or
                          rejection
                        type: object
                      protocol:
                        title: protocol is the DID of the claim protocol
                        type: string
                      quota:
                        format: uint64
                        title: 'quota is the maximum number of claims that may be submitted, 0 is unlimited'
                        type: string
                      rejected:
                        format: uint64
                        title: |-
                          rejected is the number of claims that have been evaluated and rejected
                          (internally calculated)
                        type: string
                      signer:
                        title: signer address
                        type: string
                      start_date:
                        format: date-time
                        title: startDate is the date after which claims may be submitted
                        type: string
                      state:
                        default: OPEN
                        enum:
                          - OPEN
                          - PAUSED
                          - CLOSED
                        title: 'state is the current state of this Collection (open, paused, closed)'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Collection
      x-stoplight:
        id: pjt2jqo1n74u8
  /ixo/claims/collections:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  collections:
                    items:
                      properties:
                        admin:
                          title: |-
                            admin is the account address that will authorize or revoke agents and
                            payments (the grantor), and can update the collection
                          type: string
                        approved:
                          format: uint64
                          title: |-
                            approved is the number of claims that have been evaluated and approved
                            (internally calculated)
                          type: string
                        count:
                          format: uint64
                          title: count is the number of claims already submitted (internally calculated)
                          type: string
                        disputed:
                          format: uint64
                          title: |-
                            disputed is the number of claims that have disputed status (internally
                            calculated)
                          type: string
                        end_date:
                          format: date-time
                          title: |-
                            endDate is the date after which no more claims may be submitted (no endDate
                            is allowed)
                          type: string
                        entity:
                          title: entity is the DID of the entity for which the claims are being created
                          type: string
                        escrow_account:
                          title: |-
                            escrow_account is the escrow account address for this collection created at
                            collection creation, current purpose is to transfer payments to escrow
                            account for GUARANTEED payments through intents
                          type: string
                        evaluated:
                          format: uint64
                          title: |-
                            evaluated is the number of claims that have been evaluated (internally
                            calculated)
                          type: string
                        id:
                          title: collection id is the incremented internal id for the collection of claims
                          type: string
                        intents:
                          default: ALLOW
                          description: |2-



                             - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
                            intents.
                             - DENY: Deny: Intents cannot be made for claims for the collection.
                             - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
                            mandatory before a claim can be submitted.
                          enum:
                            - ALLOW
                            - DENY
                            - REQUIRED
                          title: |-
                            intents is the option for intents for this collection (allow, deny,
                            required)
                          type: string
                        invalidated:
                          format: uint64
                          title: |-
                            invalidated is the number of claims that have been evaluated as invalid
                            (internally calculated)
                          type: string
                        payments:
                          properties:
                            approval:
                              properties:
                                account:
                                  title: account is the entity account address from which the payment will be made
                                  type: string
                                amount:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  type: array
                                contract_1155_payment:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: int64
                                      type: integer
                                    token_id:
                                      type: string
                                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                  type: object
                                cw20_payment:
                                  items:
                                    properties:
                                      address:
                                        type: string
                                      amount:
                                        format: uint64
                                        title: |-
                                          chose uint64 for now as amounts should be small enough to fit in a
                                          uint64(max 18446744073709551615)
                                        type: string
                                    type: object
                                  title: 'cw20 payments, can be empty or multiple'
                                  type: array
                                is_oracle_payment:
                                  title: |-
                                    boolean to indicate if the payment is for oracle payments, aka it will go
                                    through network fees split NOTE: if true the payment can only have amount
                                    values(Native coins), no cw20 payments allowed then
                                  type: boolean
                                timeout_ns:
                                  title: |-
                                    timeout after claim/evaluation to create authZ for payment, if 0 then
                                    immediate direct payment
                                  type: string
                              type: object
                            evaluation:
                              properties:
                                account:
                                  title: account is the entity account address from which the payment will be made
                                  type: string
                                amount:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  type: array
                                contract_1155_payment:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: int64
                                      type: integer
                                    token_id:
                                      type: string
                                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                  type: object
                                cw20_payment:
                                  items:
                                    properties:
                                      address:
                                        type: string
                                      amount:
                                        format: uint64
                                        title: |-
                                          chose uint64 for now as amounts should be small enough to fit in a
                                          uint64(max 18446744073709551615)
                                        type: string
                                    type: object
                                  title: 'cw20 payments, can be empty or multiple'
                                  type: array
                                is_oracle_payment:
                                  title: |-
                                    boolean to indicate if the payment is for oracle payments, aka it will go
                                    through network fees split NOTE: if true the payment can only have amount
                                    values(Native coins), no cw20 payments allowed then
                                  type: boolean
                                timeout_ns:
                                  title: |-
                                    timeout after claim/evaluation to create authZ for payment, if 0 then
                                    immediate direct payment
                                  type: string
                              type: object
                            rejection:
                              properties:
                                account:
                                  title: account is the entity account address from which the payment will be made
                                  type: string
                                amount:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  type: array
                                contract_1155_payment:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: int64
                                      type: integer
                                    token_id:
                                      type: string
                                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                  type: object
                                cw20_payment:
                                  items:
                                    properties:
                                      address:
                                        type: string
                                      amount:
                                        format: uint64
                                        title: |-
                                          chose uint64 for now as amounts should be small enough to fit in a
                                          uint64(max 18446744073709551615)
                                        type: string
                                    type: object
                                  title: 'cw20 payments, can be empty or multiple'
                                  type: array
                                is_oracle_payment:
                                  title: |-
                                    boolean to indicate if the payment is for oracle payments, aka it will go
                                    through network fees split NOTE: if true the payment can only have amount
                                    values(Native coins), no cw20 payments allowed then
                                  type: boolean
                                timeout_ns:
                                  title: |-
                                    timeout after claim/evaluation to create authZ for payment, if 0 then
                                    immediate direct payment
                                  type: string
                              type: object
                            submission:
                              properties:
                                account:
                                  title: account is the entity account address from which the payment will be made
                                  type: string
                                amount:
                                  items:
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                    properties:
                                      amount:
                                        type: string
                                      denom:
                                        type: string
                                    type: object
                                  type: array
                                contract_1155_payment:
                                  properties:
                                    address:
                                      type: string
                                    amount:
                                      format: int64
                                      type: integer
                                    token_id:
                                      type: string
                                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                                  type: object
                                cw20_payment:
                                  items:
                                    properties:
                                      address:
                                        type: string
                                      amount:
                                        format: uint64
                                        title: |-
                                          chose uint64 for now as amounts should be small enough to fit in a
                                          uint64(max 18446744073709551615)
                                        type: string
                                    type: object
                                  title: 'cw20 payments, can be empty or multiple'
                                  type: array
                                is_oracle_payment:
                                  title: |-
                                    boolean to indicate if the payment is for oracle payments, aka it will go
                                    through network fees split NOTE: if true the payment can only have amount
                                    values(Native coins), no cw20 payments allowed then
                                  type: boolean
                                timeout_ns:
                                  title: |-
                                    timeout after claim/evaluation to create authZ for payment, if 0 then
                                    immediate direct payment
                                  type: string
                              type: object
                          title: |-
                            payments is the amount paid for claim submission, evaluation, approval, or
                            rejection
                          type: object
                        protocol:
                          title: protocol is the DID of the claim protocol
                          type: string
                        quota:
                          format: uint64
                          title: 'quota is the maximum number of claims that may be submitted, 0 is unlimited'
                          type: string
                        rejected:
                          format: uint64
                          title: |-
                            rejected is the number of claims that have been evaluated and rejected
                            (internally calculated)
                          type: string
                        signer:
                          title: signer address
                          type: string
                        start_date:
                          format: date-time
                          title: startDate is the date after which claims may be submitted
                          type: string
                        state:
                          default: OPEN
                          enum:
                            - OPEN
                            - PAUSED
                            - CLOSED
                          title: 'state is the current state of this Collection (open, paused, closed)'
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: CollectionList
      x-stoplight:
        id: 0p7inomaojqk8
  '/ixo/claims/dispute/{proof}':
    get:
      parameters:
        - in: path
          name: proof
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  dispute:
                    properties:
                      data:
                        properties:
                          encrypted:
                            type: boolean
                          proof:
                            type: string
                          type:
                            type: string
                          uri:
                            type: string
                        type: object
                      subject_id:
                        type: string
                      type:
                        format: int32
                        title: 'type is expressed as an integer, interpreted by the client'
                        type: integer
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Dispute
      x-stoplight:
        id: 1iq7ase81tecv
  /ixo/claims/disputes:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  disputes:
                    items:
                      properties:
                        data:
                          properties:
                            encrypted:
                              type: boolean
                            proof:
                              type: string
                            type:
                              type: string
                            uri:
                              type: string
                          type: object
                        subject_id:
                          type: string
                        type:
                          format: int32
                          title: 'type is expressed as an integer, interpreted by the client'
                          type: integer
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: DisputeList
      x-stoplight:
        id: 68bi0rqv66rm2
  '/ixo/claims/intent/{agentAddress}/{collectionId}/{id}':
    get:
      parameters:
        - in: path
          name: agentAddress
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  intent:
                    description: Intent defines the structure for a service agent's claim intent.
                    properties:
                      agent_address:
                        description: The service agent's address.
                        type: string
                      agent_did:
                        description: The service agent's DID (Decentralized Identifier).
                        type: string
                      amount:
                        description: 'The payment amount the agent intends to claim, if any.'
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      claim_id:
                        title: 'claim_id (optional, set when claim is submitted)'
                        type: string
                      collection_id:
                        description: The id of the collection this intent is linked to.
                        type: string
                      created_at:
                        description: The time the intent was created.
                        format: date-time
                        type: string
                      cw20_payment:
                        description: 'The CW20Payment amount the agent intends to claim, if any.'
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        type: array
                      escrow_address:
                        title: the escrow account address
                        type: string
                      expire_at:
                        description: |-
                          Timeout period for the intent. If the claim is not submitted by this time,
                          the intent expires.
                        format: date-time
                        type: string
                      from_address:
                        title: the address the escrow payment came from
                        type: string
                      id:
                        title: id is the incremented internal id for the intent
                        type: string
                      status:
                        default: ACTIVE
                        description: 'Status of the intent (e.g., "ACTIVE" or "FULFILLED").'
                        enum:
                          - ACTIVE
                          - FULFILLED
                          - EXPIRED
                        title: |-
                          - ACTIVE: Active: Intent is created and active, payments have been transferred to
                          escrow if there is any
                           - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
                          be released on claim APPROVAL, or funds will be reverted on claim REJECTION
                          or DISPUTE
                           - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
                          escrow
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Intent
      x-stoplight:
        id: qpw68qd9zcsu5
  /ixo/claims/intents:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  intents:
                    items:
                      description: Intent defines the structure for a service agent's claim intent.
                      properties:
                        agent_address:
                          description: The service agent's address.
                          type: string
                        agent_did:
                          description: The service agent's DID (Decentralized Identifier).
                          type: string
                        amount:
                          description: 'The payment amount the agent intends to claim, if any.'
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        claim_id:
                          title: 'claim_id (optional, set when claim is submitted)'
                          type: string
                        collection_id:
                          description: The id of the collection this intent is linked to.
                          type: string
                        created_at:
                          description: The time the intent was created.
                          format: date-time
                          type: string
                        cw20_payment:
                          description: 'The CW20Payment amount the agent intends to claim, if any.'
                          items:
                            properties:
                              address:
                                type: string
                              amount:
                                format: uint64
                                title: |-
                                  chose uint64 for now as amounts should be small enough to fit in a
                                  uint64(max 18446744073709551615)
                                type: string
                            type: object
                          type: array
                        escrow_address:
                          title: the escrow account address
                          type: string
                        expire_at:
                          description: |-
                            Timeout period for the intent. If the claim is not submitted by this time,
                            the intent expires.
                          format: date-time
                          type: string
                        from_address:
                          title: the address the escrow payment came from
                          type: string
                        id:
                          title: id is the incremented internal id for the intent
                          type: string
                        status:
                          default: ACTIVE
                          description: 'Status of the intent (e.g., "ACTIVE" or "FULFILLED").'
                          enum:
                            - ACTIVE
                            - FULFILLED
                            - EXPIRED
                          title: |-
                            - ACTIVE: Active: Intent is created and active, payments have been transferred to
                            escrow if there is any
                             - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
                            be released on claim APPROVAL, or funds will be reverted on claim REJECTION
                            or DISPUTE
                             - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
                            escrow
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IntentList
      x-stoplight:
        id: l1scxd73nnftm
  /ixo/claims/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    properties:
                      collection_sequence:
                        format: uint64
                        type: string
                      intent_sequence:
                        format: uint64
                        type: string
                      ixo_account:
                        type: string
                      network_fee_percentage:
                        type: string
                      node_fee_percentage:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IXOClaimsParams
      summary: Parameters queries the parameters of the module.
      x-stoplight:
        id: op7i5h9edtzkq
  /ixo/did/dids:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  iidDocuments:
                    items:
                      properties:
                        accordedRight:
                          items:
                            properties:
                              id:
                                type: string
                              mechanism:
                                type: string
                              message:
                                type: string
                              service:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        alsoKnownAs:
                          type: string
                        assertionMethod:
                          items:
                            type: string
                          title: |-
                            Used to specify how the DID subject is expected to express claims,
                            such as for the purposes of issuing a Verifiable Credential.
                            cfr. https://www.w3.org/TR/did-core/#assertion
                          type: array
                        authentication:
                          items:
                            type: string
                          title: |-
                            NOTE: below this line there are the relationships
                            Authentication represents public key associated with the did document.
                            cfr. https://www.w3.org/TR/did-core/#authentication
                          type: array
                        capabilityDelegation:
                          items:
                            type: string
                          title: |-
                            Used to specify a mechanism that might be used by the DID subject
                            to delegate a cryptographic capability to another party.
                            https://www.w3.org/TR/did-core/#capability-delegation
                          type: array
                        capabilityInvocation:
                          items:
                            type: string
                          title: |-
                            Used to specify a verification method that might be used by the DID subject
                            to invoke a cryptographic capability, such as the authorization
                            to update the DID Document.
                            https://www.w3.org/TR/did-core/#capability-invocation
                          type: array
                        context:
                          description: '@context is spec for did document.'
                          items:
                            properties:
                              key:
                                type: string
                              val:
                                type: string
                            type: object
                          type: array
                        controller:
                          items:
                            type: string
                          title: |-
                            A DID controller is an entity that is authorized to make changes to a DID
                            document. cfr. https://www.w3.org/TR/did-core/#did-controller
                          type: array
                        id:
                          description: id represents the id for the did document.
                          type: string
                        keyAgreement:
                          items:
                            type: string
                          title: |-
                            used to specify how an entity can generate encryption material
                            in order to transmit confidential information intended for the DID subject.
                            https://www.w3.org/TR/did-core/#key-agreement
                          type: array
                        linkedClaim:
                          items:
                            properties:
                              description:
                                type: string
                              encrypted:
                                type: string
                              id:
                                type: string
                              proof:
                                type: string
                              right:
                                type: string
                              serviceEndpoint:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        linkedEntity:
                          items:
                            properties:
                              id:
                                type: string
                              relationship:
                                type: string
                              service:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        linkedResource:
                          items:
                            properties:
                              description:
                                type: string
                              encrypted:
                                type: string
                              id:
                                type: string
                              mediaType:
                                type: string
                              proof:
                                type: string
                              right:
                                type: string
                              serviceEndpoint:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        metadata:
                          properties:
                            created:
                              format: date-time
                              type: string
                            deactivated:
                              type: boolean
                            updated:
                              format: date-time
                              type: string
                            versionId:
                              type: string
                          title: |-
                            Metadata concerning the IidDocument such as versionId, created, updated and
                            deactivated
                          type: object
                        service:
                          items:
                            properties:
                              id:
                                type: string
                              serviceEndpoint:
                                type: string
                              type:
                                type: string
                            type: object
                          title: |-
                            Services are used in DID documents to express ways of communicating
                            with the DID subject or associated entities.
                            https://www.w3.org/TR/did-core/#services
                          type: array
                        verificationMethod:
                          items:
                            properties:
                              blockchainAccountID:
                                type: string
                              controller:
                                type: string
                              id:
                                type: string
                              publicKeyBase58:
                                type: string
                              publicKeyHex:
                                type: string
                              publicKeyMultibase:
                                type: string
                              type:
                                type: string
                            type: object
                          title: |-
                            A DID document can express verification methods,
                            such as cryptographic public keys, which can be used
                            to authenticate or authorize interactions with the DID subject or
                            associated parties. https://www.w3.org/TR/did-core/#verification-methods
                          type: array
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IidDocuments
      summary: IidDocuments queries all iid documents that match the given status.
      x-stoplight:
        id: hczfddp0tsank
  '/ixo/did/dids/{id}':
    get:
      parameters:
        - description: did id of iid document querying
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  iidDocument:
                    properties:
                      accordedRight:
                        items:
                          properties:
                            id:
                              type: string
                            mechanism:
                              type: string
                            message:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      alsoKnownAs:
                        type: string
                      assertionMethod:
                        items:
                          type: string
                        title: |-
                          Used to specify how the DID subject is expected to express claims,
                          such as for the purposes of issuing a Verifiable Credential.
                          cfr. https://www.w3.org/TR/did-core/#assertion
                        type: array
                      authentication:
                        items:
                          type: string
                        title: |-
                          NOTE: below this line there are the relationships
                          Authentication represents public key associated with the did document.
                          cfr. https://www.w3.org/TR/did-core/#authentication
                        type: array
                      capabilityDelegation:
                        items:
                          type: string
                        title: |-
                          Used to specify a mechanism that might be used by the DID subject
                          to delegate a cryptographic capability to another party.
                          https://www.w3.org/TR/did-core/#capability-delegation
                        type: array
                      capabilityInvocation:
                        items:
                          type: string
                        title: |-
                          Used to specify a verification method that might be used by the DID subject
                          to invoke a cryptographic capability, such as the authorization
                          to update the DID Document.
                          https://www.w3.org/TR/did-core/#capability-invocation
                        type: array
                      context:
                        description: '@context is spec for did document.'
                        items:
                          properties:
                            key:
                              type: string
                            val:
                              type: string
                          type: object
                        type: array
                      controller:
                        items:
                          type: string
                        title: |-
                          A DID controller is an entity that is authorized to make changes to a DID
                          document. cfr. https://www.w3.org/TR/did-core/#did-controller
                        type: array
                      id:
                        description: id represents the id for the did document.
                        type: string
                      keyAgreement:
                        items:
                          type: string
                        title: |-
                          used to specify how an entity can generate encryption material
                          in order to transmit confidential information intended for the DID subject.
                          https://www.w3.org/TR/did-core/#key-agreement
                        type: array
                      linkedClaim:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedEntity:
                        items:
                          properties:
                            id:
                              type: string
                            relationship:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedResource:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            mediaType:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      metadata:
                        properties:
                          created:
                            format: date-time
                            type: string
                          deactivated:
                            type: boolean
                          updated:
                            format: date-time
                            type: string
                          versionId:
                            type: string
                        title: |-
                          Metadata concerning the IidDocument such as versionId, created, updated and
                          deactivated
                        type: object
                      service:
                        items:
                          properties:
                            id:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          Services are used in DID documents to express ways of communicating
                          with the DID subject or associated entities.
                          https://www.w3.org/TR/did-core/#services
                        type: array
                      verificationMethod:
                        items:
                          properties:
                            blockchainAccountID:
                              type: string
                            controller:
                              type: string
                            id:
                              type: string
                            publicKeyBase58:
                              type: string
                            publicKeyHex:
                              type: string
                            publicKeyMultibase:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          A DID document can express verification methods,
                          such as cryptographic public keys, which can be used
                          to authenticate or authorize interactions with the DID subject or
                          associated parties. https://www.w3.org/TR/did-core/#verification-methods
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IidDocument
      summary: IidDocument queries a iid documents with an id.
      x-stoplight:
        id: 8w57it99zghjt
  /ixo/entity:
    get:
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  entities:
                    items:
                      properties:
                        accounts:
                          items:
                            properties:
                              address:
                                type: string
                              name:
                                type: string
                            type: object
                          title: module accounts created for entity
                          type: array
                        credentials:
                          items:
                            type: string
                          title: Credentials of the entity to be verified
                          type: array
                        end_date:
                          format: date-time
                          title: |-
                            End Date of the Entity as defined by the implementer and interpreted by
                            Client applications
                          type: string
                        entity_verified:
                          title: Used as check whether the credentials of entity is verified
                          type: boolean
                        id:
                          description: id represents the id for the entity document.
                          type: string
                        metadata:
                          properties:
                            created:
                              format: date-time
                              type: string
                            updated:
                              format: date-time
                              type: string
                            version_id:
                              type: string
                          title: |-
                            Metadata concerning the Entity such as versionId, created, updated and
                            deactivated
                          type: object
                        relayer_node:
                          title: Did of the operator through which the Entity was created
                          type: string
                        start_date:
                          format: date-time
                          title: |-
                            Start Date of the Entity as defined by the implementer and interpreted by
                            Client applications
                          type: string
                        status:
                          format: int32
                          title: |-
                            Status of the Entity as defined by the implementer and interpreted by
                            Client applications
                          type: integer
                        type:
                          title: 'Type of entity, eg protocol or asset'
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: EntityList
      x-stoplight:
        id: e4a9gnuf147lb
  /ixo/entity/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    properties:
                      createSequence:
                        format: uint64
                        type: string
                      nftContractAddress:
                        type: string
                      nftContractMinter:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IXOEntityParams
      x-stoplight:
        id: c5pvoog8a3fvq
  '/ixo/entity/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  entity:
                    properties:
                      accounts:
                        items:
                          properties:
                            address:
                              type: string
                            name:
                              type: string
                          type: object
                        title: module accounts created for entity
                        type: array
                      credentials:
                        items:
                          type: string
                        title: Credentials of the entity to be verified
                        type: array
                      end_date:
                        format: date-time
                        title: |-
                          End Date of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: string
                      entity_verified:
                        title: Used as check whether the credentials of entity is verified
                        type: boolean
                      id:
                        description: id represents the id for the entity document.
                        type: string
                      metadata:
                        properties:
                          created:
                            format: date-time
                            type: string
                          updated:
                            format: date-time
                            type: string
                          version_id:
                            type: string
                        title: |-
                          Metadata concerning the Entity such as versionId, created, updated and
                          deactivated
                        type: object
                      relayer_node:
                        title: Did of the operator through which the Entity was created
                        type: string
                      start_date:
                        format: date-time
                        title: |-
                          Start Date of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: string
                      status:
                        format: int32
                        title: |-
                          Status of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: integer
                      type:
                        title: 'Type of entity, eg protocol or asset'
                        type: string
                    type: object
                  iidDocument:
                    properties:
                      accordedRight:
                        items:
                          properties:
                            id:
                              type: string
                            mechanism:
                              type: string
                            message:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      alsoKnownAs:
                        type: string
                      assertionMethod:
                        items:
                          type: string
                        title: |-
                          Used to specify how the DID subject is expected to express claims,
                          such as for the purposes of issuing a Verifiable Credential.
                          cfr. https://www.w3.org/TR/did-core/#assertion
                        type: array
                      authentication:
                        items:
                          type: string
                        title: |-
                          NOTE: below this line there are the relationships
                          Authentication represents public key associated with the did document.
                          cfr. https://www.w3.org/TR/did-core/#authentication
                        type: array
                      capabilityDelegation:
                        items:
                          type: string
                        title: |-
                          Used to specify a mechanism that might be used by the DID subject
                          to delegate a cryptographic capability to another party.
                          https://www.w3.org/TR/did-core/#capability-delegation
                        type: array
                      capabilityInvocation:
                        items:
                          type: string
                        title: |-
                          Used to specify a verification method that might be used by the DID subject
                          to invoke a cryptographic capability, such as the authorization
                          to update the DID Document.
                          https://www.w3.org/TR/did-core/#capability-invocation
                        type: array
                      context:
                        description: '@context is spec for did document.'
                        items:
                          properties:
                            key:
                              type: string
                            val:
                              type: string
                          type: object
                        type: array
                      controller:
                        items:
                          type: string
                        title: |-
                          A DID controller is an entity that is authorized to make changes to a DID
                          document. cfr. https://www.w3.org/TR/did-core/#did-controller
                        type: array
                      id:
                        description: id represents the id for the did document.
                        type: string
                      keyAgreement:
                        items:
                          type: string
                        title: |-
                          used to specify how an entity can generate encryption material
                          in order to transmit confidential information intended for the DID subject.
                          https://www.w3.org/TR/did-core/#key-agreement
                        type: array
                      linkedClaim:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedEntity:
                        items:
                          properties:
                            id:
                              type: string
                            relationship:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedResource:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            mediaType:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      metadata:
                        properties:
                          created:
                            format: date-time
                            type: string
                          deactivated:
                            type: boolean
                          updated:
                            format: date-time
                            type: string
                          versionId:
                            type: string
                        title: |-
                          Metadata concerning the IidDocument such as versionId, created, updated and
                          deactivated
                        type: object
                      service:
                        items:
                          properties:
                            id:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          Services are used in DID documents to express ways of communicating
                          with the DID subject or associated entities.
                          https://www.w3.org/TR/did-core/#services
                        type: array
                      verificationMethod:
                        items:
                          properties:
                            blockchainAccountID:
                              type: string
                            controller:
                              type: string
                            id:
                              type: string
                            publicKeyBase58:
                              type: string
                            publicKeyHex:
                              type: string
                            publicKeyMultibase:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          A DID document can express verification methods,
                          such as cryptographic public keys, which can be used
                          to authenticate or authorize interactions with the DID subject or
                          associated parties. https://www.w3.org/TR/did-core/#verification-methods
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: Entity
      x-stoplight:
        id: r2e02oshl7arc
  '/ixo/entity/{id}/iiddocument':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  iidDocument:
                    properties:
                      accordedRight:
                        items:
                          properties:
                            id:
                              type: string
                            mechanism:
                              type: string
                            message:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      alsoKnownAs:
                        type: string
                      assertionMethod:
                        items:
                          type: string
                        title: |-
                          Used to specify how the DID subject is expected to express claims,
                          such as for the purposes of issuing a Verifiable Credential.
                          cfr. https://www.w3.org/TR/did-core/#assertion
                        type: array
                      authentication:
                        items:
                          type: string
                        title: |-
                          NOTE: below this line there are the relationships
                          Authentication represents public key associated with the did document.
                          cfr. https://www.w3.org/TR/did-core/#authentication
                        type: array
                      capabilityDelegation:
                        items:
                          type: string
                        title: |-
                          Used to specify a mechanism that might be used by the DID subject
                          to delegate a cryptographic capability to another party.
                          https://www.w3.org/TR/did-core/#capability-delegation
                        type: array
                      capabilityInvocation:
                        items:
                          type: string
                        title: |-
                          Used to specify a verification method that might be used by the DID subject
                          to invoke a cryptographic capability, such as the authorization
                          to update the DID Document.
                          https://www.w3.org/TR/did-core/#capability-invocation
                        type: array
                      context:
                        description: '@context is spec for did document.'
                        items:
                          properties:
                            key:
                              type: string
                            val:
                              type: string
                          type: object
                        type: array
                      controller:
                        items:
                          type: string
                        title: |-
                          A DID controller is an entity that is authorized to make changes to a DID
                          document. cfr. https://www.w3.org/TR/did-core/#did-controller
                        type: array
                      id:
                        description: id represents the id for the did document.
                        type: string
                      keyAgreement:
                        items:
                          type: string
                        title: |-
                          used to specify how an entity can generate encryption material
                          in order to transmit confidential information intended for the DID subject.
                          https://www.w3.org/TR/did-core/#key-agreement
                        type: array
                      linkedClaim:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedEntity:
                        items:
                          properties:
                            id:
                              type: string
                            relationship:
                              type: string
                            service:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      linkedResource:
                        items:
                          properties:
                            description:
                              type: string
                            encrypted:
                              type: string
                            id:
                              type: string
                            mediaType:
                              type: string
                            proof:
                              type: string
                            right:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      metadata:
                        properties:
                          created:
                            format: date-time
                            type: string
                          deactivated:
                            type: boolean
                          updated:
                            format: date-time
                            type: string
                          versionId:
                            type: string
                        title: |-
                          Metadata concerning the IidDocument such as versionId, created, updated and
                          deactivated
                        type: object
                      service:
                        items:
                          properties:
                            id:
                              type: string
                            serviceEndpoint:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          Services are used in DID documents to express ways of communicating
                          with the DID subject or associated entities.
                          https://www.w3.org/TR/did-core/#services
                        type: array
                      verificationMethod:
                        items:
                          properties:
                            blockchainAccountID:
                              type: string
                            controller:
                              type: string
                            id:
                              type: string
                            publicKeyBase58:
                              type: string
                            publicKeyHex:
                              type: string
                            publicKeyMultibase:
                              type: string
                            type:
                              type: string
                          type: object
                        title: |-
                          A DID document can express verification methods,
                          such as cryptographic public keys, which can be used
                          to authenticate or authorize interactions with the DID subject or
                          associated parties. https://www.w3.org/TR/did-core/#verification-methods
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: EntityIidDocument
      x-stoplight:
        id: 9ky6u6zau6azn
  '/ixo/entity/{id}/metadata':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  entity:
                    properties:
                      accounts:
                        items:
                          properties:
                            address:
                              type: string
                            name:
                              type: string
                          type: object
                        title: module accounts created for entity
                        type: array
                      credentials:
                        items:
                          type: string
                        title: Credentials of the entity to be verified
                        type: array
                      end_date:
                        format: date-time
                        title: |-
                          End Date of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: string
                      entity_verified:
                        title: Used as check whether the credentials of entity is verified
                        type: boolean
                      id:
                        description: id represents the id for the entity document.
                        type: string
                      metadata:
                        properties:
                          created:
                            format: date-time
                            type: string
                          updated:
                            format: date-time
                            type: string
                          version_id:
                            type: string
                        title: |-
                          Metadata concerning the Entity such as versionId, created, updated and
                          deactivated
                        type: object
                      relayer_node:
                        title: Did of the operator through which the Entity was created
                        type: string
                      start_date:
                        format: date-time
                        title: |-
                          Start Date of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: string
                      status:
                        format: int32
                        title: |-
                          Status of the Entity as defined by the implementer and interpreted by
                          Client applications
                        type: integer
                      type:
                        title: 'Type of entity, eg protocol or asset'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: EntityMetaData
      x-stoplight:
        id: v582d4qphchv2
  '/ixo/entity/{id}/verified':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  entity_verified:
                    type: boolean
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: EntityVerified
      x-stoplight:
        id: 5nz7dsf1hxfqi
  '/ixo/token/metadata/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  decimals:
                    type: string
                  description:
                    type: string
                  image:
                    type: string
                  index:
                    type: string
                  name:
                    type: string
                  properties:
                    properties:
                      cap:
                        type: string
                      class:
                        type: string
                      collection:
                        type: string
                      linkedResources:
                        items:
                          properties:
                            encrypted:
                              type: boolean
                            id:
                              title: did of entity to map token to
                              type: string
                            proof:
                              type: string
                            type:
                              type: string
                            uri:
                              title: media type value should always be "application/json"
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TokenMetadata
      x-stoplight:
        id: 0nceu9ddulr70
  '/ixo/token/minter/{minter}':
    get:
      parameters:
        - description: minter address to get list for
          in: path
          name: minter
          required: true
          schema:
            type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          name: pagination.key
          required: false
          schema:
            format: byte
            type: string
        - description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          name: pagination.offset
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          name: pagination.limit
          required: false
          schema:
            format: uint64
            type: string
        - description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          name: pagination.count_total
          required: false
          schema:
            type: boolean
        - description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                    properties:
                      next_key:
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                        type: string
                      total:
                        format: uint64
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                    type: object
                  tokenDocs:
                    items:
                      properties:
                        cancelled:
                          items:
                            properties:
                              amount:
                                type: string
                              id:
                                type: string
                              owner:
                                type: string
                              reason:
                                type: string
                            type: object
                          title: |-
                            tokens that has been cancelled for this Token with specific name and
                            contract address
                          type: array
                        cap:
                          title: |-
                            cap is the maximum number of tokens with this name that can be minted, 0 is
                            unlimited
                          type: string
                        class:
                          title: class is the token protocol entity DID (validated)
                          type: string
                        contract_address:
                          title: generated on token initiation
                          type: string
                        description:
                          title: description is any arbitrary description
                          type: string
                        image:
                          title: image is the image url for the token
                          type: string
                        minter:
                          title: address of minter
                          type: string
                        name:
                          title: 'name is the token name, which must be unique (namespace)'
                          type: string
                        paused:
                          title: stop allowance of token minter temporarily
                          type: boolean
                        retired:
                          items:
                            properties:
                              amount:
                                type: string
                              id:
                                type: string
                              jurisdiction:
                                type: string
                              owner:
                                type: string
                              reason:
                                type: string
                            type: object
                          title: |-
                            tokens that has been retired for this Token with specific name and contract
                            address
                          type: array
                        stopped:
                          title: stop allowance of token minter permanently
                          type: boolean
                        supply:
                          title: 'how much has already been minted for this Token type, aka the supply'
                          type: string
                        type:
                          title: type is the token type (eg ixo1155)
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TokenList
      x-stoplight:
        id: 44sti9kcakime
  '/ixo/token/minter/{minter}/{contract_address}':
    get:
      parameters:
        - description: minter address to get Token Doc for
          in: path
          name: minter
          required: true
          schema:
            type: string
        - in: path
          name: contract_address
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  tokenDoc:
                    properties:
                      cancelled:
                        items:
                          properties:
                            amount:
                              type: string
                            id:
                              type: string
                            owner:
                              type: string
                            reason:
                              type: string
                          type: object
                        title: |-
                          tokens that has been cancelled for this Token with specific name and
                          contract address
                        type: array
                      cap:
                        title: |-
                          cap is the maximum number of tokens with this name that can be minted, 0 is
                          unlimited
                        type: string
                      class:
                        title: class is the token protocol entity DID (validated)
                        type: string
                      contract_address:
                        title: generated on token initiation
                        type: string
                      description:
                        title: description is any arbitrary description
                        type: string
                      image:
                        title: image is the image url for the token
                        type: string
                      minter:
                        title: address of minter
                        type: string
                      name:
                        title: 'name is the token name, which must be unique (namespace)'
                        type: string
                      paused:
                        title: stop allowance of token minter temporarily
                        type: boolean
                      retired:
                        items:
                          properties:
                            amount:
                              type: string
                            id:
                              type: string
                            jurisdiction:
                              type: string
                            owner:
                              type: string
                            reason:
                              type: string
                          type: object
                        title: |-
                          tokens that has been retired for this Token with specific name and contract
                          address
                        type: array
                      stopped:
                        title: stop allowance of token minter permanently
                        type: boolean
                      supply:
                        title: 'how much has already been minted for this Token type, aka the supply'
                        type: string
                      type:
                        title: type is the token type (eg ixo1155)
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: TokenDoc
      x-stoplight:
        id: swvnavmn1tpcs
  /ixo/token/params:
    get:
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    properties:
                      ixo1155_contract_code:
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      tags:
        - Query
      operationId: IXOTokenParams
      x-stoplight:
        id: 2u1mu6jrvuee7
components:
  schemas:
    cosmos.app.v1alpha1.Config:
      description: |-
        Config represents the configuration for a Cosmos SDK ABCI app.
        It is intended that all state machine logic including the version of
        baseapp and tx handlers (and possibly even Tendermint) that an app needs
        can be described in a config object. For compatibility, the framework should
        allow a mixture of declarative and imperative app wiring, however, apps
        that strive for the maximum ease of maintainability should be able to describe
        their state machine with a config object alone.
      properties:
        golang_bindings:
          description: |-
            golang_bindings specifies explicit interface to implementation type bindings which
            depinject uses to resolve interface inputs to provider functions.  The scope of this
            field's configuration is global (not module specific).
          items:
            description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
            properties:
              implementation:
                title: implementation is the implementing type which will be supplied when an input of type interface is requested
                type: string
              interface_type:
                title: interface_type is the interface type which will be bound to a specific implementation type
                type: string
            type: object
          type: array
        modules:
          description: modules are the module configurations for the app.
          items:
            description: ModuleConfig is a module configuration for an app.
            properties:
              config:
                description: |-
                  config is the config object for the module. Module config messages should
                  define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              golang_bindings:
                description: |-
                  golang_bindings specifies explicit interface to implementation type bindings which
                  depinject uses to resolve interface inputs to provider functions.  The scope of this
                  field's configuration is module specific.
                items:
                  description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
                  properties:
                    implementation:
                      title: implementation is the implementing type which will be supplied when an input of type interface is requested
                      type: string
                    interface_type:
                      title: interface_type is the interface type which will be bound to a specific implementation type
                      type: string
                  type: object
                type: array
              name:
                description: |-
                  name is the unique name of the module within the app. It should be a name
                  that persists between different versions of a module so that modules
                  can be smoothly upgraded to new versions.

                  For example, for the module cosmos.bank.module.v1.Module, we may chose
                  to simply name the module "bank" in the app. When we upgrade to
                  cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
                  and the framework knows that the v2 module should receive all the same state
                  that the v1 module had. Note: modules should provide info on which versions
                  they can migrate from in the ModuleDescriptor.can_migration_from field.
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: cy8zkn8o3851q
    cosmos.app.v1alpha1.GolangBinding:
      description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
      properties:
        implementation:
          title: implementation is the implementing type which will be supplied when an input of type interface is requested
          type: string
        interface_type:
          title: interface_type is the interface type which will be bound to a specific implementation type
          type: string
      type: object
      x-stoplight:
        id: vmrrujqn3fis0
    cosmos.app.v1alpha1.ModuleConfig:
      description: ModuleConfig is a module configuration for an app.
      properties:
        config:
          description: |-
            config is the config object for the module. Module config messages should
            define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        golang_bindings:
          description: |-
            golang_bindings specifies explicit interface to implementation type bindings which
            depinject uses to resolve interface inputs to provider functions.  The scope of this
            field's configuration is module specific.
          items:
            description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
            properties:
              implementation:
                title: implementation is the implementing type which will be supplied when an input of type interface is requested
                type: string
              interface_type:
                title: interface_type is the interface type which will be bound to a specific implementation type
                type: string
            type: object
          type: array
        name:
          description: |-
            name is the unique name of the module within the app. It should be a name
            that persists between different versions of a module so that modules
            can be smoothly upgraded to new versions.

            For example, for the module cosmos.bank.module.v1.Module, we may chose
            to simply name the module "bank" in the app. When we upgrade to
            cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
            and the framework knows that the v2 module should receive all the same state
            that the v1 module had. Note: modules should provide info on which versions
            they can migrate from in the ModuleDescriptor.can_migration_from field.
          type: string
      type: object
      x-stoplight:
        id: gtcu8gkt7s3bv
    cosmos.app.v1alpha1.QueryConfigResponse:
      description: QueryConfigRequest is the Query/Config response type.
      properties:
        config:
          description: config is the current app config.
          properties:
            golang_bindings:
              description: |-
                golang_bindings specifies explicit interface to implementation type bindings which
                depinject uses to resolve interface inputs to provider functions.  The scope of this
                field's configuration is global (not module specific).
              items:
                description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
                properties:
                  implementation:
                    title: implementation is the implementing type which will be supplied when an input of type interface is requested
                    type: string
                  interface_type:
                    title: interface_type is the interface type which will be bound to a specific implementation type
                    type: string
                type: object
              type: array
            modules:
              description: modules are the module configurations for the app.
              items:
                description: ModuleConfig is a module configuration for an app.
                properties:
                  config:
                    description: |-
                      config is the config object for the module. Module config messages should
                      define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    type: object
                  golang_bindings:
                    description: |-
                      golang_bindings specifies explicit interface to implementation type bindings which
                      depinject uses to resolve interface inputs to provider functions.  The scope of this
                      field's configuration is module specific.
                    items:
                      description: GolangBinding is an explicit interface type to implementing type binding for dependency injection.
                      properties:
                        implementation:
                          title: implementation is the implementing type which will be supplied when an input of type interface is requested
                          type: string
                        interface_type:
                          title: interface_type is the interface type which will be bound to a specific implementation type
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      name is the unique name of the module within the app. It should be a name
                      that persists between different versions of a module so that modules
                      can be smoothly upgraded to new versions.

                      For example, for the module cosmos.bank.module.v1.Module, we may chose
                      to simply name the module "bank" in the app. When we upgrade to
                      cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
                      and the framework knows that the v2 module should receive all the same state
                      that the v1 module had. Note: modules should provide info on which versions
                      they can migrate from in the ModuleDescriptor.can_migration_from field.
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: ohi3lul9uuu8n
    cosmos.auth.v1beta1.AddressBytesToStringResponse:
      description: |-
        AddressBytesToStringResponse is the response type for AddressString rpc method.

        Since: cosmos-sdk 0.46
      properties:
        address_string:
          type: string
      type: object
      x-stoplight:
        id: xlrzzqqwhjehv
    cosmos.auth.v1beta1.AddressStringToBytesResponse:
      description: |-
        AddressStringToBytesResponse is the response type for AddressBytes rpc method.

        Since: cosmos-sdk 0.46
      properties:
        address_bytes:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: sjknaggjmxqvh
    cosmos.auth.v1beta1.BaseAccount:
      description: |-
        BaseAccount defines a base account type. It contains all the necessary fields
        for basic account functionality. Any custom account type should extend this
        type for additional functionality (e.g. vesting).
      properties:
        account_number:
          format: uint64
          type: string
        address:
          type: string
        pub_key:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        sequence:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: rq3gc2qoh2w1b
    cosmos.auth.v1beta1.Bech32PrefixResponse:
      description: |-
        Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

        Since: cosmos-sdk 0.46
      properties:
        bech32_prefix:
          type: string
      type: object
      x-stoplight:
        id: ncd07j8rxyfg1
    cosmos.auth.v1beta1.Params:
      description: Params defines the parameters for the auth module.
      properties:
        max_memo_characters:
          format: uint64
          type: string
        sig_verify_cost_ed25519:
          format: uint64
          type: string
        sig_verify_cost_secp256k1:
          format: uint64
          type: string
        tx_sig_limit:
          format: uint64
          type: string
        tx_size_cost_per_byte:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: hd58p1yvz8idi
    cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
      description: 'Since: cosmos-sdk 0.46.2'
      properties:
        account_address:
          type: string
      title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
      type: object
      x-stoplight:
        id: 85hsz1ad2wy2m
    cosmos.auth.v1beta1.QueryAccountInfoResponse:
      description: |-
        QueryAccountInfoResponse is the Query/AccountInfo response type.

        Since: cosmos-sdk 0.47
      properties:
        info:
          description: info is the account info which is represented by BaseAccount.
          properties:
            account_number:
              format: uint64
              type: string
            address:
              type: string
            pub_key:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            sequence:
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: etmntkq0rpfqt
    cosmos.auth.v1beta1.QueryAccountResponse:
      description: QueryAccountResponse is the response type for the Query/Account RPC method.
      properties:
        account:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
      type: object
      x-stoplight:
        id: sq7t9bnv72hvm
    cosmos.auth.v1beta1.QueryAccountsResponse:
      description: |-
        QueryAccountsResponse is the response type for the Query/Accounts RPC method.

        Since: cosmos-sdk 0.43
      properties:
        accounts:
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          title: accounts are the existing accounts
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: euxr8vm9td742
    cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
      description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method.
      properties:
        account:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
      type: object
      x-stoplight:
        id: fp5s7kjgz5q58
    cosmos.auth.v1beta1.QueryModuleAccountsResponse:
      description: |-
        QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

        Since: cosmos-sdk 0.46
      properties:
        accounts:
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: q0qdvmj2hgast
    cosmos.auth.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            max_memo_characters:
              format: uint64
              type: string
            sig_verify_cost_ed25519:
              format: uint64
              type: string
            sig_verify_cost_secp256k1:
              format: uint64
              type: string
            tx_sig_limit:
              format: uint64
              type: string
            tx_size_cost_per_byte:
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: 2ybtyt7myo7be
    cosmos.authz.v1beta1.Grant:
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
      properties:
        authorization:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        expiration:
          format: date-time
          title: |-
            time when the grant will expire and will be pruned. If null, then the grant
            doesn't have a time expiration (other conditions  in `authorization`
            may apply to invalidate the grant)
          type: string
      type: object
      x-stoplight:
        id: 74fz5w8s7i5pp
    cosmos.authz.v1beta1.GrantAuthorization:
      properties:
        authorization:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        expiration:
          format: date-time
          type: string
        grantee:
          type: string
        granter:
          type: string
      title: |-
        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
        It is used in genesis.proto and query.proto
      type: object
      x-stoplight:
        id: sjvm4xhoprary
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
      description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
      properties:
        grants:
          description: grants is a list of grants granted to the grantee.
          items:
            properties:
              authorization:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                type: string
              grantee:
                type: string
              granter:
                type: string
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 0f8xstgsi9zsl
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
      description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
      properties:
        grants:
          description: grants is a list of grants granted by the granter.
          items:
            properties:
              authorization:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                type: string
              grantee:
                type: string
              granter:
                type: string
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: ajejfbldx6akf
    cosmos.authz.v1beta1.QueryGrantsResponse:
      description: QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
      properties:
        grants:
          description: authorizations is a list of grants granted for grantee by granter.
          items:
            description: |-
              Grant gives permissions to execute
              the provide method with expiration time.
            properties:
              authorization:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                title: |-
                  time when the grant will expire and will be pruned. If null, then the grant
                  doesn't have a time expiration (other conditions  in `authorization`
                  may apply to invalidate the grant)
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 7juvtf6tnzzod
    cosmos.bank.v1beta1.DenomOwner:
      description: |-
        DenomOwner defines structure representing an account that owns or holds a
        particular denominated token. It contains the account address and account
        balance of the denominated token.

        Since: cosmos-sdk 0.46
      properties:
        address:
          description: address defines the address that owns a particular denomination.
          type: string
        balance:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 0kwmk0vzh3xvn
    cosmos.bank.v1beta1.DenomUnit:
      description: |-
        DenomUnit represents a struct that describes a given
        denomination unit of the basic token.
      properties:
        aliases:
          items:
            type: string
          title: aliases is a list of string aliases for the given denom
          type: array
        denom:
          description: denom represents the string name of the given denom unit (e.g uatom).
          type: string
        exponent:
          description: |-
            exponent represents power of 10 exponent that one must
            raise the base_denom to in order to equal the given DenomUnit's denom
            1 denom = 10^exponent base_denom
            (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
            exponent = 6, thus: 1 atom = 10^6 uatom).
          format: int64
          type: integer
      type: object
      x-stoplight:
        id: w7izm5asd9em6
    cosmos.bank.v1beta1.Metadata:
      description: |-
        Metadata represents a struct that describes
        a basic token.
      properties:
        base:
          description: base represents the base denom (should be the DenomUnit with exponent = 0).
          type: string
        denom_units:
          items:
            description: |-
              DenomUnit represents a struct that describes a given
              denomination unit of the basic token.
            properties:
              aliases:
                items:
                  type: string
                title: aliases is a list of string aliases for the given denom
                type: array
              denom:
                description: denom represents the string name of the given denom unit (e.g uatom).
                type: string
              exponent:
                description: |-
                  exponent represents power of 10 exponent that one must
                  raise the base_denom to in order to equal the given DenomUnit's denom
                  1 denom = 10^exponent base_denom
                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                  exponent = 6, thus: 1 atom = 10^6 uatom).
                format: int64
                type: integer
            type: object
          title: denom_units represents the list of DenomUnit's for a given coin
          type: array
        description:
          type: string
        display:
          description: |-
            display indicates the suggested denom that should be
            displayed in clients.
          type: string
        name:
          description: 'Since: cosmos-sdk 0.43'
          title: 'name defines the name of the token (eg: Cosmos Atom)'
          type: string
        symbol:
          description: |-
            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
            be the same as the display.

            Since: cosmos-sdk 0.43
          type: string
        uri:
          description: |-
            URI to a document (on or off-chain) that contains additional information. Optional.

            Since: cosmos-sdk 0.46
          type: string
        uri_hash:
          description: |-
            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
            the document didn't change. Optional.

            Since: cosmos-sdk 0.46
          type: string
      type: object
      x-stoplight:
        id: hul98xj6nuaa3
    cosmos.bank.v1beta1.Params:
      description: Params defines the parameters for the bank module.
      properties:
        default_send_enabled:
          type: boolean
        send_enabled:
          description: |-
            Deprecated: Use of SendEnabled in params is deprecated.
            For genesis, use the newly added send_enabled field in the genesis object.
            Storage, lookup, and manipulation of this information is now in the keeper.

            As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
          items:
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            type: object
          type: array
      type: object
      x-stoplight:
        id: z1z0lkvcwbt6a
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      description: |-
        QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
        method.
      properties:
        balances:
          description: balances is the balances of all the coins.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: cz0qog66akt12
    cosmos.bank.v1beta1.QueryBalanceResponse:
      description: QueryBalanceResponse is the response type for the Query/Balance RPC method.
      properties:
        balance:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: me2ii9tpr7cys
    cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse:
      description: |-
        QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
        method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
      properties:
        metadata:
          description: |-
            Metadata represents a struct that describes
            a basic token.
          properties:
            base:
              description: base represents the base denom (should be the DenomUnit with exponent = 0).
              type: string
            denom_units:
              items:
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
                properties:
                  aliases:
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                    type: array
                  denom:
                    description: denom represents the string name of the given denom unit (e.g uatom).
                    type: string
                  exponent:
                    description: |-
                      exponent represents power of 10 exponent that one must
                      raise the base_denom to in order to equal the given DenomUnit's denom
                      1 denom = 10^exponent base_denom
                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                    type: integer
                type: object
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
            description:
              type: string
            display:
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
              type: string
            name:
              description: 'Since: cosmos-sdk 0.43'
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
            symbol:
              description: |-
                symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                be the same as the display.

                Since: cosmos-sdk 0.43
              type: string
            uri:
              description: |-
                URI to a document (on or off-chain) that contains additional information. Optional.

                Since: cosmos-sdk 0.46
              type: string
            uri_hash:
              description: |-
                URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                the document didn't change. Optional.

                Since: cosmos-sdk 0.46
              type: string
          type: object
      type: object
      x-stoplight:
        id: 88wm7jd07ldcf
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      description: |-
        QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
        method.
      properties:
        metadata:
          description: |-
            Metadata represents a struct that describes
            a basic token.
          properties:
            base:
              description: base represents the base denom (should be the DenomUnit with exponent = 0).
              type: string
            denom_units:
              items:
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
                properties:
                  aliases:
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                    type: array
                  denom:
                    description: denom represents the string name of the given denom unit (e.g uatom).
                    type: string
                  exponent:
                    description: |-
                      exponent represents power of 10 exponent that one must
                      raise the base_denom to in order to equal the given DenomUnit's denom
                      1 denom = 10^exponent base_denom
                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                    type: integer
                type: object
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
            description:
              type: string
            display:
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
              type: string
            name:
              description: 'Since: cosmos-sdk 0.43'
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
            symbol:
              description: |-
                symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                be the same as the display.

                Since: cosmos-sdk 0.43
              type: string
            uri:
              description: |-
                URI to a document (on or off-chain) that contains additional information. Optional.

                Since: cosmos-sdk 0.46
              type: string
            uri_hash:
              description: |-
                URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                the document didn't change. Optional.

                Since: cosmos-sdk 0.46
              type: string
          type: object
      type: object
      x-stoplight:
        id: pu5604wghk7cb
    cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse:
      description: |-
        QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.

        Since: cosmos-sdk 0.50.3
      properties:
        denom_owners:
          items:
            description: |-
              DenomOwner defines structure representing an account that owns or holds a
              particular denominated token. It contains the account address and account
              balance of the denominated token.

              Since: cosmos-sdk 0.46
            properties:
              address:
                description: address defines the address that owns a particular denomination.
                type: string
              balance:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 6q34vmypzvyx5
    cosmos.bank.v1beta1.QueryDenomOwnersResponse:
      description: |-
        QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

        Since: cosmos-sdk 0.46
      properties:
        denom_owners:
          items:
            description: |-
              DenomOwner defines structure representing an account that owns or holds a
              particular denominated token. It contains the account address and account
              balance of the denominated token.

              Since: cosmos-sdk 0.46
            properties:
              address:
                description: address defines the address that owns a particular denomination.
                type: string
              balance:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: pp2s0cknpo7yd
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      description: |-
        QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
        method.
      properties:
        metadatas:
          description: metadata provides the client information for all the registered tokens.
          items:
            description: |-
              Metadata represents a struct that describes
              a basic token.
            properties:
              base:
                description: base represents the base denom (should be the DenomUnit with exponent = 0).
                type: string
              denom_units:
                items:
                  description: |-
                    DenomUnit represents a struct that describes a given
                    denomination unit of the basic token.
                  properties:
                    aliases:
                      items:
                        type: string
                      title: aliases is a list of string aliases for the given denom
                      type: array
                    denom:
                      description: denom represents the string name of the given denom unit (e.g uatom).
                      type: string
                    exponent:
                      description: |-
                        exponent represents power of 10 exponent that one must
                        raise the base_denom to in order to equal the given DenomUnit's denom
                        1 denom = 10^exponent base_denom
                        (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                        exponent = 6, thus: 1 atom = 10^6 uatom).
                      format: int64
                      type: integer
                  type: object
                title: denom_units represents the list of DenomUnit's for a given coin
                type: array
              description:
                type: string
              display:
                description: |-
                  display indicates the suggested denom that should be
                  displayed in clients.
                type: string
              name:
                description: 'Since: cosmos-sdk 0.43'
                title: 'name defines the name of the token (eg: Cosmos Atom)'
                type: string
              symbol:
                description: |-
                  symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                  be the same as the display.

                  Since: cosmos-sdk 0.43
                type: string
              uri:
                description: |-
                  URI to a document (on or off-chain) that contains additional information. Optional.

                  Since: cosmos-sdk 0.46
                type: string
              uri_hash:
                description: |-
                  URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                  the document didn't change. Optional.

                  Since: cosmos-sdk 0.46
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: qp80xf8l9fkjm
    cosmos.bank.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse defines the response type for querying x/bank parameters.
      properties:
        params:
          description: params provides the parameters of the bank module.
          properties:
            default_send_enabled:
              type: boolean
            send_enabled:
              description: |-
                Deprecated: Use of SendEnabled in params is deprecated.
                For genesis, use the newly added send_enabled field in the genesis object.
                Storage, lookup, and manipulation of this information is now in the keeper.

                As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
              items:
                description: |-
                  SendEnabled maps coin denom to a send_enabled status (whether a denom is
                  sendable).
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: 6qj3q6eapnv7k
    cosmos.bank.v1beta1.QuerySendEnabledResponse:
      description: |-
        QuerySendEnabledResponse defines the RPC response of a SendEnable query.

        Since: cosmos-sdk 0.47
      properties:
        pagination:
          description: |-
            pagination defines the pagination in the response. This field is only
            populated if the denoms field in the request is empty.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        send_enabled:
          items:
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            type: object
          type: array
      type: object
      x-stoplight:
        id: ydw4ag6xrk525
    cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
      description: |-
        QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
        querying an account's spendable balance for a specific denom.

        Since: cosmos-sdk 0.47
      properties:
        balance:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: u27iw40jf9z15
    cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
      description: |-
        QuerySpendableBalancesResponse defines the gRPC response structure for querying
        an account's spendable balances.

        Since: cosmos-sdk 0.46
      properties:
        balances:
          description: balances is the spendable balances of all the coins.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 49jlqr6uc1jc6
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
      properties:
        amount:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 7u1uqjrimeshn
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      properties:
        pagination:
          description: |-
            pagination defines the pagination in the response.

            Since: cosmos-sdk 0.43
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        supply:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: supply is the supply of the coins
          type: array
      title: |-
        QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
        method
      type: object
      x-stoplight:
        id: mduf41js8ccal
    cosmos.bank.v1beta1.SendEnabled:
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      type: object
      x-stoplight:
        id: bgskwxm2wki5n
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
      properties:
        events:
          description: |-
            Events contains a slice of Event objects that were emitted during some
            execution.
          items:
            description: |-
              StringEvent defines en Event object wrapper where all the attributes
              contain key/value pairs that are strings instead of raw bytes.
            properties:
              attributes:
                items:
                  description: |-
                    Attribute defines an attribute wrapper where the key and value are
                    strings instead of raw bytes.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        log:
          type: string
        msg_index:
          format: int64
          type: integer
      type: object
      x-stoplight:
        id: l4uambaoonzie
    cosmos.base.abci.v1beta1.Attribute:
      description: |-
        Attribute defines an attribute wrapper where the key and value are
        strings instead of raw bytes.
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      x-stoplight:
        id: ktq5nyb2b0qea
    cosmos.base.abci.v1beta1.GasInfo:
      description: GasInfo defines tx execution gas context.
      properties:
        gas_used:
          description: GasUsed is the amount of gas actually consumed.
          format: uint64
          type: string
        gas_wanted:
          description: GasWanted is the maximum units of work we allow this tx to perform.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: fmyzg98lz5mac
    cosmos.base.abci.v1beta1.Result:
      description: Result is the union of ResponseFormat and ResponseCheckTx.
      properties:
        data:
          description: |-
            Data is any data returned from message or handler execution. It MUST be
            length prefixed in order to separate data from multiple message executions.
            Deprecated. This field is still populated, but prefer msg_response instead
            because it also contains the Msg response typeURL.
          format: byte
          type: string
        events:
          description: |-
            Events contains a slice of Event objects that were emitted during message
            or handler execution.
          items:
            description: |-
              Event allows application developers to attach additional information to
              ResponseFinalizeBlock and ResponseCheckTx.
              Later, transactions may be queried using these events.
            properties:
              attributes:
                items:
                  description: 'EventAttribute is a single key-value pair, associated with an event.'
                  properties:
                    index:
                      type: boolean
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        log:
          description: Log contains the log information from message or handler execution.
          type: string
        msg_responses:
          description: |-
            msg_responses contains the Msg handler responses type packed in Anys.

            Since: cosmos-sdk 0.46
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: y19q38ta0xndc
    cosmos.base.abci.v1beta1.StringEvent:
      description: |-
        StringEvent defines en Event object wrapper where all the attributes
        contain key/value pairs that are strings instead of raw bytes.
      properties:
        attributes:
          items:
            description: |-
              Attribute defines an attribute wrapper where the key and value are
              strings instead of raw bytes.
            properties:
              key:
                type: string
              value:
                type: string
            type: object
          type: array
        type:
          type: string
      type: object
      x-stoplight:
        id: 8kzl0b630en65
    cosmos.base.abci.v1beta1.TxResponse:
      description: |-
        TxResponse defines a structure containing relevant tx data and metadata. The
        tags are stringified and the log is JSON decoded.
      properties:
        info:
          description: Additional information. May be non-deterministic.
          type: string
        code:
          description: Response code.
          format: int64
          type: integer
        codespace:
          title: Namespace for the Code
          type: string
        data:
          description: 'Result bytes, if any.'
          type: string
        events:
          description: |-
            Events defines all the events emitted by processing a transaction. Note,
            these events include those emitted by processing all the messages and those
            emitted from the ante. Whereas Logs contains the events, with
            additional metadata, emitted only by processing the messages.

            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          items:
            description: |-
              Event allows application developers to attach additional information to
              ResponseFinalizeBlock and ResponseCheckTx.
              Later, transactions may be queried using these events.
            properties:
              attributes:
                items:
                  description: 'EventAttribute is a single key-value pair, associated with an event.'
                  properties:
                    index:
                      type: boolean
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        gas_used:
          description: Amount of gas consumed by transaction.
          format: int64
          type: string
        gas_wanted:
          description: Amount of gas requested for transaction.
          format: int64
          type: string
        height:
          format: int64
          title: The block height
          type: string
        logs:
          description: The output of the application's logger (typed). May be non-deterministic.
          items:
            description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
            properties:
              events:
                description: |-
                  Events contains a slice of Event objects that were emitted during some
                  execution.
                items:
                  description: |-
                    StringEvent defines en Event object wrapper where all the attributes
                    contain key/value pairs that are strings instead of raw bytes.
                  properties:
                    attributes:
                      items:
                        description: |-
                          Attribute defines an attribute wrapper where the key and value are
                          strings instead of raw bytes.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                type: array
              log:
                type: string
              msg_index:
                format: int64
                type: integer
            type: object
          type: array
        raw_log:
          description: |-
            The output of the application's logger (raw string). May be
            non-deterministic.
          type: string
        timestamp:
          description: |-
            Time of the previous block. For heights > 1, it's the weighted median of
            the timestamps of the valid votes in the block.LastCommit. For height == 1,
            it's genesis time.
          type: string
        tx:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        txhash:
          description: The transaction hash.
          type: string
      type: object
      x-stoplight:
        id: 25qui6cyvup8n
    cosmos.base.node.v1beta1.ConfigResponse:
      description: ConfigResponse defines the response structure for the Config gRPC query.
      properties:
        halt_height:
          format: uint64
          type: string
        minimum_gas_price:
          type: string
        pruning_interval:
          type: string
        pruning_keep_recent:
          type: string
      type: object
      x-stoplight:
        id: 1ut2mvhoak5u1
    cosmos.base.node.v1beta1.StatusResponse:
      description: StateResponse defines the response structure for the status of a node.
      properties:
        app_hash:
          format: byte
          type: string
        earliest_store_height:
          format: uint64
          type: string
        height:
          format: uint64
          type: string
        timestamp:
          format: date-time
          type: string
        validator_hash:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: kc8s53l5e0min
    cosmos.base.query.v1beta1.PageRequest:
      description: |-
        message SomeRequest {
                 Foo some_parameter = 1;
                 PageRequest pagination = 2;
         }
      properties:
        count_total:
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          type: boolean
        key:
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          type: string
        limit:
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          format: uint64
          type: string
        offset:
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          format: uint64
          type: string
        reverse:
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          type: boolean
      title: |-
        PageRequest is to be embedded in gRPC request messages for efficient
        pagination. Ex:
      type: object
      x-stoplight:
        id: r68vrx02fyl77
    cosmos.base.query.v1beta1.PageResponse:
      description: |-
        PageResponse is to be embedded in gRPC response messages where the
        corresponding request message has used PageRequest.

         message SomeResponse {
                 repeated Bar results = 1;
                 PageResponse page = 2;
         }
      properties:
        next_key:
          description: |-
            next_key is the key to be passed to PageRequest.key to
            query the next page most efficiently. It will be empty if
            there are no more results.
          format: byte
          type: string
        total:
          format: uint64
          title: |-
            total is total number of results available if PageRequest.count_total
            was set, its value is undefined otherwise
          type: string
      type: object
      x-stoplight:
        id: ghfccalrsdd5b
    cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
      description: |-
        ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

        Note: This type is a duplicate of the ResponseQuery proto type defined in
        Tendermint.
      properties:
        info:
          type: string
        code:
          format: int64
          type: integer
        codespace:
          type: string
        height:
          format: int64
          type: string
        index:
          format: int64
          type: string
        key:
          format: byte
          type: string
        log:
          type: string
        proof_ops:
          description: |-
            ProofOps is Merkle proof defined by the list of ProofOps.

            Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
          properties:
            ops:
              items:
                description: |-
                  ProofOp defines an operation used for calculating Merkle root. The data could
                  be arbitrary format, providing necessary data for example neighbouring node
                  hash.

                  Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
                properties:
                  data:
                    format: byte
                    type: string
                  key:
                    format: byte
                    type: string
                  type:
                    type: string
                type: object
              type: array
          type: object
        value:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: rchap9ye7k5fm
    cosmos.base.tendermint.v1beta1.Block:
      description: |-
        Block is tendermint type Block, with the Header proposer address
        field converted to bech32 string.
      properties:
        data:
          properties:
            txs:
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                format: byte
                type: string
              type: array
          title: Data contains the set of transactions included in the block
          type: object
        evidence:
          properties:
            evidence:
              items:
                properties:
                  duplicate_vote_evidence:
                    description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                    properties:
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                      validator_power:
                        format: int64
                        type: string
                      vote_a:
                        description: |-
                          Vote represents a prevote or precommit vote from validators for
                          consensus.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          extension:
                            description: |-
                              Vote extension provided by the application. Only valid for precommit
                              messages.
                            format: byte
                            type: string
                          extension_signature:
                            description: |-
                              Vote extension signature by the validator if they participated in
                              consensus for the associated block.
                              Only valid for precommit messages.
                            format: byte
                            type: string
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            description: |-
                              Vote signature by the validator if they participated in consensus for the
                              associated block.
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                      vote_b:
                        description: |-
                          Vote represents a prevote or precommit vote from validators for
                          consensus.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          extension:
                            description: |-
                              Vote extension provided by the application. Only valid for precommit
                              messages.
                            format: byte
                            type: string
                          extension_signature:
                            description: |-
                              Vote extension signature by the validator if they participated in
                              consensus for the associated block.
                              Only valid for precommit messages.
                            format: byte
                            type: string
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            description: |-
                              Vote signature by the validator if they participated in consensus for the
                              associated block.
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                    type: object
                  light_client_attack_evidence:
                    description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                    properties:
                      byzantine_validators:
                        items:
                          properties:
                            address:
                              format: byte
                              type: string
                            proposer_priority:
                              format: int64
                              type: string
                            pub_key:
                              properties:
                                ed25519:
                                  format: byte
                                  type: string
                                secp256k1:
                                  format: byte
                                  type: string
                              title: PublicKey defines the keys available for use with Validators
                              type: object
                            voting_power:
                              format: int64
                              type: string
                          type: object
                        type: array
                      common_height:
                        format: int64
                        type: string
                      conflicting_block:
                        properties:
                          signed_header:
                            properties:
                              commit:
                                description: Commit contains the evidence that a block was committed by a set of validators.
                                properties:
                                  block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  height:
                                    format: int64
                                    type: string
                                  round:
                                    format: int32
                                    type: integer
                                  signatures:
                                    items:
                                      description: CommitSig is a part of the Vote included in a Commit.
                                      properties:
                                        block_id_flag:
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                          title: BlockIdFlag indicates which BlockID the signature is for
                                          type: string
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              header:
                                description: Header defines the structure of a block header.
                                properties:
                                  app_hash:
                                    format: byte
                                    type: string
                                  chain_id:
                                    type: string
                                  consensus_hash:
                                    format: byte
                                    type: string
                                  data_hash:
                                    format: byte
                                    type: string
                                  evidence_hash:
                                    format: byte
                                    title: consensus info
                                    type: string
                                  height:
                                    format: int64
                                    type: string
                                  last_block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  last_commit_hash:
                                    format: byte
                                    title: hashes of block data
                                    type: string
                                  last_results_hash:
                                    format: byte
                                    type: string
                                  next_validators_hash:
                                    format: byte
                                    type: string
                                  proposer_address:
                                    format: byte
                                    type: string
                                  time:
                                    format: date-time
                                    type: string
                                  validators_hash:
                                    format: byte
                                    title: hashes from the app output from the prev block
                                    type: string
                                  version:
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                    properties:
                                      app:
                                        format: uint64
                                        type: string
                                      block:
                                        format: uint64
                                        type: string
                                    title: basic block info
                                    type: object
                                type: object
                            type: object
                          validator_set:
                            properties:
                              proposer:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: PublicKey defines the keys available for use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              total_voting_power:
                                format: int64
                                type: string
                              validators:
                                items:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                    type: object
                type: object
              type: array
          type: object
        header:
          description: Header defines the structure of a Tendermint block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              description: |-
                proposer_address is the original block proposer address, formatted as a Bech32 string.
                In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                for better UX.
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
        last_commit:
          description: Commit contains the evidence that a block was committed by a set of validators.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signatures:
              items:
                description: CommitSig is a part of the Vote included in a Commit.
                properties:
                  block_id_flag:
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                    title: BlockIdFlag indicates which BlockID the signature is for
                    type: string
                  signature:
                    format: byte
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_address:
                    format: byte
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: ordayacubbf0p
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
      properties:
        block:
          properties:
            data:
              properties:
                txs:
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlockID the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the prev block
                                        type: string
                                      version:
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available for use with Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          title: 'Deprecated: please use `sdk_block` instead'
          type: object
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        sdk_block:
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to bech32 string.
          properties:
            data:
              properties:
                txs:
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlockID the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the prev block
                                        type: string
                                      version:
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available for use with Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  description: |-
                    proposer_address is the original block proposer address, formatted as a Bech32 string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                    for better UX.
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          title: 'Since: cosmos-sdk 0.47'
          type: object
      type: object
      x-stoplight:
        id: 38t230fwj64m6
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
      properties:
        block:
          properties:
            data:
              properties:
                txs:
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlockID the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the prev block
                                        type: string
                                      version:
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available for use with Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          title: 'Deprecated: please use `sdk_block` instead'
          type: object
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        sdk_block:
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to bech32 string.
          properties:
            data:
              properties:
                txs:
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlockID the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the prev block
                                        type: string
                                      version:
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available for use with Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  description: |-
                    proposer_address is the original block proposer address, formatted as a Bech32 string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                    for better UX.
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          title: 'Since: cosmos-sdk 0.47'
          type: object
      type: object
      x-stoplight:
        id: 17348lbbf2vup
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
      properties:
        block_height:
          format: int64
          type: string
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        validators:
          items:
            description: Validator is the type for the validator-set.
            properties:
              address:
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: twjj7picx82o1
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
      properties:
        application_version:
          description: VersionInfo is the type for the GetNodeInfoResponse message.
          properties:
            app_name:
              type: string
            build_deps:
              items:
                properties:
                  path:
                    title: module path
                    type: string
                  sum:
                    title: checksum
                    type: string
                  version:
                    title: module version
                    type: string
                title: Module is the type for VersionInfo
                type: object
              type: array
            build_tags:
              type: string
            cosmos_sdk_version:
              title: 'Since: cosmos-sdk 0.43'
              type: string
            git_commit:
              type: string
            go_version:
              type: string
            name:
              type: string
            version:
              type: string
          type: object
        default_node_info:
          properties:
            channels:
              format: byte
              type: string
            default_node_id:
              type: string
            listen_addr:
              type: string
            moniker:
              type: string
            network:
              type: string
            other:
              properties:
                rpc_address:
                  type: string
                tx_index:
                  type: string
              type: object
            protocol_version:
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
                p2p:
                  format: uint64
                  type: string
              type: object
            version:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 2uwnxd00pqkmo
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      description: GetSyncingResponse is the response type for the Query/GetSyncing RPC method.
      properties:
        syncing:
          type: boolean
      type: object
      x-stoplight:
        id: 50heta27qwzg1
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
      properties:
        block_height:
          format: int64
          type: string
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        validators:
          items:
            description: Validator is the type for the validator-set.
            properties:
              address:
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 37nqmr4yteyml
    cosmos.base.tendermint.v1beta1.Header:
      description: Header defines the structure of a Tendermint block header.
      properties:
        app_hash:
          format: byte
          type: string
        chain_id:
          type: string
        consensus_hash:
          format: byte
          type: string
        data_hash:
          format: byte
          type: string
        evidence_hash:
          format: byte
          title: consensus info
          type: string
        height:
          format: int64
          type: string
        last_block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        last_commit_hash:
          format: byte
          title: hashes of block data
          type: string
        last_results_hash:
          format: byte
          type: string
        next_validators_hash:
          format: byte
          type: string
        proposer_address:
          description: |-
            proposer_address is the original block proposer address, formatted as a Bech32 string.
            In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
            for better UX.
          type: string
        time:
          format: date-time
          type: string
        validators_hash:
          format: byte
          title: hashes from the app output from the prev block
          type: string
        version:
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
          properties:
            app:
              format: uint64
              type: string
            block:
              format: uint64
              type: string
          title: basic block info
          type: object
      type: object
      x-stoplight:
        id: 5mzyl4gxbeheh
    cosmos.base.tendermint.v1beta1.Module:
      properties:
        path:
          title: module path
          type: string
        sum:
          title: checksum
          type: string
        version:
          title: module version
          type: string
      title: Module is the type for VersionInfo
      type: object
      x-stoplight:
        id: dmck7nbxuptlc
    cosmos.base.tendermint.v1beta1.ProofOp:
      description: |-
        ProofOp defines an operation used for calculating Merkle root. The data could
        be arbitrary format, providing necessary data for example neighbouring node
        hash.

        Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
      properties:
        data:
          format: byte
          type: string
        key:
          format: byte
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: kii9q9h8nigi8
    cosmos.base.tendermint.v1beta1.ProofOps:
      description: |-
        ProofOps is Merkle proof defined by the list of ProofOps.

        Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
      properties:
        ops:
          items:
            description: |-
              ProofOp defines an operation used for calculating Merkle root. The data could
              be arbitrary format, providing necessary data for example neighbouring node
              hash.

              Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
            properties:
              data:
                format: byte
                type: string
              key:
                format: byte
                type: string
              type:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: lv66ovf0y31tx
    cosmos.base.tendermint.v1beta1.Validator:
      description: Validator is the type for the validator-set.
      properties:
        address:
          type: string
        proposer_priority:
          format: int64
          type: string
        pub_key:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        voting_power:
          format: int64
          type: string
      type: object
      x-stoplight:
        id: 3m24lbp7yoiiy
    cosmos.base.tendermint.v1beta1.VersionInfo:
      description: VersionInfo is the type for the GetNodeInfoResponse message.
      properties:
        app_name:
          type: string
        build_deps:
          items:
            properties:
              path:
                title: module path
                type: string
              sum:
                title: checksum
                type: string
              version:
                title: module version
                type: string
            title: Module is the type for VersionInfo
            type: object
          type: array
        build_tags:
          type: string
        cosmos_sdk_version:
          title: 'Since: cosmos-sdk 0.43'
          type: string
        git_commit:
          type: string
        go_version:
          type: string
        name:
          type: string
        version:
          type: string
      type: object
      x-stoplight:
        id: doo7z4upa0klt
    cosmos.base.v1beta1.Coin:
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
      properties:
        amount:
          type: string
        denom:
          type: string
      type: object
      x-stoplight:
        id: qjo9xq421vw0r
    cosmos.base.v1beta1.DecCoin:
      description: |-
        DecCoin defines a token with a denomination and a decimal amount.

        NOTE: The amount field is an Dec which implements the custom method
        signatures required by gogoproto.
      properties:
        amount:
          type: string
        denom:
          type: string
      type: object
      x-stoplight:
        id: zo5atg234qiwl
    cosmos.circuit.v1.AccountResponse:
      description: AccountResponse is the response type for the Query/Account RPC method.
      properties:
        permission:
          description: |-
            Permissions are the permissions that an account has to trip
            or reset the circuit breaker.
          properties:
            level:
              default: LEVEL_NONE_UNSPECIFIED
              description: level is the level of permissions granted to this account.
              enum:
                - LEVEL_NONE_UNSPECIFIED
                - LEVEL_SOME_MSGS
                - LEVEL_ALL_MSGS
                - LEVEL_SUPER_ADMIN
              type: string
            limit_type_urls:
              description: |-
                limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                URLs that the account can trip. It is an error to use limit_type_urls with
                a level other than LEVEL_SOME_MSGS.
              items:
                type: string
              type: array
          type: object
      type: object
      x-stoplight:
        id: hm9hm6ixdg5x4
    cosmos.circuit.v1.AccountsResponse:
      description: AccountsResponse is the response type for the Query/Accounts RPC method.
      properties:
        accounts:
          items:
            properties:
              address:
                type: string
              permissions:
                description: |-
                  Permissions are the permissions that an account has to trip
                  or reset the circuit breaker.
                properties:
                  level:
                    default: LEVEL_NONE_UNSPECIFIED
                    description: level is the level of permissions granted to this account.
                    enum:
                      - LEVEL_NONE_UNSPECIFIED
                      - LEVEL_SOME_MSGS
                      - LEVEL_ALL_MSGS
                      - LEVEL_SUPER_ADMIN
                    type: string
                  limit_type_urls:
                    description: |-
                      limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                      URLs that the account can trip. It is an error to use limit_type_urls with
                      a level other than LEVEL_SOME_MSGS.
                    items:
                      type: string
                    type: array
                type: object
            title: GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: xdvc34qof6tll
    cosmos.circuit.v1.DisabledListResponse:
      description: DisabledListResponse is the response type for the Query/DisabledList RPC method.
      properties:
        disabled_list:
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: rqxelarexyuld
    cosmos.circuit.v1.GenesisAccountPermissions:
      properties:
        address:
          type: string
        permissions:
          description: |-
            Permissions are the permissions that an account has to trip
            or reset the circuit breaker.
          properties:
            level:
              default: LEVEL_NONE_UNSPECIFIED
              description: level is the level of permissions granted to this account.
              enum:
                - LEVEL_NONE_UNSPECIFIED
                - LEVEL_SOME_MSGS
                - LEVEL_ALL_MSGS
                - LEVEL_SUPER_ADMIN
              type: string
            limit_type_urls:
              description: |-
                limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                URLs that the account can trip. It is an error to use limit_type_urls with
                a level other than LEVEL_SOME_MSGS.
              items:
                type: string
              type: array
          type: object
      title: GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
      type: object
      x-stoplight:
        id: bz0owv25umdrd
    cosmos.circuit.v1.Permissions:
      description: |-
        Permissions are the permissions that an account has to trip
        or reset the circuit breaker.
      properties:
        level:
          default: LEVEL_NONE_UNSPECIFIED
          description: level is the level of permissions granted to this account.
          enum:
            - LEVEL_NONE_UNSPECIFIED
            - LEVEL_SOME_MSGS
            - LEVEL_ALL_MSGS
            - LEVEL_SUPER_ADMIN
          type: string
        limit_type_urls:
          description: |-
            limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
            URLs that the account can trip. It is an error to use limit_type_urls with
            a level other than LEVEL_SOME_MSGS.
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: w8l5wp3hw5jsm
    cosmos.circuit.v1.Permissions.Level:
      default: LEVEL_NONE_UNSPECIFIED
      description: |-
        Level is the permission level.

         - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
        breaker permissions.
         - LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission to
        trip or reset the circuit breaker for some Msg type URLs. If this level
        is chosen, a non-empty list of Msg type URLs must be provided in
        limit_type_urls.
         - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
        breaker for Msg's of all type URLs.
         - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
        actions and can grant permissions to other accounts.
      enum:
        - LEVEL_NONE_UNSPECIFIED
        - LEVEL_SOME_MSGS
        - LEVEL_ALL_MSGS
        - LEVEL_SUPER_ADMIN
      type: string
      x-stoplight:
        id: p4ohf1du6tbpz
    cosmos.consensus.v1.QueryParamsResponse:
      description: QueryParamsResponse defines the response type for querying x/consensus parameters.
      properties:
        params:
          description: |-
            params are the tendermint consensus params stored in the consensus module.
            Please note that `params.version` is not populated in this response, it is
            tracked separately in the x/upgrade module.
          properties:
            abci:
              description: ABCIParams configure functionality specific to the Application Blockchain Interface.
              properties:
                vote_extensions_enable_height:
                  description: |-
                    vote_extensions_enable_height configures the first height during which
                    vote extensions will be enabled. During this specified height, and for all
                    subsequent heights, precommit messages that do not contain valid extension data
                    will be considered invalid. Prior to this height, vote extensions will not
                    be used or accepted by validators on the network.

                    Once enabled, vote extensions will be created by the application in ExtendVote,
                    passed to the application for validation in VerifyVoteExtension and given
                    to the application to use when proposing a block during PrepareProposal.
                  format: int64
                  type: string
              type: object
            block:
              description: BlockParams contains limits on the block size.
              properties:
                max_bytes:
                  format: int64
                  title: |-
                    Max block size, in bytes.
                    Note: must be greater than 0
                  type: string
                max_gas:
                  format: int64
                  title: |-
                    Max gas per block.
                    Note: must be greater or equal to -1
                  type: string
              type: object
            evidence:
              description: EvidenceParams determine how we handle evidence of malfeasance.
              properties:
                max_age_duration:
                  description: |-
                    Max age of evidence, in time.

                    It should correspond with an app's "unbonding period" or other similar
                    mechanism for handling [Nothing-At-Stake
                    attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                  type: string
                max_age_num_blocks:
                  description: |-
                    Max age of evidence, in blocks.

                    The basic formula for calculating this is: MaxAgeDuration / {average block
                    time}.
                  format: int64
                  type: string
                max_bytes:
                  format: int64
                  title: |-
                    This sets the maximum size of total evidence in bytes that can be committed in a single block.
                    and should fall comfortably under the max block bytes.
                    Default is 1048576 or 1MB
                  type: string
              type: object
            validator:
              description: |-
                ValidatorParams restrict the public key types validators can use.
                NOTE: uses ABCI pubkey naming, not Amino names.
              properties:
                pub_key_types:
                  items:
                    type: string
                  type: array
              type: object
            version:
              description: VersionParams contains the ABCI application version.
              properties:
                app:
                  format: uint64
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: y49fwje8x3bvv
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      description: |-
        CompactBitArray is an implementation of a space efficient bit array.
        This is used to ensure that the encoded data takes up a minimal amount of
        space after proto encoding.
        This is not thread safe, and is not intended for concurrent usage.
      properties:
        elems:
          format: byte
          type: string
        extra_bits_stored:
          format: int64
          type: integer
      type: object
      x-stoplight:
        id: 43eofoxk7fsls
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      description: |-
        DelegationDelegatorReward represents the properties
        of a delegator's delegation reward.
      properties:
        reward:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        validator_address:
          type: string
      type: object
      x-stoplight:
        id: qnnp3e42m6mqm
    cosmos.distribution.v1beta1.Params:
      description: Params defines the set of params for the distribution module.
      properties:
        base_proposer_reward:
          description: |-
            Deprecated: The base_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
          type: string
        bonus_proposer_reward:
          description: |-
            Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
          type: string
        community_tax:
          type: string
        withdraw_addr_enabled:
          type: boolean
      type: object
      x-stoplight:
        id: l4jog3ckj5t8l
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      description: |-
        QueryCommunityPoolResponse is the response type for the Query/CommunityPool
        RPC method.
      properties:
        pool:
          description: pool defines community pool's coins.
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: u3bx1q38vgfmf
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      description: |-
        QueryDelegationRewardsResponse is the response type for the
        Query/DelegationRewards RPC method.
      properties:
        rewards:
          description: rewards defines the rewards accrued by a delegation.
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: d591h42vs2101
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      description: |-
        QueryDelegationTotalRewardsResponse is the response type for the
        Query/DelegationTotalRewards RPC method.
      properties:
        rewards:
          description: rewards defines all the rewards accrued by a delegator.
          items:
            description: |-
              DelegationDelegatorReward represents the properties
              of a delegator's delegation reward.
            properties:
              reward:
                items:
                  description: |-
                    DecCoin defines a token with a denomination and a decimal amount.

                    NOTE: The amount field is an Dec which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              validator_address:
                type: string
            type: object
          type: array
        total:
          description: total defines the sum of all the rewards.
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 58ay7xxwvmhr0
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      description: |-
        QueryDelegatorValidatorsResponse is the response type for the
        Query/DelegatorValidators RPC method.
      properties:
        validators:
          description: validators defines the validators a delegator is delegating for.
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: zan2w7o8onmt6
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      description: |-
        QueryDelegatorWithdrawAddressResponse is the response type for the
        Query/DelegatorWithdrawAddress RPC method.
      properties:
        withdraw_address:
          description: withdraw_address defines the delegator address to query for.
          type: string
      type: object
      x-stoplight:
        id: ulr63izqr624e
    cosmos.distribution.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            base_proposer_reward:
              description: |-
                Deprecated: The base_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
              type: string
            bonus_proposer_reward:
              description: |-
                Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
              type: string
            community_tax:
              type: string
            withdraw_addr_enabled:
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: jtcipd07iqg31
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      properties:
        commission:
          description: commission defines the commission the validator received.
          properties:
            commission:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
      title: |-
        QueryValidatorCommissionResponse is the response type for the
        Query/ValidatorCommission RPC method
      type: object
      x-stoplight:
        id: 91l8lzr00bzre
    cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
      description: QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
      properties:
        commission:
          description: commission defines the commission the validator received.
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        operator_address:
          description: operator_address defines the validator operator address.
          type: string
        self_bond_rewards:
          description: self_bond_rewards defines the self delegations rewards.
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: lu14x6kifv1rk
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      description: |-
        QueryValidatorOutstandingRewardsResponse is the response type for the
        Query/ValidatorOutstandingRewards RPC method.
      properties:
        rewards:
          description: |-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
            for a validator inexpensive to track, allows simple sanity checks.
          properties:
            rewards:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: ys2crw188uez5
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      description: |-
        QueryValidatorSlashesResponse is the response type for the
        Query/ValidatorSlashes RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        slashes:
          description: slashes defines the slashes the validator received.
          items:
            description: |-
              ValidatorSlashEvent represents a validator slash event.
              Height is implicit within the store key.
              This is needed to calculate appropriate amount of staking tokens
              for delegations which are withdrawn after a slash has occurred.
            properties:
              fraction:
                type: string
              validator_period:
                format: uint64
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: uikrv3p3w2chb
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      description: |-
        ValidatorAccumulatedCommission represents accumulated commission
        for a validator kept as a running counter, can be withdrawn at any time.
      properties:
        commission:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 6gqganhl1sn21
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      description: |-
        ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
        for a validator inexpensive to track, allows simple sanity checks.
      properties:
        rewards:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 5enm2iwlnfm42
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      description: |-
        ValidatorSlashEvent represents a validator slash event.
        Height is implicit within the store key.
        This is needed to calculate appropriate amount of staking tokens
        for delegations which are withdrawn after a slash has occurred.
      properties:
        fraction:
          type: string
        validator_period:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: o7q572f8g729d
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      description: |-
        QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
        method.
      properties:
        evidence:
          description: evidence returns all evidences.
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: u5tdyxyzgbz97
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      description: QueryEvidenceResponse is the response type for the Query/Evidence RPC method.
      properties:
        evidence:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
      type: object
      x-stoplight:
        id: dqbksswgan8y2
    cosmos.feegrant.v1beta1.Grant:
      properties:
        allowance:
          description: 'allowance can be any of basic, periodic, allowed fee allowance.'
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        grantee:
          description: grantee is the address of the user being granted an allowance of another user's funds.
          type: string
        granter:
          description: granter is the address of the user granting an allowance of their funds.
          type: string
      title: Grant is stored in the KVStore to record a grant with full context
      type: object
      x-stoplight:
        id: 73jdkzsl4lfba
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      description: QueryAllowanceResponse is the response type for the Query/Allowance RPC method.
      properties:
        allowance:
          description: allowance is a allowance granted for grantee by granter.
          properties:
            allowance:
              description: 'allowance can be any of basic, periodic, allowed fee allowance.'
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            grantee:
              description: grantee is the address of the user being granted an allowance of another user's funds.
              type: string
            granter:
              description: granter is the address of the user granting an allowance of their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
      type: object
      x-stoplight:
        id: 3ovreyzbswqy0
    cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
      description: |-
        QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

        Since: cosmos-sdk 0.46
      properties:
        allowances:
          description: allowances that have been issued by the granter.
          items:
            properties:
              allowance:
                description: 'allowance can be any of basic, periodic, allowed fee allowance.'
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              grantee:
                description: grantee is the address of the user being granted an allowance of another user's funds.
                type: string
              granter:
                description: granter is the address of the user granting an allowance of their funds.
                type: string
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: wc0n2kxxggx1o
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      description: QueryAllowancesResponse is the response type for the Query/Allowances RPC method.
      properties:
        allowances:
          description: allowances are allowance's granted for grantee by granter.
          items:
            properties:
              allowance:
                description: 'allowance can be any of basic, periodic, allowed fee allowance.'
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              grantee:
                description: grantee is the address of the user being granted an allowance of another user's funds.
                type: string
              granter:
                description: granter is the address of the user granting an allowance of their funds.
                type: string
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: w2e9tbvnhbclt
    cosmos.gov.v1.Deposit:
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
      properties:
        amount:
          description: amount to be deposited by depositor.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        depositor:
          description: depositor defines the deposit addresses from the proposals.
          type: string
        proposal_id:
          description: proposal_id defines the unique id of the proposal.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: 8tgkia8nd9vpp
    cosmos.gov.v1.DepositParams:
      description: DepositParams defines the params for deposits on governance proposals.
      properties:
        max_deposit_period:
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
          type: string
        min_deposit:
          description: Minimum deposit for a proposal to enter voting period.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: k2tfcpf75fity
    cosmos.gov.v1.Params:
      description: |-
        Params defines the parameters for the x/gov module.

        Since: cosmos-sdk 0.47
      properties:
        burn_proposal_deposit_prevote:
          title: burn deposits if the proposal does not enter voting period
          type: boolean
        burn_vote_quorum:
          title: burn deposits if a proposal does not meet quorum
          type: boolean
        burn_vote_veto:
          title: burn deposits if quorum with vote type no_veto is met
          type: boolean
        expedited_min_deposit:
          description: Minimum expedited deposit for a proposal to enter voting period.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        expedited_threshold:
          description: |-
            Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

            Since: cosmos-sdk 0.50
          type: string
        expedited_voting_period:
          description: |-
            Duration of the voting period of an expedited proposal.

            Since: cosmos-sdk 0.50
          type: string
        max_deposit_period:
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
          type: string
        min_deposit:
          description: Minimum deposit for a proposal to enter voting period.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        min_deposit_ratio:
          description: |-
            The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
            Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
            required.

            Since: cosmos-sdk 0.50
          type: string
        min_initial_deposit_ratio:
          description: The ratio representing the proportion of the deposit value that must be paid at proposal submission.
          type: string
        proposal_cancel_dest:
          description: |-
            The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
            If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

            Since: cosmos-sdk 0.50
          type: string
        proposal_cancel_ratio:
          description: |-
            The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

            Since: cosmos-sdk 0.50
          type: string
        quorum:
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
          type: string
        threshold:
          description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
          type: string
        veto_threshold:
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
          type: string
        voting_period:
          description: Duration of the voting period.
          type: string
      type: object
      x-stoplight:
        id: 5wrrqs4b3yde1
    cosmos.gov.v1.Proposal:
      description: Proposal defines the core field members of a governance proposal.
      properties:
        deposit_end_time:
          description: deposit_end_time is the end time for deposition.
          format: date-time
          type: string
        expedited:
          description: 'Since: cosmos-sdk 0.50'
          title: expedited defines if the proposal is expedited
          type: boolean
        failed_reason:
          description: 'Since: cosmos-sdk 0.50'
          title: failed_reason defines the reason why the proposal failed
          type: string
        final_tally_result:
          description: |-
            final_tally_result is the final tally result of the proposal. When
            querying a proposal via gRPC, this field is not populated until the
            proposal's voting period has ended.
          properties:
            abstain_count:
              description: abstain_count is the number of abstain votes on a proposal.
              type: string
            no_count:
              description: no_count is the number of no votes on a proposal.
              type: string
            no_with_veto_count:
              description: no_with_veto_count is the number of no with veto votes on a proposal.
              type: string
            yes_count:
              description: yes_count is the number of yes votes on a proposal.
              type: string
          type: object
        id:
          description: id defines the unique id of the proposal.
          format: uint64
          type: string
        messages:
          description: messages are the arbitrary messages to be executed if the proposal passes.
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
        metadata:
          title: |-
            metadata is any arbitrary metadata attached to the proposal.
            the recommended format of the metadata is to be found here:
            https://docs.cosmos.network/v0.47/modules/gov#proposal-3
          type: string
        proposer:
          description: 'Since: cosmos-sdk 0.47'
          title: proposer is the address of the proposal sumbitter
          type: string
        status:
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: status defines the proposal status.
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          type: string
        submit_time:
          description: submit_time is the time of proposal submission.
          format: date-time
          type: string
        summary:
          description: 'Since: cosmos-sdk 0.47'
          title: summary is a short summary of the proposal
          type: string
        title:
          description: 'Since: cosmos-sdk 0.47'
          title: title is the title of the proposal
          type: string
        total_deposit:
          description: total_deposit is the total deposit on the proposal.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        voting_end_time:
          description: voting_end_time is the end time of voting on a proposal.
          format: date-time
          type: string
        voting_start_time:
          description: voting_start_time is the starting time to vote on a proposal.
          format: date-time
          type: string
      type: object
      x-stoplight:
        id: f1bdc10esh9ba
    cosmos.gov.v1.ProposalStatus:
      default: PROPOSAL_STATUS_UNSPECIFIED
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
      type: string
      x-stoplight:
        id: 3z45ubkcear71
    cosmos.gov.v1.QueryConstitutionResponse:
      properties:
        constitution:
          type: string
      title: QueryConstitutionResponse is the response type for the Query/Constitution RPC method
      type: object
      x-stoplight:
        id: hef46z0losz2q
    cosmos.gov.v1.QueryDepositResponse:
      description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
      properties:
        deposit:
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: chw511z7ud6qb
    cosmos.gov.v1.QueryDepositsResponse:
      description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
      properties:
        deposits:
          description: deposits defines the requested deposits.
          items:
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
            properties:
              amount:
                description: amount to be deposited by depositor.
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 6i1ji35u3nx42
    cosmos.gov.v1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        deposit_params:
          description: |-
            Deprecated: Prefer to use `params` instead.
            deposit_params defines the parameters related to deposit.
          properties:
            max_deposit_period:
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
              type: string
            min_deposit:
              description: Minimum deposit for a proposal to enter voting period.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        params:
          description: |-
            params defines all the paramaters of x/gov module.

            Since: cosmos-sdk 0.47
          properties:
            burn_proposal_deposit_prevote:
              title: burn deposits if the proposal does not enter voting period
              type: boolean
            burn_vote_quorum:
              title: burn deposits if a proposal does not meet quorum
              type: boolean
            burn_vote_veto:
              title: burn deposits if quorum with vote type no_veto is met
              type: boolean
            expedited_min_deposit:
              description: Minimum expedited deposit for a proposal to enter voting period.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            expedited_threshold:
              description: |-
                Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

                Since: cosmos-sdk 0.50
              type: string
            expedited_voting_period:
              description: |-
                Duration of the voting period of an expedited proposal.

                Since: cosmos-sdk 0.50
              type: string
            max_deposit_period:
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
              type: string
            min_deposit:
              description: Minimum deposit for a proposal to enter voting period.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            min_deposit_ratio:
              description: |-
                The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
                Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
                required.

                Since: cosmos-sdk 0.50
              type: string
            min_initial_deposit_ratio:
              description: The ratio representing the proportion of the deposit value that must be paid at proposal submission.
              type: string
            proposal_cancel_dest:
              description: |-
                The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
                If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

                Since: cosmos-sdk 0.50
              type: string
            proposal_cancel_ratio:
              description: |-
                The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

                Since: cosmos-sdk 0.50
              type: string
            quorum:
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                 considered valid.
              type: string
            threshold:
              description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
              type: string
            veto_threshold:
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                 vetoed. Default value: 1/3.
              type: string
            voting_period:
              description: Duration of the voting period.
              type: string
          type: object
        tally_params:
          description: |-
            Deprecated: Prefer to use `params` instead.
            tally_params defines the parameters related to tally.
          properties:
            quorum:
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                considered valid.
              type: string
            threshold:
              description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
              type: string
            veto_threshold:
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                vetoed. Default value: 1/3.
              type: string
          type: object
        voting_params:
          description: |-
            Deprecated: Prefer to use `params` instead.
            voting_params defines the parameters related to voting.
          properties:
            voting_period:
              description: Duration of the voting period.
              type: string
          type: object
      type: object
      x-stoplight:
        id: jp5qu49oife1t
    cosmos.gov.v1.QueryProposalResponse:
      description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
      properties:
        proposal:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            expedited:
              description: 'Since: cosmos-sdk 0.50'
              title: expedited defines if the proposal is expedited
              type: boolean
            failed_reason:
              description: 'Since: cosmos-sdk 0.50'
              title: failed_reason defines the reason why the proposal failed
              type: string
            final_tally_result:
              description: |-
                final_tally_result is the final tally result of the proposal. When
                querying a proposal via gRPC, this field is not populated until the
                proposal's voting period has ended.
              properties:
                abstain_count:
                  description: abstain_count is the number of abstain votes on a proposal.
                  type: string
                no_count:
                  description: no_count is the number of no votes on a proposal.
                  type: string
                no_with_veto_count:
                  description: no_with_veto_count is the number of no with veto votes on a proposal.
                  type: string
                yes_count:
                  description: yes_count is the number of yes votes on a proposal.
                  type: string
              type: object
            id:
              description: id defines the unique id of the proposal.
              format: uint64
              type: string
            messages:
              description: messages are the arbitrary messages to be executed if the proposal passes.
              items:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            metadata:
              title: |-
                metadata is any arbitrary metadata attached to the proposal.
                the recommended format of the metadata is to be found here:
                https://docs.cosmos.network/v0.47/modules/gov#proposal-3
              type: string
            proposer:
              description: 'Since: cosmos-sdk 0.47'
              title: proposer is the address of the proposal sumbitter
              type: string
            status:
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: status defines the proposal status.
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            summary:
              description: 'Since: cosmos-sdk 0.47'
              title: summary is a short summary of the proposal
              type: string
            title:
              description: 'Since: cosmos-sdk 0.47'
              title: title is the title of the proposal
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
      type: object
      x-stoplight:
        id: 5729kvav7bcb5
    cosmos.gov.v1.QueryProposalsResponse:
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        proposals:
          description: proposals defines all the requested governance proposals.
          items:
            description: Proposal defines the core field members of a governance proposal.
            properties:
              deposit_end_time:
                description: deposit_end_time is the end time for deposition.
                format: date-time
                type: string
              expedited:
                description: 'Since: cosmos-sdk 0.50'
                title: expedited defines if the proposal is expedited
                type: boolean
              failed_reason:
                description: 'Since: cosmos-sdk 0.50'
                title: failed_reason defines the reason why the proposal failed
                type: string
              final_tally_result:
                description: |-
                  final_tally_result is the final tally result of the proposal. When
                  querying a proposal via gRPC, this field is not populated until the
                  proposal's voting period has ended.
                properties:
                  abstain_count:
                    description: abstain_count is the number of abstain votes on a proposal.
                    type: string
                  no_count:
                    description: no_count is the number of no votes on a proposal.
                    type: string
                  no_with_veto_count:
                    description: no_with_veto_count is the number of no with veto votes on a proposal.
                    type: string
                  yes_count:
                    description: yes_count is the number of yes votes on a proposal.
                    type: string
                type: object
              id:
                description: id defines the unique id of the proposal.
                format: uint64
                type: string
              messages:
                description: messages are the arbitrary messages to be executed if the proposal passes.
                items:
                  description: |-
                    `Any` contains an arbitrary serialized protocol buffer message along with a
                    URL that describes the type of the serialized message.

                    Protobuf library provides support to pack/unpack Any values in the form
                    of utility functions or additional generated methods of the Any type.

                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by default use
                    'type.googleapis.com/full.type.name' as the type URL and the unpack
                    methods only use the fully qualified type name after the last '/'
                    in the type URL, for example "foo.bar.com/x/y.z" will yield type
                    name "y.z".

                    JSON

                    The JSON representation of an `Any` value uses the regular
                    representation of the deserialized, embedded message, with an
                    additional field `@type` which contains the type URL. Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom JSON
                    representation, that representation will be embedded adding a field
                    `value` which holds the custom JSON in addition to the `@type`
                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                  properties:
                    type_url:
                      description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              metadata:
                title: |-
                  metadata is any arbitrary metadata attached to the proposal.
                  the recommended format of the metadata is to be found here:
                  https://docs.cosmos.network/v0.47/modules/gov#proposal-3
                type: string
              proposer:
                description: 'Since: cosmos-sdk 0.47'
                title: proposer is the address of the proposal sumbitter
                type: string
              status:
                default: PROPOSAL_STATUS_UNSPECIFIED
                description: status defines the proposal status.
                enum:
                  - PROPOSAL_STATUS_UNSPECIFIED
                  - PROPOSAL_STATUS_DEPOSIT_PERIOD
                  - PROPOSAL_STATUS_VOTING_PERIOD
                  - PROPOSAL_STATUS_PASSED
                  - PROPOSAL_STATUS_REJECTED
                  - PROPOSAL_STATUS_FAILED
                type: string
              submit_time:
                description: submit_time is the time of proposal submission.
                format: date-time
                type: string
              summary:
                description: 'Since: cosmos-sdk 0.47'
                title: summary is a short summary of the proposal
                type: string
              title:
                description: 'Since: cosmos-sdk 0.47'
                title: title is the title of the proposal
                type: string
              total_deposit:
                description: total_deposit is the total deposit on the proposal.
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              voting_end_time:
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
                type: string
              voting_start_time:
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: nelvsyo8645zb
    cosmos.gov.v1.QueryTallyResultResponse:
      description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
      properties:
        tally:
          description: tally defines the requested tally.
          properties:
            abstain_count:
              description: abstain_count is the number of abstain votes on a proposal.
              type: string
            no_count:
              description: no_count is the number of no votes on a proposal.
              type: string
            no_with_veto_count:
              description: no_with_veto_count is the number of no with veto votes on a proposal.
              type: string
            yes_count:
              description: yes_count is the number of yes votes on a proposal.
              type: string
          type: object
      type: object
      x-stoplight:
        id: 4zrl56tbo4a4e
    cosmos.gov.v1.QueryVoteResponse:
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
      properties:
        vote:
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
          properties:
            metadata:
              title: |-
                metadata is any arbitrary metadata attached to the vote.
                the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
              type: string
            options:
              description: options is the weighted vote options.
              items:
                description: WeightedVoteOption defines a unit of vote for vote split.
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                    enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address of the proposal.
              type: string
          type: object
      type: object
      x-stoplight:
        id: uy4j0gvjhiezy
    cosmos.gov.v1.QueryVotesResponse:
      description: QueryVotesResponse is the response type for the Query/Votes RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        votes:
          description: votes defines the queried votes.
          items:
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
            properties:
              metadata:
                title: |-
                  metadata is any arbitrary metadata attached to the vote.
                  the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
                type: string
              options:
                description: options is the weighted vote options.
                items:
                  description: WeightedVoteOption defines a unit of vote for vote split.
                  properties:
                    option:
                      default: VOTE_OPTION_UNSPECIFIED
                      description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                      enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      type: string
                    weight:
                      description: weight is the vote weight associated with the vote option.
                      type: string
                  type: object
                type: array
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
              voter:
                description: voter is the voter address of the proposal.
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 5e7ahvi64x5tv
    cosmos.gov.v1.TallyParams:
      description: TallyParams defines the params for tallying votes on governance proposals.
      properties:
        quorum:
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
            considered valid.
          type: string
        threshold:
          description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
          type: string
        veto_threshold:
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
            vetoed. Default value: 1/3.
          type: string
      type: object
      x-stoplight:
        id: qv3kk81wdm6e2
    cosmos.gov.v1.TallyResult:
      description: TallyResult defines a standard tally for a governance proposal.
      properties:
        abstain_count:
          description: abstain_count is the number of abstain votes on a proposal.
          type: string
        no_count:
          description: no_count is the number of no votes on a proposal.
          type: string
        no_with_veto_count:
          description: no_with_veto_count is the number of no with veto votes on a proposal.
          type: string
        yes_count:
          description: yes_count is the number of yes votes on a proposal.
          type: string
      type: object
      x-stoplight:
        id: 5pgijv7uz82aj
    cosmos.gov.v1.Vote:
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
      properties:
        metadata:
          title: |-
            metadata is any arbitrary metadata attached to the vote.
            the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
          type: string
        options:
          description: options is the weighted vote options.
          items:
            description: WeightedVoteOption defines a unit of vote for vote split.
            properties:
              option:
                default: VOTE_OPTION_UNSPECIFIED
                description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                type: string
              weight:
                description: weight is the vote weight associated with the vote option.
                type: string
            type: object
          type: array
        proposal_id:
          description: proposal_id defines the unique id of the proposal.
          format: uint64
          type: string
        voter:
          description: voter is the voter address of the proposal.
          type: string
      type: object
      x-stoplight:
        id: hgui939bnkv25
    cosmos.gov.v1.VoteOption:
      default: VOTE_OPTION_UNSPECIFIED
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
      type: string
      x-stoplight:
        id: ykx903zzldbi9
    cosmos.gov.v1.VotingParams:
      description: VotingParams defines the params for voting on governance proposals.
      properties:
        voting_period:
          description: Duration of the voting period.
          type: string
      type: object
      x-stoplight:
        id: guikntzx080kd
    cosmos.gov.v1.WeightedVoteOption:
      description: WeightedVoteOption defines a unit of vote for vote split.
      properties:
        option:
          default: VOTE_OPTION_UNSPECIFIED
          description: 'option defines the valid vote options, it must not contain duplicate vote options.'
          enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
          type: string
        weight:
          description: weight is the vote weight associated with the vote option.
          type: string
      type: object
      x-stoplight:
        id: if4o5k4joc513
    cosmos.gov.v1beta1.Deposit:
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
      properties:
        amount:
          description: amount to be deposited by depositor.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        depositor:
          description: depositor defines the deposit addresses from the proposals.
          type: string
        proposal_id:
          description: proposal_id defines the unique id of the proposal.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: vqpx04kre4wod
    cosmos.gov.v1beta1.DepositParams:
      description: DepositParams defines the params for deposits on governance proposals.
      properties:
        max_deposit_period:
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
          type: string
        min_deposit:
          description: Minimum deposit for a proposal to enter voting period.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 5pdceuaa2908e
    cosmos.gov.v1beta1.Proposal:
      description: Proposal defines the core field members of a governance proposal.
      properties:
        content:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        deposit_end_time:
          description: deposit_end_time is the end time for deposition.
          format: date-time
          type: string
        final_tally_result:
          description: |-
            final_tally_result is the final tally result of the proposal. When
            querying a proposal via gRPC, this field is not populated until the
            proposal's voting period has ended.
          properties:
            abstain:
              description: abstain is the number of abstain votes on a proposal.
              type: string
            'no':
              description: no is the number of no votes on a proposal.
              type: string
            no_with_veto:
              description: no_with_veto is the number of no with veto votes on a proposal.
              type: string
            'yes':
              description: yes is the number of yes votes on a proposal.
              type: string
          type: object
        proposal_id:
          description: proposal_id defines the unique id of the proposal.
          format: uint64
          type: string
        status:
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: status defines the proposal status.
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          type: string
        submit_time:
          description: submit_time is the time of proposal submission.
          format: date-time
          type: string
        total_deposit:
          description: total_deposit is the total deposit on the proposal.
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        voting_end_time:
          description: voting_end_time is the end time of voting on a proposal.
          format: date-time
          type: string
        voting_start_time:
          description: voting_start_time is the starting time to vote on a proposal.
          format: date-time
          type: string
      type: object
      x-stoplight:
        id: ln4cgf1v8mk30
    cosmos.gov.v1beta1.ProposalStatus:
      default: PROPOSAL_STATUS_UNSPECIFIED
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
      type: string
      x-stoplight:
        id: 8k6ud7no6i0jq
    cosmos.gov.v1beta1.QueryDepositResponse:
      description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
      properties:
        deposit:
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: d80i8kivv90w0
    cosmos.gov.v1beta1.QueryDepositsResponse:
      description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
      properties:
        deposits:
          description: deposits defines the requested deposits.
          items:
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
            properties:
              amount:
                description: amount to be deposited by depositor.
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              depositor:
                description: depositor defines the deposit addresses from the proposals.
                type: string
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 5lt0be49dbyou
    cosmos.gov.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        deposit_params:
          description: deposit_params defines the parameters related to deposit.
          properties:
            max_deposit_period:
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
              type: string
            min_deposit:
              description: Minimum deposit for a proposal to enter voting period.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        tally_params:
          description: tally_params defines the parameters related to tally.
          properties:
            quorum:
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                considered valid.
              format: byte
              type: string
            threshold:
              description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
              format: byte
              type: string
            veto_threshold:
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                vetoed. Default value: 1/3.
              format: byte
              type: string
          type: object
        voting_params:
          description: voting_params defines the parameters related to voting.
          properties:
            voting_period:
              description: Duration of the voting period.
              type: string
          type: object
      type: object
      x-stoplight:
        id: 71o0j6xtn8i5p
    cosmos.gov.v1beta1.QueryProposalResponse:
      description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
      properties:
        proposal:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            content:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            final_tally_result:
              description: |-
                final_tally_result is the final tally result of the proposal. When
                querying a proposal via gRPC, this field is not populated until the
                proposal's voting period has ended.
              properties:
                abstain:
                  description: abstain is the number of abstain votes on a proposal.
                  type: string
                'no':
                  description: no is the number of no votes on a proposal.
                  type: string
                no_with_veto:
                  description: no_with_veto is the number of no with veto votes on a proposal.
                  type: string
                'yes':
                  description: yes is the number of yes votes on a proposal.
                  type: string
              type: object
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            status:
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: status defines the proposal status.
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
      type: object
      x-stoplight:
        id: tsqv0kgv6jnqz
    cosmos.gov.v1beta1.QueryProposalsResponse:
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        proposals:
          description: proposals defines all the requested governance proposals.
          items:
            description: Proposal defines the core field members of a governance proposal.
            properties:
              content:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              deposit_end_time:
                description: deposit_end_time is the end time for deposition.
                format: date-time
                type: string
              final_tally_result:
                description: |-
                  final_tally_result is the final tally result of the proposal. When
                  querying a proposal via gRPC, this field is not populated until the
                  proposal's voting period has ended.
                properties:
                  abstain:
                    description: abstain is the number of abstain votes on a proposal.
                    type: string
                  'no':
                    description: no is the number of no votes on a proposal.
                    type: string
                  no_with_veto:
                    description: no_with_veto is the number of no with veto votes on a proposal.
                    type: string
                  'yes':
                    description: yes is the number of yes votes on a proposal.
                    type: string
                type: object
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
              status:
                default: PROPOSAL_STATUS_UNSPECIFIED
                description: status defines the proposal status.
                enum:
                  - PROPOSAL_STATUS_UNSPECIFIED
                  - PROPOSAL_STATUS_DEPOSIT_PERIOD
                  - PROPOSAL_STATUS_VOTING_PERIOD
                  - PROPOSAL_STATUS_PASSED
                  - PROPOSAL_STATUS_REJECTED
                  - PROPOSAL_STATUS_FAILED
                type: string
              submit_time:
                description: submit_time is the time of proposal submission.
                format: date-time
                type: string
              total_deposit:
                description: total_deposit is the total deposit on the proposal.
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              voting_end_time:
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
                type: string
              voting_start_time:
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: eg0lroutirvif
    cosmos.gov.v1beta1.QueryTallyResultResponse:
      description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
      properties:
        tally:
          description: tally defines the requested tally.
          properties:
            abstain:
              description: abstain is the number of abstain votes on a proposal.
              type: string
            'no':
              description: no is the number of no votes on a proposal.
              type: string
            no_with_veto:
              description: no_with_veto is the number of no with veto votes on a proposal.
              type: string
            'yes':
              description: yes is the number of yes votes on a proposal.
              type: string
          type: object
      type: object
      x-stoplight:
        id: p7iyf3ksi7os3
    cosmos.gov.v1beta1.QueryVoteResponse:
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
      properties:
        vote:
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: |-
                Deprecated: Prefer to use `options` instead. This field is set in queries
                if and only if `len(options) == 1` and that option has weight 1. In all
                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
              enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              type: string
            options:
              description: |-
                options is the weighted vote options.

                Since: cosmos-sdk 0.43
              items:
                description: |-
                  WeightedVoteOption defines a unit of vote for vote split.

                  Since: cosmos-sdk 0.43
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                    enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address of the proposal.
              type: string
          type: object
      type: object
      x-stoplight:
        id: dztlrav6ntbdk
    cosmos.gov.v1beta1.QueryVotesResponse:
      description: QueryVotesResponse is the response type for the Query/Votes RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        votes:
          description: votes defines the queried votes.
          items:
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
            properties:
              option:
                default: VOTE_OPTION_UNSPECIFIED
                description: |-
                  Deprecated: Prefer to use `options` instead. This field is set in queries
                  if and only if `len(options) == 1` and that option has weight 1. In all
                  other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                type: string
              options:
                description: |-
                  options is the weighted vote options.

                  Since: cosmos-sdk 0.43
                items:
                  description: |-
                    WeightedVoteOption defines a unit of vote for vote split.

                    Since: cosmos-sdk 0.43
                  properties:
                    option:
                      default: VOTE_OPTION_UNSPECIFIED
                      description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                      enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      type: string
                    weight:
                      description: weight is the vote weight associated with the vote option.
                      type: string
                  type: object
                type: array
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
              voter:
                description: voter is the voter address of the proposal.
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: d1l0imsvr72qc
    cosmos.gov.v1beta1.TallyParams:
      description: TallyParams defines the params for tallying votes on governance proposals.
      properties:
        quorum:
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
            considered valid.
          format: byte
          type: string
        threshold:
          description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
          format: byte
          type: string
        veto_threshold:
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
            vetoed. Default value: 1/3.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: gll0v6ze0hi32
    cosmos.gov.v1beta1.TallyResult:
      description: TallyResult defines a standard tally for a governance proposal.
      properties:
        abstain:
          description: abstain is the number of abstain votes on a proposal.
          type: string
        'no':
          description: no is the number of no votes on a proposal.
          type: string
        no_with_veto:
          description: no_with_veto is the number of no with veto votes on a proposal.
          type: string
        'yes':
          description: yes is the number of yes votes on a proposal.
          type: string
      type: object
      x-stoplight:
        id: b7eq6ery5t537
    cosmos.gov.v1beta1.Vote:
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
      properties:
        option:
          default: VOTE_OPTION_UNSPECIFIED
          description: |-
            Deprecated: Prefer to use `options` instead. This field is set in queries
            if and only if `len(options) == 1` and that option has weight 1. In all
            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
          enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
          type: string
        options:
          description: |-
            options is the weighted vote options.

            Since: cosmos-sdk 0.43
          items:
            description: |-
              WeightedVoteOption defines a unit of vote for vote split.

              Since: cosmos-sdk 0.43
            properties:
              option:
                default: VOTE_OPTION_UNSPECIFIED
                description: 'option defines the valid vote options, it must not contain duplicate vote options.'
                enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                type: string
              weight:
                description: weight is the vote weight associated with the vote option.
                type: string
            type: object
          type: array
        proposal_id:
          description: proposal_id defines the unique id of the proposal.
          format: uint64
          type: string
        voter:
          description: voter is the voter address of the proposal.
          type: string
      type: object
      x-stoplight:
        id: rfi04x4iyjkpu
    cosmos.gov.v1beta1.VoteOption:
      default: VOTE_OPTION_UNSPECIFIED
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
      type: string
      x-stoplight:
        id: 4zmy0hz15ec3j
    cosmos.gov.v1beta1.VotingParams:
      description: VotingParams defines the params for voting on governance proposals.
      properties:
        voting_period:
          description: Duration of the voting period.
          type: string
      type: object
      x-stoplight:
        id: dxip1ajp5t5ht
    cosmos.gov.v1beta1.WeightedVoteOption:
      description: |-
        WeightedVoteOption defines a unit of vote for vote split.

        Since: cosmos-sdk 0.43
      properties:
        option:
          default: VOTE_OPTION_UNSPECIFIED
          description: 'option defines the valid vote options, it must not contain duplicate vote options.'
          enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
          type: string
        weight:
          description: weight is the vote weight associated with the vote option.
          type: string
      type: object
      x-stoplight:
        id: bwgoc35zj25s5
    cosmos.mint.v1beta1.Params:
      description: Params defines the parameters for the x/mint module.
      properties:
        blocks_per_year:
          format: uint64
          title: expected blocks per year
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        mint_denom:
          title: type of coin to mint
          type: string
      type: object
      x-stoplight:
        id: w0826et83m2ho
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      description: |-
        QueryAnnualProvisionsResponse is the response type for the
        Query/AnnualProvisions RPC method.
      properties:
        annual_provisions:
          description: annual_provisions is the current minting annual provisions value.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: bozvgmiwjyghp
    cosmos.mint.v1beta1.QueryInflationResponse:
      description: |-
        QueryInflationResponse is the response type for the Query/Inflation RPC
        method.
      properties:
        inflation:
          description: inflation is the current minting inflation value.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: m5bu11st01rka
    cosmos.mint.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            blocks_per_year:
              format: uint64
              title: expected blocks per year
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            mint_denom:
              title: type of coin to mint
              type: string
          type: object
      type: object
      x-stoplight:
        id: lzioqlsulxd49
    cosmos.params.v1beta1.ParamChange:
      description: |-
        ParamChange defines an individual parameter change, for use in
        ParameterChangeProposal.
      properties:
        key:
          type: string
        subspace:
          type: string
        value:
          type: string
      type: object
      x-stoplight:
        id: o05kcer6rgb0a
    cosmos.params.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is response type for the Query/Params RPC method.
      properties:
        param:
          description: param defines the queried parameter.
          properties:
            key:
              type: string
            subspace:
              type: string
            value:
              type: string
          type: object
      type: object
      x-stoplight:
        id: xhnzyf1pn4qnx
    cosmos.params.v1beta1.QuerySubspacesResponse:
      description: |-
        QuerySubspacesResponse defines the response types for querying for all
        registered subspaces and all keys for a subspace.

        Since: cosmos-sdk 0.46
      properties:
        subspaces:
          items:
            description: |-
              Subspace defines a parameter subspace name and all the keys that exist for
              the subspace.

              Since: cosmos-sdk 0.46
            properties:
              keys:
                items:
                  type: string
                type: array
              subspace:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 6bily690zyn1b
    cosmos.params.v1beta1.Subspace:
      description: |-
        Subspace defines a parameter subspace name and all the keys that exist for
        the subspace.

        Since: cosmos-sdk 0.46
      properties:
        keys:
          items:
            type: string
          type: array
        subspace:
          type: string
      type: object
      x-stoplight:
        id: z8xn4sbqdyhgp
    cosmos.slashing.v1beta1.Params:
      description: Params represents the parameters used for by the slashing module.
      properties:
        downtime_jail_duration:
          type: string
        min_signed_per_window:
          format: byte
          type: string
        signed_blocks_window:
          format: int64
          type: string
        slash_fraction_double_sign:
          format: byte
          type: string
        slash_fraction_downtime:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: p7ptoqidibhw4
    cosmos.slashing.v1beta1.QueryParamsResponse:
      properties:
        params:
          description: Params represents the parameters used for by the slashing module.
          properties:
            downtime_jail_duration:
              type: string
            min_signed_per_window:
              format: byte
              type: string
            signed_blocks_window:
              format: int64
              type: string
            slash_fraction_double_sign:
              format: byte
              type: string
            slash_fraction_downtime:
              format: byte
              type: string
          type: object
      title: QueryParamsResponse is the response type for the Query/Params RPC method
      type: object
      x-stoplight:
        id: 3uh1yocktxmpj
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      properties:
        val_signing_info:
          description: |-
            ValidatorSigningInfo defines a validator's signing info for monitoring their
            liveness activity.
          properties:
            address:
              type: string
            index_offset:
              description: |-
                Index which is incremented every time a validator is bonded in a block and
                _may_ have signed a pre-commit or not. This in conjunction with the
                signed_blocks_window param determines the index in the missed block bitmap.
              format: int64
              type: string
            jailed_until:
              description: Timestamp until which the validator is jailed due to liveness downtime.
              format: date-time
              type: string
            missed_blocks_counter:
              description: |-
                A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                reads in the missed block bitmap.
              format: int64
              type: string
            start_height:
              format: int64
              title: Height at which validator was first a candidate OR was un-jailed
              type: string
            tombstoned:
              description: |-
                Whether or not a validator has been tombstoned (killed out of validator
                set). It is set once the validator commits an equivocation or for any other
                configured misbehavior.
              type: boolean
          title: val_signing_info is the signing info of requested val cons address
          type: object
      title: |-
        QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
        method
      type: object
      x-stoplight:
        id: y0hhyhdzl120u
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      properties:
        info:
          items:
            description: |-
              ValidatorSigningInfo defines a validator's signing info for monitoring their
              liveness activity.
            properties:
              address:
                type: string
              index_offset:
                description: |-
                  Index which is incremented every time a validator is bonded in a block and
                  _may_ have signed a pre-commit or not. This in conjunction with the
                  signed_blocks_window param determines the index in the missed block bitmap.
                format: int64
                type: string
              jailed_until:
                description: Timestamp until which the validator is jailed due to liveness downtime.
                format: date-time
                type: string
              missed_blocks_counter:
                description: |-
                  A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                  reads in the missed block bitmap.
                format: int64
                type: string
              start_height:
                format: int64
                title: Height at which validator was first a candidate OR was un-jailed
                type: string
              tombstoned:
                description: |-
                  Whether or not a validator has been tombstoned (killed out of validator
                  set). It is set once the validator commits an equivocation or for any other
                  configured misbehavior.
                type: boolean
            type: object
          title: info is the signing info of all validators
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
        method
      type: object
      x-stoplight:
        id: 67nudtmmgf4zo
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      description: |-
        ValidatorSigningInfo defines a validator's signing info for monitoring their
        liveness activity.
      properties:
        address:
          type: string
        index_offset:
          description: |-
            Index which is incremented every time a validator is bonded in a block and
            _may_ have signed a pre-commit or not. This in conjunction with the
            signed_blocks_window param determines the index in the missed block bitmap.
          format: int64
          type: string
        jailed_until:
          description: Timestamp until which the validator is jailed due to liveness downtime.
          format: date-time
          type: string
        missed_blocks_counter:
          description: |-
            A counter of missed (unsigned) blocks. It is used to avoid unnecessary
            reads in the missed block bitmap.
          format: int64
          type: string
        start_height:
          format: int64
          title: Height at which validator was first a candidate OR was un-jailed
          type: string
        tombstoned:
          description: |-
            Whether or not a validator has been tombstoned (killed out of validator
            set). It is set once the validator commits an equivocation or for any other
            configured misbehavior.
          type: boolean
      type: object
      x-stoplight:
        id: f8j3p7onlbxqf
    cosmos.staking.v1beta1.BondStatus:
      default: BOND_STATUS_UNSPECIFIED
      description: |-
        BondStatus is the status of a validator.

         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
      enum:
        - BOND_STATUS_UNSPECIFIED
        - BOND_STATUS_UNBONDED
        - BOND_STATUS_UNBONDING
        - BOND_STATUS_BONDED
      type: string
      x-stoplight:
        id: wepmsrti3tjjs
    cosmos.staking.v1beta1.Commission:
      description: Commission defines commission parameters for a given validator.
      properties:
        commission_rates:
          description: commission_rates defines the initial commission rates to be used for creating a validator.
          properties:
            max_change_rate:
              description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
              type: string
            max_rate:
              description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
              type: string
            rate:
              description: 'rate is the commission rate charged to delegators, as a fraction.'
              type: string
          type: object
        update_time:
          description: update_time is the last time the commission rate was changed.
          format: date-time
          type: string
      type: object
      x-stoplight:
        id: nupgt8suojywq
    cosmos.staking.v1beta1.CommissionRates:
      description: |-
        CommissionRates defines the initial commission rates to be used for creating
        a validator.
      properties:
        max_change_rate:
          description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
          type: string
        max_rate:
          description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
          type: string
        rate:
          description: 'rate is the commission rate charged to delegators, as a fraction.'
          type: string
      type: object
      x-stoplight:
        id: srhbq9llkztm9
    cosmos.staking.v1beta1.Delegation:
      description: |-
        Delegation represents the bond with tokens held by an account. It is
        owned by one delegator, and is associated with the voting power of one
        validator.
      properties:
        delegator_address:
          description: delegator_address is the encoded address of the delegator.
          type: string
        shares:
          description: shares define the delegation shares received.
          type: string
        validator_address:
          description: validator_address is the encoded address of the validator.
          type: string
      type: object
      x-stoplight:
        id: 8lbxuu5ktwhqn
    cosmos.staking.v1beta1.DelegationResponse:
      description: |-
        DelegationResponse is equivalent to Delegation except that it contains a
        balance in addition to shares which is more suitable for client responses.
      properties:
        balance:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        delegation:
          description: |-
            Delegation represents the bond with tokens held by an account. It is
            owned by one delegator, and is associated with the voting power of one
            validator.
          properties:
            delegator_address:
              description: delegator_address is the encoded address of the delegator.
              type: string
            shares:
              description: shares define the delegation shares received.
              type: string
            validator_address:
              description: validator_address is the encoded address of the validator.
              type: string
          type: object
      type: object
      x-stoplight:
        id: f4h76ncyp3fqc
    cosmos.staking.v1beta1.Description:
      description: Description defines a validator description.
      properties:
        details:
          description: details define other optional details.
          type: string
        identity:
          description: identity defines an optional identity signature (ex. UPort or Keybase).
          type: string
        moniker:
          description: moniker defines a human-readable name for the validator.
          type: string
        security_contact:
          description: security_contact defines an optional email for security contact.
          type: string
        website:
          description: website defines an optional website link.
          type: string
      type: object
      x-stoplight:
        id: w30uh3nr75rqn
    cosmos.staking.v1beta1.HistoricalInfo:
      description: |-
        HistoricalInfo contains header and validator information for a given block.
        It is stored as part of staking module's state, which persists the `n` most
        recent HistoricalInfo
        (`n` is set by the staking module's `historical_entries` parameter).
      properties:
        header:
          description: Header defines the structure of a block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: prev block info
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
        valset:
          items:
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                        type: string
                      max_rate:
                        description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                        type: string
                      rate:
                        description: 'rate is the commission rate charged to delegators, as a fraction.'
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex. UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed from bonded status or not.
                type: boolean
              min_self_delegation:
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
                type: string
              operator_address:
                description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                format: int64
                type: string
              unbonding_ids:
                items:
                  format: uint64
                  type: string
                title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                type: array
              unbonding_on_hold_ref_count:
                format: int64
                title: strictly positive if this validator's unbonding has been stopped by external modules
                type: string
              unbonding_time:
                description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                format: date-time
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 8egbw3m2tgwnh
    cosmos.staking.v1beta1.Params:
      description: Params defines the parameters for the x/staking module.
      properties:
        bond_denom:
          description: bond_denom defines the bondable coin denomination.
          type: string
        historical_entries:
          description: historical_entries is the number of historical entries to persist.
          format: int64
          type: integer
        max_entries:
          description: max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
          format: int64
          type: integer
        max_validators:
          description: max_validators is the maximum number of validators.
          format: int64
          type: integer
        min_commission_rate:
          title: min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
          type: string
        unbonding_time:
          description: unbonding_time is the time duration of unbonding.
          type: string
      type: object
      x-stoplight:
        id: huase7pm0izlv
    cosmos.staking.v1beta1.Pool:
      description: |-
        Pool is used for tracking bonded and not-bonded token supply of the bond
        denomination.
      properties:
        bonded_tokens:
          type: string
        not_bonded_tokens:
          type: string
      type: object
      x-stoplight:
        id: gxfd89pq2tzbk
    cosmos.staking.v1beta1.QueryDelegationResponse:
      description: QueryDelegationResponse is response type for the Query/Delegation RPC method.
      properties:
        delegation_response:
          description: |-
            DelegationResponse is equivalent to Delegation except that it contains a
            balance in addition to shares which is more suitable for client responses.
          properties:
            balance:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegation:
              description: |-
                Delegation represents the bond with tokens held by an account. It is
                owned by one delegator, and is associated with the voting power of one
                validator.
              properties:
                delegator_address:
                  description: delegator_address is the encoded address of the delegator.
                  type: string
                shares:
                  description: shares define the delegation shares received.
                  type: string
                validator_address:
                  description: validator_address is the encoded address of the validator.
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: 6im2t08715dj5
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      description: |-
        QueryDelegatorDelegationsResponse is response type for the
        Query/DelegatorDelegations RPC method.
      properties:
        delegation_responses:
          description: delegation_responses defines all the delegations' info of a delegator.
          items:
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
            properties:
              balance:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegation:
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
                properties:
                  delegator_address:
                    description: delegator_address is the encoded address of the delegator.
                    type: string
                  shares:
                    description: shares define the delegation shares received.
                    type: string
                  validator_address:
                    description: validator_address is the encoded address of the validator.
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: b3bxr2zqm8whd
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      description: |-
        QueryUnbondingDelegatorDelegationsResponse is response type for the
        Query/UnbondingDelegatorDelegations RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        unbonding_responses:
          items:
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
            properties:
              delegator_address:
                description: delegator_address is the encoded address of the delegator.
                type: string
              entries:
                description: entries are the unbonding delegation entries.
                items:
                  description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                  properties:
                    balance:
                      description: balance defines the tokens to receive at completion.
                      type: string
                    completion_time:
                      description: completion_time is the unix time for unbonding completion.
                      format: date-time
                      type: string
                    creation_height:
                      description: creation_height is the height which the unbonding took place.
                      format: int64
                      type: string
                    initial_balance:
                      description: initial_balance defines the tokens initially scheduled to receive at completion.
                      type: string
                    unbonding_id:
                      format: uint64
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                    unbonding_on_hold_ref_count:
                      format: int64
                      title: Strictly positive if this entry's unbonding has been stopped by external modules
                      type: string
                  type: object
                type: array
              validator_address:
                description: validator_address is the encoded address of the validator.
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: q4kg5xedffkf4
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      description: |-
        QueryDelegatorValidatorResponse response type for the
        Query/DelegatorValidator RPC method.
      properties:
        validator:
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates to be used for creating a validator.
                  properties:
                    max_change_rate:
                      description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                      type: string
                    max_rate:
                      description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                      type: string
                    rate:
                      description: 'rate is the commission rate charged to delegators, as a fraction.'
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex. UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: jailed defined whether the validator has been jailed from bonded status or not.
              type: boolean
            min_self_delegation:
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
              type: string
            operator_address:
              description: operator_address defines the address of the validator's operator; bech encoded in JSON.
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: strictly positive if this validator's unbonding has been stopped by external modules
              type: string
            unbonding_time:
              description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
              format: date-time
              type: string
          type: object
      type: object
      x-stoplight:
        id: edob2dbhjzynj
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      description: |-
        QueryDelegatorValidatorsResponse is response type for the
        Query/DelegatorValidators RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        validators:
          description: validators defines the validators' info of a delegator.
          items:
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                        type: string
                      max_rate:
                        description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                        type: string
                      rate:
                        description: 'rate is the commission rate charged to delegators, as a fraction.'
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex. UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed from bonded status or not.
                type: boolean
              min_self_delegation:
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
                type: string
              operator_address:
                description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                format: int64
                type: string
              unbonding_ids:
                items:
                  format: uint64
                  type: string
                title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                type: array
              unbonding_on_hold_ref_count:
                format: int64
                title: strictly positive if this validator's unbonding has been stopped by external modules
                type: string
              unbonding_time:
                description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                format: date-time
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: glg4rl3btktmu
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      description: |-
        QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
        method.
      properties:
        hist:
          description: hist defines the historical info at the given height.
          properties:
            header:
              description: Header defines the structure of a block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: prev block info
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            valset:
              items:
                description: |-
                  Validator defines a validator, together with the total amount of the
                  Validator's bond shares and their exchange rate to coins. Slashing results in
                  a decrease in the exchange rate, allowing correct calculation of future
                  undelegations without iterating over delegators. When coins are delegated to
                  this validator, the validator is credited with a delegation whose number of
                  bond shares is based on the amount of coins delegated divided by the current
                  exchange rate. Voting power can be calculated as total bonded shares
                  multiplied by exchange rate.
                properties:
                  commission:
                    description: commission defines the commission parameters.
                    properties:
                      commission_rates:
                        description: commission_rates defines the initial commission rates to be used for creating a validator.
                        properties:
                          max_change_rate:
                            description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                            type: string
                          max_rate:
                            description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                            type: string
                          rate:
                            description: 'rate is the commission rate charged to delegators, as a fraction.'
                            type: string
                        type: object
                      update_time:
                        description: update_time is the last time the commission rate was changed.
                        format: date-time
                        type: string
                    type: object
                  consensus_pubkey:
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }
                          // or ...
                          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                            foo = any.unpack(Foo.getDefaultInstance());
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".

                      JSON

                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    properties:
                      type_url:
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of the above specified type.
                        format: byte
                        type: string
                    type: object
                  delegator_shares:
                    description: delegator_shares defines total shares issued to a validator's delegators.
                    type: string
                  description:
                    description: description defines the description terms for the validator.
                    properties:
                      details:
                        description: details define other optional details.
                        type: string
                      identity:
                        description: identity defines an optional identity signature (ex. UPort or Keybase).
                        type: string
                      moniker:
                        description: moniker defines a human-readable name for the validator.
                        type: string
                      security_contact:
                        description: security_contact defines an optional email for security contact.
                        type: string
                      website:
                        description: website defines an optional website link.
                        type: string
                    type: object
                  jailed:
                    description: jailed defined whether the validator has been jailed from bonded status or not.
                    type: boolean
                  min_self_delegation:
                    description: |-
                      min_self_delegation is the validator's self declared minimum self delegation.

                      Since: cosmos-sdk 0.46
                    type: string
                  operator_address:
                    description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                    type: string
                  status:
                    default: BOND_STATUS_UNSPECIFIED
                    description: status is the validator status (bonded/unbonding/unbonded).
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    type: string
                  tokens:
                    description: tokens define the delegated tokens (incl. self-delegation).
                    type: string
                  unbonding_height:
                    description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                    format: int64
                    type: string
                  unbonding_ids:
                    items:
                      format: uint64
                      type: string
                    title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                    type: array
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: strictly positive if this validator's unbonding has been stopped by external modules
                    type: string
                  unbonding_time:
                    description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                    format: date-time
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: gfeu3qf9uhwf7
    cosmos.staking.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is response type for the Query/Params RPC method.
      properties:
        params:
          description: params holds all the parameters of this module.
          properties:
            bond_denom:
              description: bond_denom defines the bondable coin denomination.
              type: string
            historical_entries:
              description: historical_entries is the number of historical entries to persist.
              format: int64
              type: integer
            max_entries:
              description: max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
              format: int64
              type: integer
            max_validators:
              description: max_validators is the maximum number of validators.
              format: int64
              type: integer
            min_commission_rate:
              title: min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
              type: string
            unbonding_time:
              description: unbonding_time is the time duration of unbonding.
              type: string
          type: object
      type: object
      x-stoplight:
        id: g4dyb1xbj2j7v
    cosmos.staking.v1beta1.QueryPoolResponse:
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
      properties:
        pool:
          description: pool defines the pool info.
          properties:
            bonded_tokens:
              type: string
            not_bonded_tokens:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 7mvhgfqngog7v
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      description: |-
        QueryRedelegationsResponse is response type for the Query/Redelegations RPC
        method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        redelegation_responses:
          items:
            description: |-
              RedelegationResponse is equivalent to a Redelegation except that its entries
              contain a balance in addition to shares which is more suitable for client
              responses.
            properties:
              entries:
                items:
                  description: |-
                    RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                    contains a balance in addition to shares which is more suitable for client
                    responses.
                  properties:
                    balance:
                      type: string
                    redelegation_entry:
                      description: RedelegationEntry defines a redelegation object with relevant metadata.
                      properties:
                        completion_time:
                          description: completion_time defines the unix time for redelegation completion.
                          format: date-time
                          type: string
                        creation_height:
                          description: creation_height  defines the height which the redelegation took place.
                          format: int64
                          type: string
                        initial_balance:
                          description: initial_balance defines the initial balance when redelegation started.
                          type: string
                        shares_dst:
                          description: shares_dst is the amount of destination-validator shares created by redelegation.
                          type: string
                        unbonding_id:
                          format: uint64
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: Strictly positive if this entry's unbonding has been stopped by external modules
                          type: string
                      type: object
                  type: object
                type: array
              redelegation:
                description: |-
                  Redelegation contains the list of a particular delegator's redelegating bonds
                  from a particular source validator to a particular destination validator.
                properties:
                  delegator_address:
                    description: delegator_address is the bech32-encoded address of the delegator.
                    type: string
                  entries:
                    description: entries are the redelegation entries.
                    items:
                      description: RedelegationEntry defines a redelegation object with relevant metadata.
                      properties:
                        completion_time:
                          description: completion_time defines the unix time for redelegation completion.
                          format: date-time
                          type: string
                        creation_height:
                          description: creation_height  defines the height which the redelegation took place.
                          format: int64
                          type: string
                        initial_balance:
                          description: initial_balance defines the initial balance when redelegation started.
                          type: string
                        shares_dst:
                          description: shares_dst is the amount of destination-validator shares created by redelegation.
                          type: string
                        unbonding_id:
                          format: uint64
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: Strictly positive if this entry's unbonding has been stopped by external modules
                          type: string
                      type: object
                    type: array
                  validator_dst_address:
                    description: validator_dst_address is the validator redelegation destination operator address.
                    type: string
                  validator_src_address:
                    description: validator_src_address is the validator redelegation source operator address.
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-stoplight:
        id: ol4ehyl3gi2f5
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      description: |-
        QueryDelegationResponse is response type for the Query/UnbondingDelegation
        RPC method.
      properties:
        unbond:
          description: |-
            UnbondingDelegation stores all of a single delegator's unbonding bonds
            for a single validator in an time-ordered list.
          properties:
            delegator_address:
              description: delegator_address is the encoded address of the delegator.
              type: string
            entries:
              description: entries are the unbonding delegation entries.
              items:
                description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                properties:
                  balance:
                    description: balance defines the tokens to receive at completion.
                    type: string
                  completion_time:
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height is the height which the unbonding took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the tokens initially scheduled to receive at completion.
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: Strictly positive if this entry's unbonding has been stopped by external modules
                    type: string
                type: object
              type: array
            validator_address:
              description: validator_address is the encoded address of the validator.
              type: string
          type: object
      type: object
      x-stoplight:
        id: ky2c4mypyc7wj
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      properties:
        delegation_responses:
          items:
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
            properties:
              balance:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegation:
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
                properties:
                  delegator_address:
                    description: delegator_address is the encoded address of the delegator.
                    type: string
                  shares:
                    description: shares define the delegation shares received.
                    type: string
                  validator_address:
                    description: validator_address is the encoded address of the validator.
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QueryValidatorDelegationsResponse is response type for the
        Query/ValidatorDelegations RPC method
      type: object
      x-stoplight:
        id: 5pz1ezfsbs2z7
    cosmos.staking.v1beta1.QueryValidatorResponse:
      properties:
        validator:
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates to be used for creating a validator.
                  properties:
                    max_change_rate:
                      description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                      type: string
                    max_rate:
                      description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                      type: string
                    rate:
                      description: 'rate is the commission rate charged to delegators, as a fraction.'
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex. UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: jailed defined whether the validator has been jailed from bonded status or not.
              type: boolean
            min_self_delegation:
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
              type: string
            operator_address:
              description: operator_address defines the address of the validator's operator; bech encoded in JSON.
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: strictly positive if this validator's unbonding has been stopped by external modules
              type: string
            unbonding_time:
              description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
              format: date-time
              type: string
          type: object
      title: QueryValidatorResponse is response type for the Query/Validator RPC method
      type: object
      x-stoplight:
        id: a9t4x2lxn8ze4
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      description: |-
        QueryValidatorUnbondingDelegationsResponse is response type for the
        Query/ValidatorUnbondingDelegations RPC method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        unbonding_responses:
          items:
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
            properties:
              delegator_address:
                description: delegator_address is the encoded address of the delegator.
                type: string
              entries:
                description: entries are the unbonding delegation entries.
                items:
                  description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
                  properties:
                    balance:
                      description: balance defines the tokens to receive at completion.
                      type: string
                    completion_time:
                      description: completion_time is the unix time for unbonding completion.
                      format: date-time
                      type: string
                    creation_height:
                      description: creation_height is the height which the unbonding took place.
                      format: int64
                      type: string
                    initial_balance:
                      description: initial_balance defines the tokens initially scheduled to receive at completion.
                      type: string
                    unbonding_id:
                      format: uint64
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                    unbonding_on_hold_ref_count:
                      format: int64
                      title: Strictly positive if this entry's unbonding has been stopped by external modules
                      type: string
                  type: object
                type: array
              validator_address:
                description: validator_address is the encoded address of the validator.
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: xqmyulqckwk1e
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        validators:
          description: validators contains all the queried validators.
          items:
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                        type: string
                      max_rate:
                        description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                        type: string
                      rate:
                        description: 'rate is the commission rate charged to delegators, as a fraction.'
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex. UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed from bonded status or not.
                type: boolean
              min_self_delegation:
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
                type: string
              operator_address:
                description: operator_address defines the address of the validator's operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
                format: int64
                type: string
              unbonding_ids:
                items:
                  format: uint64
                  type: string
                title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
                type: array
              unbonding_on_hold_ref_count:
                format: int64
                title: strictly positive if this validator's unbonding has been stopped by external modules
                type: string
              unbonding_time:
                description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
                format: date-time
                type: string
            type: object
          type: array
      title: QueryValidatorsResponse is response type for the Query/Validators RPC method
      type: object
      x-stoplight:
        id: 39xrpo9m1ldzg
    cosmos.staking.v1beta1.Redelegation:
      description: |-
        Redelegation contains the list of a particular delegator's redelegating bonds
        from a particular source validator to a particular destination validator.
      properties:
        delegator_address:
          description: delegator_address is the bech32-encoded address of the delegator.
          type: string
        entries:
          description: entries are the redelegation entries.
          items:
            description: RedelegationEntry defines a redelegation object with relevant metadata.
            properties:
              completion_time:
                description: completion_time defines the unix time for redelegation completion.
                format: date-time
                type: string
              creation_height:
                description: creation_height  defines the height which the redelegation took place.
                format: int64
                type: string
              initial_balance:
                description: initial_balance defines the initial balance when redelegation started.
                type: string
              shares_dst:
                description: shares_dst is the amount of destination-validator shares created by redelegation.
                type: string
              unbonding_id:
                format: uint64
                title: Incrementing id that uniquely identifies this entry
                type: string
              unbonding_on_hold_ref_count:
                format: int64
                title: Strictly positive if this entry's unbonding has been stopped by external modules
                type: string
            type: object
          type: array
        validator_dst_address:
          description: validator_dst_address is the validator redelegation destination operator address.
          type: string
        validator_src_address:
          description: validator_src_address is the validator redelegation source operator address.
          type: string
      type: object
      x-stoplight:
        id: wzbssdalgqcv0
    cosmos.staking.v1beta1.RedelegationEntry:
      description: RedelegationEntry defines a redelegation object with relevant metadata.
      properties:
        completion_time:
          description: completion_time defines the unix time for redelegation completion.
          format: date-time
          type: string
        creation_height:
          description: creation_height  defines the height which the redelegation took place.
          format: int64
          type: string
        initial_balance:
          description: initial_balance defines the initial balance when redelegation started.
          type: string
        shares_dst:
          description: shares_dst is the amount of destination-validator shares created by redelegation.
          type: string
        unbonding_id:
          format: uint64
          title: Incrementing id that uniquely identifies this entry
          type: string
        unbonding_on_hold_ref_count:
          format: int64
          title: Strictly positive if this entry's unbonding has been stopped by external modules
          type: string
      type: object
      x-stoplight:
        id: lwusciyhkmlw2
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      description: |-
        RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
        contains a balance in addition to shares which is more suitable for client
        responses.
      properties:
        balance:
          type: string
        redelegation_entry:
          description: RedelegationEntry defines a redelegation object with relevant metadata.
          properties:
            completion_time:
              description: completion_time defines the unix time for redelegation completion.
              format: date-time
              type: string
            creation_height:
              description: creation_height  defines the height which the redelegation took place.
              format: int64
              type: string
            initial_balance:
              description: initial_balance defines the initial balance when redelegation started.
              type: string
            shares_dst:
              description: shares_dst is the amount of destination-validator shares created by redelegation.
              type: string
            unbonding_id:
              format: uint64
              title: Incrementing id that uniquely identifies this entry
              type: string
            unbonding_on_hold_ref_count:
              format: int64
              title: Strictly positive if this entry's unbonding has been stopped by external modules
              type: string
          type: object
      type: object
      x-stoplight:
        id: nantt01mmrf5v
    cosmos.staking.v1beta1.RedelegationResponse:
      description: |-
        RedelegationResponse is equivalent to a Redelegation except that its entries
        contain a balance in addition to shares which is more suitable for client
        responses.
      properties:
        entries:
          items:
            description: |-
              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
              contains a balance in addition to shares which is more suitable for client
              responses.
            properties:
              balance:
                type: string
              redelegation_entry:
                description: RedelegationEntry defines a redelegation object with relevant metadata.
                properties:
                  completion_time:
                    description: completion_time defines the unix time for redelegation completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height  defines the height which the redelegation took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the initial balance when redelegation started.
                    type: string
                  shares_dst:
                    description: shares_dst is the amount of destination-validator shares created by redelegation.
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: Strictly positive if this entry's unbonding has been stopped by external modules
                    type: string
                type: object
            type: object
          type: array
        redelegation:
          description: |-
            Redelegation contains the list of a particular delegator's redelegating bonds
            from a particular source validator to a particular destination validator.
          properties:
            delegator_address:
              description: delegator_address is the bech32-encoded address of the delegator.
              type: string
            entries:
              description: entries are the redelegation entries.
              items:
                description: RedelegationEntry defines a redelegation object with relevant metadata.
                properties:
                  completion_time:
                    description: completion_time defines the unix time for redelegation completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height  defines the height which the redelegation took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the initial balance when redelegation started.
                    type: string
                  shares_dst:
                    description: shares_dst is the amount of destination-validator shares created by redelegation.
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: Strictly positive if this entry's unbonding has been stopped by external modules
                    type: string
                type: object
              type: array
            validator_dst_address:
              description: validator_dst_address is the validator redelegation destination operator address.
              type: string
            validator_src_address:
              description: validator_src_address is the validator redelegation source operator address.
              type: string
          type: object
      type: object
      x-stoplight:
        id: r0dr2k8zcgvwn
    cosmos.staking.v1beta1.UnbondingDelegation:
      description: |-
        UnbondingDelegation stores all of a single delegator's unbonding bonds
        for a single validator in an time-ordered list.
      properties:
        delegator_address:
          description: delegator_address is the encoded address of the delegator.
          type: string
        entries:
          description: entries are the unbonding delegation entries.
          items:
            description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
            properties:
              balance:
                description: balance defines the tokens to receive at completion.
                type: string
              completion_time:
                description: completion_time is the unix time for unbonding completion.
                format: date-time
                type: string
              creation_height:
                description: creation_height is the height which the unbonding took place.
                format: int64
                type: string
              initial_balance:
                description: initial_balance defines the tokens initially scheduled to receive at completion.
                type: string
              unbonding_id:
                format: uint64
                title: Incrementing id that uniquely identifies this entry
                type: string
              unbonding_on_hold_ref_count:
                format: int64
                title: Strictly positive if this entry's unbonding has been stopped by external modules
                type: string
            type: object
          type: array
        validator_address:
          description: validator_address is the encoded address of the validator.
          type: string
      type: object
      x-stoplight:
        id: 5mzo9f5m3gvtj
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
      properties:
        balance:
          description: balance defines the tokens to receive at completion.
          type: string
        completion_time:
          description: completion_time is the unix time for unbonding completion.
          format: date-time
          type: string
        creation_height:
          description: creation_height is the height which the unbonding took place.
          format: int64
          type: string
        initial_balance:
          description: initial_balance defines the tokens initially scheduled to receive at completion.
          type: string
        unbonding_id:
          format: uint64
          title: Incrementing id that uniquely identifies this entry
          type: string
        unbonding_on_hold_ref_count:
          format: int64
          title: Strictly positive if this entry's unbonding has been stopped by external modules
          type: string
      type: object
      x-stoplight:
        id: 3ee379g5we1ai
    cosmos.staking.v1beta1.Validator:
      description: |-
        Validator defines a validator, together with the total amount of the
        Validator's bond shares and their exchange rate to coins. Slashing results in
        a decrease in the exchange rate, allowing correct calculation of future
        undelegations without iterating over delegators. When coins are delegated to
        this validator, the validator is credited with a delegation whose number of
        bond shares is based on the amount of coins delegated divided by the current
        exchange rate. Voting power can be calculated as total bonded shares
        multiplied by exchange rate.
      properties:
        commission:
          description: commission defines the commission parameters.
          properties:
            commission_rates:
              description: commission_rates defines the initial commission rates to be used for creating a validator.
              properties:
                max_change_rate:
                  description: 'max_change_rate defines the maximum daily increase of the validator commission, as a fraction.'
                  type: string
                max_rate:
                  description: 'max_rate defines the maximum commission rate which validator can ever charge, as a fraction.'
                  type: string
                rate:
                  description: 'rate is the commission rate charged to delegators, as a fraction.'
                  type: string
              type: object
            update_time:
              description: update_time is the last time the commission rate was changed.
              format: date-time
              type: string
          type: object
        consensus_pubkey:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        delegator_shares:
          description: delegator_shares defines total shares issued to a validator's delegators.
          type: string
        description:
          description: description defines the description terms for the validator.
          properties:
            details:
              description: details define other optional details.
              type: string
            identity:
              description: identity defines an optional identity signature (ex. UPort or Keybase).
              type: string
            moniker:
              description: moniker defines a human-readable name for the validator.
              type: string
            security_contact:
              description: security_contact defines an optional email for security contact.
              type: string
            website:
              description: website defines an optional website link.
              type: string
          type: object
        jailed:
          description: jailed defined whether the validator has been jailed from bonded status or not.
          type: boolean
        min_self_delegation:
          description: |-
            min_self_delegation is the validator's self declared minimum self delegation.

            Since: cosmos-sdk 0.46
          type: string
        operator_address:
          description: operator_address defines the address of the validator's operator; bech encoded in JSON.
          type: string
        status:
          default: BOND_STATUS_UNSPECIFIED
          description: status is the validator status (bonded/unbonding/unbonded).
          enum:
            - BOND_STATUS_UNSPECIFIED
            - BOND_STATUS_UNBONDED
            - BOND_STATUS_UNBONDING
            - BOND_STATUS_BONDED
          type: string
        tokens:
          description: tokens define the delegated tokens (incl. self-delegation).
          type: string
        unbonding_height:
          description: 'unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.'
          format: int64
          type: string
        unbonding_ids:
          items:
            format: uint64
            type: string
          title: 'list of unbonding ids, each uniquely identifing an unbonding of this validator'
          type: array
        unbonding_on_hold_ref_count:
          format: int64
          title: strictly positive if this validator's unbonding has been stopped by external modules
          type: string
        unbonding_time:
          description: 'unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.'
          format: date-time
          type: string
      type: object
      x-stoplight:
        id: kitldq01eahs8
    cosmos.tx.signing.v1beta1.SignMode:
      default: SIGN_MODE_UNSPECIFIED
      description: |-
        SignMode represents a signing mode with its own security guarantees.

        This enum should be considered a registry of all known sign modes
        in the Cosmos ecosystem. Apps are not expected to support all known
        sign modes. Apps that would like to support custom  sign modes are
        encouraged to open a small PR against this file to add a new case
        to this SignMode enum describing their sign mode so that different
        apps have a consistent version of this enum.

         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
        rejected.
         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
        verified with raw bytes from Tx.
         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
        human-readable textual representation on top of the binary representation
        from SIGN_MODE_DIRECT.

        Since: cosmos-sdk 0.50
         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
        SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
        require signers signing over other signers' `signer_info`.

        Since: cosmos-sdk 0.46
         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
        Amino JSON and will be removed in the future.
         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

        Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
        but is not implemented on the SDK by default. To enable EIP-191, you need
        to pass a custom `TxConfig` that has an implementation of
        `SignModeHandler` for EIP-191. The SDK may decide to fully support
        EIP-191 in the future.

        Since: cosmos-sdk 0.45.2
      enum:
        - SIGN_MODE_UNSPECIFIED
        - SIGN_MODE_DIRECT
        - SIGN_MODE_TEXTUAL
        - SIGN_MODE_DIRECT_AUX
        - SIGN_MODE_LEGACY_AMINO_JSON
        - SIGN_MODE_EIP_191
      type: string
      x-stoplight:
        id: 3kfc7ng1prah0
    cosmos.tx.v1beta1.AuthInfo:
      description: |-
        AuthInfo describes the fee and signer modes that are used to sign a
        transaction.
      properties:
        fee:
          description: |-
            Fee is the fee and gas limit for the transaction. The first signer is the
            primary signer and the one which pays the fee. The fee can be calculated
            based on the cost of evaluating the body and doing signature verification
            of the signers. This can be estimated via simulation.
          properties:
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: amount is the amount of coins to be paid as a fee
              type: array
            gas_limit:
              format: uint64
              title: |-
                gas_limit is the maximum gas that can be used in transaction processing
                before an out of gas error occurs
              type: string
            granter:
              title: |-
                if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
                not support fee grants, this will fail
              type: string
            payer:
              description: |-
                if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
                the payer must be a tx signer (and thus have signed this field in AuthInfo).
                setting this field does *not* change the ordering of required signers for the transaction.
              type: string
          type: object
        signer_infos:
          description: |-
            signer_infos defines the signing modes for the required signers. The number
            and order of elements must match the required signers from TxBody's
            messages. The first element is the primary signer and the one which pays
            the fee.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.SignerInfo'
          type: array
        tip:
          description: |-
            Tip is the optional tip used for transactions fees paid in another denom.

            This field is ignored if the chain didn't enable tips, i.e. didn't add the
            `TipDecorator` in its posthandler.

            Since: cosmos-sdk 0.46
          properties:
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: amount is the amount of the tip
              type: array
            tipper:
              title: tipper is the address of the account paying for the tip
              type: string
          type: object
      type: object
      x-stoplight:
        id: pht3ezv875dpy
    cosmos.tx.v1beta1.BroadcastMode:
      default: BROADCAST_MODE_UNSPECIFIED
      description: |-
        BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
        method.

         - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
         - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
        BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
         - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
        for a CheckTx execution response only.
         - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
        returns immediately.
      enum:
        - BROADCAST_MODE_UNSPECIFIED
        - BROADCAST_MODE_BLOCK
        - BROADCAST_MODE_SYNC
        - BROADCAST_MODE_ASYNC
      type: string
      x-stoplight:
        id: i7bbwbg7nt0be
    cosmos.tx.v1beta1.BroadcastTxRequest:
      description: |-
        BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
        RPC method.
      properties:
        mode:
          default: BROADCAST_MODE_UNSPECIFIED
          description: |-
            BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
            method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
            BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
            for a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
            returns immediately.
          enum:
            - BROADCAST_MODE_UNSPECIFIED
            - BROADCAST_MODE_BLOCK
            - BROADCAST_MODE_SYNC
            - BROADCAST_MODE_ASYNC
          type: string
        tx_bytes:
          description: tx_bytes is the raw transaction.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: i0yxld3txau89
    cosmos.tx.v1beta1.BroadcastTxResponse:
      description: |-
        BroadcastTxResponse is the response type for the
        Service.BroadcastTx method.
      properties:
        tx_response:
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
          properties:
            info:
              description: Additional information. May be non-deterministic.
              type: string
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: 'Result bytes, if any.'
              type: string
            events:
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseFinalizeBlock and ResponseCheckTx.
                  Later, transactions may be queried using these events.
                properties:
                  attributes:
                    items:
                      description: 'EventAttribute is a single key-value pair, associated with an event.'
                      properties:
                        index:
                          type: boolean
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            logs:
              description: The output of the application's logger (typed). May be non-deterministic.
              items:
                description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
                properties:
                  events:
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                      properties:
                        attributes:
                          items:
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
              type: string
            timestamp:
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
              type: string
            tx:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            txhash:
              description: The transaction hash.
              type: string
          type: object
      type: object
      x-stoplight:
        id: xjp6f552an1u5
    cosmos.tx.v1beta1.Fee:
      description: |-
        Fee includes the amount of coins paid in fees and the maximum
        gas to be used by the transaction. The ratio yields an effective "gasprice",
        which must be above some miminum to be accepted into the mempool.
      properties:
        amount:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: amount is the amount of coins to be paid as a fee
          type: array
        gas_limit:
          format: uint64
          title: |-
            gas_limit is the maximum gas that can be used in transaction processing
            before an out of gas error occurs
          type: string
        granter:
          title: |-
            if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
            to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
            not support fee grants, this will fail
          type: string
        payer:
          description: |-
            if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
            the payer must be a tx signer (and thus have signed this field in AuthInfo).
            setting this field does *not* change the ordering of required signers for the transaction.
          type: string
      type: object
      x-stoplight:
        id: pe0yxwgwc1yx8
    cosmos.tx.v1beta1.GetBlockWithTxsResponse:
      description: |-
        GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
        method.

        Since: cosmos-sdk 0.45.2
      properties:
        block:
          properties:
            data:
              properties:
                txs:
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: |-
                              Vote represents a prevote or precommit vote from validators for
                              consensus.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              extension:
                                description: |-
                                  Vote extension provided by the application. Only valid for precommit
                                  messages.
                                format: byte
                                type: string
                              extension_signature:
                                description: |-
                                  Vote extension signature by the validator if they participated in
                                  consensus for the associated block.
                                  Only valid for precommit messages.
                                format: byte
                                type: string
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                description: |-
                                  Vote signature by the validator if they participated in consensus for the
                                  associated block.
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlockID the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the prev block
                                        type: string
                                      version:
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available for use with Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        pagination:
          description: pagination defines a pagination for the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        txs:
          description: txs are the transactions in the block.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          type: array
      type: object
      x-stoplight:
        id: uis4moia9s2oy
    cosmos.tx.v1beta1.GetTxResponse:
      description: GetTxResponse is the response type for the Service.GetTx method.
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          description: tx is the queried transaction.
        tx_response:
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
          properties:
            info:
              description: Additional information. May be non-deterministic.
              type: string
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: 'Result bytes, if any.'
              type: string
            events:
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseFinalizeBlock and ResponseCheckTx.
                  Later, transactions may be queried using these events.
                properties:
                  attributes:
                    items:
                      description: 'EventAttribute is a single key-value pair, associated with an event.'
                      properties:
                        index:
                          type: boolean
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            logs:
              description: The output of the application's logger (typed). May be non-deterministic.
              items:
                description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
                properties:
                  events:
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                      properties:
                        attributes:
                          items:
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
              type: string
            timestamp:
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
              type: string
            tx:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            txhash:
              description: The transaction hash.
              type: string
          type: object
      type: object
      x-stoplight:
        id: ko5yd037h0f4y
    cosmos.tx.v1beta1.GetTxsEventResponse:
      description: |-
        GetTxsEventResponse is the response type for the Service.TxsByEvents
        RPC method.
      properties:
        pagination:
          description: |-
            pagination defines a pagination for the response.
            Deprecated post v0.46.x: use total instead.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        total:
          format: uint64
          title: total is total number of results available
          type: string
        tx_responses:
          description: tx_responses is the list of queried TxResponses.
          items:
            description: |-
              TxResponse defines a structure containing relevant tx data and metadata. The
              tags are stringified and the log is JSON decoded.
            properties:
              info:
                description: Additional information. May be non-deterministic.
                type: string
              code:
                description: Response code.
                format: int64
                type: integer
              codespace:
                title: Namespace for the Code
                type: string
              data:
                description: 'Result bytes, if any.'
                type: string
              events:
                description: |-
                  Events defines all the events emitted by processing a transaction. Note,
                  these events include those emitted by processing all the messages and those
                  emitted from the ante. Whereas Logs contains the events, with
                  additional metadata, emitted only by processing the messages.

                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                items:
                  description: |-
                    Event allows application developers to attach additional information to
                    ResponseFinalizeBlock and ResponseCheckTx.
                    Later, transactions may be queried using these events.
                  properties:
                    attributes:
                      items:
                        description: 'EventAttribute is a single key-value pair, associated with an event.'
                        properties:
                          index:
                            type: boolean
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                type: array
              gas_used:
                description: Amount of gas consumed by transaction.
                format: int64
                type: string
              gas_wanted:
                description: Amount of gas requested for transaction.
                format: int64
                type: string
              height:
                format: int64
                title: The block height
                type: string
              logs:
                description: The output of the application's logger (typed). May be non-deterministic.
                items:
                  description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
                  properties:
                    events:
                      description: |-
                        Events contains a slice of Event objects that were emitted during some
                        execution.
                      items:
                        description: |-
                          StringEvent defines en Event object wrapper where all the attributes
                          contain key/value pairs that are strings instead of raw bytes.
                        properties:
                          attributes:
                            items:
                              description: |-
                                Attribute defines an attribute wrapper where the key and value are
                                strings instead of raw bytes.
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          type:
                            type: string
                        type: object
                      type: array
                    log:
                      type: string
                    msg_index:
                      format: int64
                      type: integer
                  type: object
                type: array
              raw_log:
                description: |-
                  The output of the application's logger (raw string). May be
                  non-deterministic.
                type: string
              timestamp:
                description: |-
                  Time of the previous block. For heights > 1, it's the weighted median of
                  the timestamps of the valid votes in the block.LastCommit. For height == 1,
                  it's genesis time.
                type: string
              tx:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              txhash:
                description: The transaction hash.
                type: string
            type: object
          type: array
        txs:
          description: txs is the list of queried transactions.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          type: array
      type: object
      x-stoplight:
        id: t4hkpq2i42hrp
    cosmos.tx.v1beta1.ModeInfo:
      description: ModeInfo describes the signing mode of a single or nested multisig signer.
      properties:
        multi:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo.Multi'
          title: multi represents a nested multisig signer
        single:
          properties:
            mode:
              default: SIGN_MODE_UNSPECIFIED
              description: |-
                SignMode represents a signing mode with its own security guarantees.

                This enum should be considered a registry of all known sign modes
                in the Cosmos ecosystem. Apps are not expected to support all known
                sign modes. Apps that would like to support custom  sign modes are
                encouraged to open a small PR against this file to add a new case
                to this SignMode enum describing their sign mode so that different
                apps have a consistent version of this enum.

                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                rejected.
                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                verified with raw bytes from Tx.
                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                human-readable textual representation on top of the binary representation
                from SIGN_MODE_DIRECT.

                Since: cosmos-sdk 0.50
                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
                require signers signing over other signers' `signer_info`.

                Since: cosmos-sdk 0.46
                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                Amino JSON and will be removed in the future.
                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

                Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
                but is not implemented on the SDK by default. To enable EIP-191, you need
                to pass a custom `TxConfig` that has an implementation of
                `SignModeHandler` for EIP-191. The SDK may decide to fully support
                EIP-191 in the future.

                Since: cosmos-sdk 0.45.2
              enum:
                - SIGN_MODE_UNSPECIFIED
                - SIGN_MODE_DIRECT
                - SIGN_MODE_TEXTUAL
                - SIGN_MODE_DIRECT_AUX
                - SIGN_MODE_LEGACY_AMINO_JSON
                - SIGN_MODE_EIP_191
              title: mode is the signing mode of the single signer
              type: string
          title: single represents a single signer
          type: object
      type: object
      x-stoplight:
        id: 8bn9vietjzr49
    cosmos.tx.v1beta1.ModeInfo.Multi:
      properties:
        bitarray:
          description: |-
            CompactBitArray is an implementation of a space efficient bit array.
            This is used to ensure that the encoded data takes up a minimal amount of
            space after proto encoding.
            This is not thread safe, and is not intended for concurrent usage.
          properties:
            elems:
              format: byte
              type: string
            extra_bits_stored:
              format: int64
              type: integer
          title: bitarray specifies which keys within the multisig are signing
          type: object
        mode_infos:
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
          title: |-
            mode_infos is the corresponding modes of the signers of the multisig
            which could include nested multisig public keys
          type: array
      title: Multi is the mode info for a multisig public key
      type: object
      x-stoplight:
        id: s48s4823gsty6
    cosmos.tx.v1beta1.ModeInfo.Single:
      properties:
        mode:
          default: SIGN_MODE_UNSPECIFIED
          description: |-
            SignMode represents a signing mode with its own security guarantees.

            This enum should be considered a registry of all known sign modes
            in the Cosmos ecosystem. Apps are not expected to support all known
            sign modes. Apps that would like to support custom  sign modes are
            encouraged to open a small PR against this file to add a new case
            to this SignMode enum describing their sign mode so that different
            apps have a consistent version of this enum.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected.
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx.
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation
            from SIGN_MODE_DIRECT.

            Since: cosmos-sdk 0.50
             - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
            SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
            require signers signing over other signers' `signer_info`.

            Since: cosmos-sdk 0.46
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future.
             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
            but is not implemented on the SDK by default. To enable EIP-191, you need
            to pass a custom `TxConfig` that has an implementation of
            `SignModeHandler` for EIP-191. The SDK may decide to fully support
            EIP-191 in the future.

            Since: cosmos-sdk 0.45.2
          enum:
            - SIGN_MODE_UNSPECIFIED
            - SIGN_MODE_DIRECT
            - SIGN_MODE_TEXTUAL
            - SIGN_MODE_DIRECT_AUX
            - SIGN_MODE_LEGACY_AMINO_JSON
            - SIGN_MODE_EIP_191
          title: mode is the signing mode of the single signer
          type: string
      title: |-
        Single is the mode info for a single signer. It is structured as a message
        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
        future
      type: object
      x-stoplight:
        id: j1jix5g80hcvv
    cosmos.tx.v1beta1.OrderBy:
      default: ORDER_BY_UNSPECIFIED
      description: |-
        - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
        to ASC in this case.
         - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
      enum:
        - ORDER_BY_UNSPECIFIED
        - ORDER_BY_ASC
        - ORDER_BY_DESC
      title: OrderBy defines the sorting order
      type: string
      x-stoplight:
        id: 2lf5og6l0azw3
    cosmos.tx.v1beta1.SignerInfo:
      description: |-
        SignerInfo describes the public key and signing mode of a single top-level
        signer.
      properties:
        mode_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
          title: |-
            mode_info describes the signing mode of the signer and is a nested
            structure to support nested multisig pubkey's
        public_key:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        sequence:
          description: |-
            sequence is the sequence of the account, which describes the
            number of committed transactions signed by a given address. It is used to
            prevent replay attacks.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: 2gpros2yyuwi1
    cosmos.tx.v1beta1.SimulateRequest:
      description: |-
        SimulateRequest is the request type for the Service.Simulate
        RPC method.
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          description: |-
            tx is the transaction to simulate.
            Deprecated. Send raw tx bytes instead.
        tx_bytes:
          description: |-
            tx_bytes is the raw transaction.

            Since: cosmos-sdk 0.43
          format: byte
          type: string
      type: object
      x-stoplight:
        id: 5amaw6uk62rcj
    cosmos.tx.v1beta1.SimulateResponse:
      description: |-
        SimulateResponse is the response type for the
        Service.SimulateRPC method.
      properties:
        gas_info:
          description: gas_info is the information about gas used in the simulation.
          properties:
            gas_used:
              description: GasUsed is the amount of gas actually consumed.
              format: uint64
              type: string
            gas_wanted:
              description: GasWanted is the maximum units of work we allow this tx to perform.
              format: uint64
              type: string
          type: object
        result:
          description: result is the result of the simulation.
          properties:
            data:
              description: |-
                Data is any data returned from message or handler execution. It MUST be
                length prefixed in order to separate data from multiple message executions.
                Deprecated. This field is still populated, but prefer msg_response instead
                because it also contains the Msg response typeURL.
              format: byte
              type: string
            events:
              description: |-
                Events contains a slice of Event objects that were emitted during message
                or handler execution.
              items:
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseFinalizeBlock and ResponseCheckTx.
                  Later, transactions may be queried using these events.
                properties:
                  attributes:
                    items:
                      description: 'EventAttribute is a single key-value pair, associated with an event.'
                      properties:
                        index:
                          type: boolean
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            log:
              description: Log contains the log information from message or handler execution.
              type: string
            msg_responses:
              description: |-
                msg_responses contains the Msg handler responses type packed in Anys.

                Since: cosmos-sdk 0.46
              items:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: 6ogz0z6qm78fc
    cosmos.tx.v1beta1.Tip:
      description: |-
        Tip is the tip used for meta-transactions.

        Since: cosmos-sdk 0.46
      properties:
        amount:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: amount is the amount of the tip
          type: array
        tipper:
          title: tipper is the address of the account paying for the tip
          type: string
      type: object
      x-stoplight:
        id: 53o1heh9nmtnh
    cosmos.tx.v1beta1.Tx:
      description: Tx is the standard type used for broadcasting transactions.
      properties:
        auth_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.AuthInfo'
          title: |-
            auth_info is the authorization related content of the transaction,
            specifically signers, signer modes and fee
        body:
          description: TxBody is the body of a transaction that all signers sign over.
          properties:
            extension_options:
              items:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, the transaction will be rejected
              type: array
            memo:
              description: |-
                memo is any arbitrary note/comment to be added to the transaction.
                WARNING: in clients, any publicly exposed text should not be called memo,
                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
              type: string
            messages:
              description: |-
                messages is a list of messages to be executed. The required signers of
                those messages define the number and order of elements in AuthInfo's
                signer_infos and Tx's signatures. Each required signer address is added to
                the list only the first time it occurs.
                By convention, the first required signer (usually from the first message)
                is referred to as the primary signer and pays the fee for the whole
                transaction.
              items:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            non_critical_extension_options:
              items:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                type: object
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, they will be ignored
              type: array
            timeout_height:
              format: uint64
              title: |-
                timeout is the block height after which this transaction will not
                be processed by the chain
              type: string
          title: body is the processable content of the transaction
          type: object
        signatures:
          description: |-
            signatures is a list of signatures that matches the length and order of
            AuthInfo's signer_infos to allow connecting signature meta information like
            public key and signing mode by position.
          items:
            format: byte
            type: string
          type: array
      type: object
      x-stoplight:
        id: w05cz25u21ili
    cosmos.tx.v1beta1.TxBody:
      description: TxBody is the body of a transaction that all signers sign over.
      properties:
        extension_options:
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, the transaction will be rejected
          type: array
        memo:
          description: |-
            memo is any arbitrary note/comment to be added to the transaction.
            WARNING: in clients, any publicly exposed text should not be called memo,
            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
          type: string
        messages:
          description: |-
            messages is a list of messages to be executed. The required signers of
            those messages define the number and order of elements in AuthInfo's
            signer_infos and Tx's signatures. Each required signer address is added to
            the list only the first time it occurs.
            By convention, the first required signer (usually from the first message)
            is referred to as the primary signer and pays the fee for the whole
            transaction.
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
        non_critical_extension_options:
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, they will be ignored
          type: array
        timeout_height:
          format: uint64
          title: |-
            timeout is the block height after which this transaction will not
            be processed by the chain
          type: string
      type: object
      x-stoplight:
        id: 2bbiz8bqtgly2
    cosmos.tx.v1beta1.TxDecodeAminoRequest:
      description: |-
        TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        amino_binary:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: n3w0ay144anqs
    cosmos.tx.v1beta1.TxDecodeAminoResponse:
      description: |-
        TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        amino_json:
          type: string
      type: object
      x-stoplight:
        id: uodue15w169b5
    cosmos.tx.v1beta1.TxDecodeRequest:
      description: |-
        TxDecodeRequest is the request type for the Service.TxDecode
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        tx_bytes:
          description: tx_bytes is the raw transaction.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: 0c0l6hb5s1zsc
    cosmos.tx.v1beta1.TxDecodeResponse:
      description: |-
        TxDecodeResponse is the response type for the
        Service.TxDecode method.

        Since: cosmos-sdk 0.47
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          description: tx is the decoded transaction.
      type: object
      x-stoplight:
        id: hgsbqh9nchwjx
    cosmos.tx.v1beta1.TxEncodeAminoRequest:
      description: |-
        TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        amino_json:
          type: string
      type: object
      x-stoplight:
        id: tsvzk6zvsn4oq
    cosmos.tx.v1beta1.TxEncodeAminoResponse:
      description: |-
        TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        amino_binary:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: 1ugg18abtonnq
    cosmos.tx.v1beta1.TxEncodeRequest:
      description: |-
        TxEncodeRequest is the request type for the Service.TxEncode
        RPC method.

        Since: cosmos-sdk 0.47
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          description: tx is the transaction to encode.
      type: object
      x-stoplight:
        id: g6tlz18wep1fe
    cosmos.tx.v1beta1.TxEncodeResponse:
      description: |-
        TxEncodeResponse is the response type for the
        Service.TxEncode method.

        Since: cosmos-sdk 0.47
      properties:
        tx_bytes:
          description: tx_bytes is the encoded transaction bytes.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: mwwc9ku7w6trk
    cosmos.upgrade.v1beta1.ModuleVersion:
      description: |-
        ModuleVersion specifies a module and its consensus version.

        Since: cosmos-sdk 0.43
      properties:
        name:
          title: name of the app module
          type: string
        version:
          format: uint64
          title: consensus version of the app module
          type: string
      type: object
      x-stoplight:
        id: 6axc5cj18sodq
    cosmos.upgrade.v1beta1.Plan:
      description: Plan specifies information about a planned upgrade and when it should occur.
      properties:
        info:
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
          type: string
        height:
          description: The height at which the upgrade must be performed.
          format: int64
          type: string
        name:
          description: |-
            Sets the name for the upgrade. This name will be used by the upgraded
            version of the software to apply any special "on-upgrade" commands during
            the first BeginBlock method after the upgrade is applied. It is also used
            to detect whether a software version can handle a given upgrade. If no
            upgrade handler with this name has been set in the software, it will be
            assumed that the software is out-of-date when the upgrade Time or Height is
            reached and the software will exit.
          type: string
        time:
          description: |-
            Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
            has been removed from the SDK.
            If this field is not empty, an error will be thrown.
          format: date-time
          type: string
        upgraded_client_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
      type: object
      x-stoplight:
        id: nkql5477zjwe3
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      description: |-
        QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
        method.
      properties:
        height:
          description: height is the block height at which the plan was applied.
          format: int64
          type: string
      type: object
      x-stoplight:
        id: py9g7knwje7m4
    cosmos.upgrade.v1beta1.QueryAuthorityResponse:
      description: 'Since: cosmos-sdk 0.46'
      properties:
        address:
          type: string
      title: QueryAuthorityResponse is the response type for Query/Authority
      type: object
      x-stoplight:
        id: osysfbsjqzgt5
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      description: |-
        QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
        method.
      properties:
        plan:
          description: plan is the current upgrade plan.
          properties:
            info:
              title: |-
                Any application specific upgrade info to be included on-chain
                such as a git commit that validators could automatically upgrade to
              type: string
            height:
              description: The height at which the upgrade must be performed.
              format: int64
              type: string
            name:
              description: |-
                Sets the name for the upgrade. This name will be used by the upgraded
                version of the software to apply any special "on-upgrade" commands during
                the first BeginBlock method after the upgrade is applied. It is also used
                to detect whether a software version can handle a given upgrade. If no
                upgrade handler with this name has been set in the software, it will be
                assumed that the software is out-of-date when the upgrade Time or Height is
                reached and the software will exit.
              type: string
            time:
              description: |-
                Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                has been removed from the SDK.
                If this field is not empty, an error will be thrown.
              format: date-time
              type: string
            upgraded_client_state:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: eubye239npyta
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      description: |-
        QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
        RPC method.

        Since: cosmos-sdk 0.43
      properties:
        module_versions:
          description: module_versions is a list of module names with their consensus versions.
          items:
            description: |-
              ModuleVersion specifies a module and its consensus version.

              Since: cosmos-sdk 0.43
            properties:
              name:
                title: name of the app module
                type: string
              version:
                format: uint64
                title: consensus version of the app module
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: a2gsr6jn8x9yx
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
        RPC method.
      properties:
        upgraded_consensus_state:
          format: byte
          title: 'Since: cosmos-sdk 0.43'
          type: string
      type: object
      x-stoplight:
        id: 11u1glyfzgko4
    cosmwasm.wasm.v1.AbsoluteTxPosition:
      description: |-
        AbsoluteTxPosition is a unique transaction position that allows for global
        ordering of transactions.
      properties:
        block_height:
          format: uint64
          title: BlockHeight is the block the contract was created at
          type: string
        tx_index:
          format: uint64
          title: |-
            TxIndex is a monotonic counter within the block (actual transaction index,
            or gas consumed)
          type: string
      type: object
      x-stoplight:
        id: 3x9ypusj9bna7
    cosmwasm.wasm.v1.AccessConfig:
      description: AccessConfig access control type.
      properties:
        addresses:
          items:
            type: string
          type: array
        permission:
          default: ACCESS_TYPE_UNSPECIFIED
          description: |-
            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
          enum:
            - ACCESS_TYPE_UNSPECIFIED
            - ACCESS_TYPE_NOBODY
            - ACCESS_TYPE_EVERYBODY
            - ACCESS_TYPE_ANY_OF_ADDRESSES
          title: AccessType permission types
          type: string
      type: object
      x-stoplight:
        id: z8iiozrxg3mqd
    cosmwasm.wasm.v1.AccessType:
      default: ACCESS_TYPE_UNSPECIFIED
      description: |-
        - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
         - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
         - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
         - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
      enum:
        - ACCESS_TYPE_UNSPECIFIED
        - ACCESS_TYPE_NOBODY
        - ACCESS_TYPE_EVERYBODY
        - ACCESS_TYPE_ANY_OF_ADDRESSES
      title: AccessType permission types
      type: string
      x-stoplight:
        id: 1gf47g3wf0l9t
    cosmwasm.wasm.v1.CodeInfoResponse:
      properties:
        code_id:
          format: uint64
          type: string
        creator:
          type: string
        data_hash:
          format: byte
          type: string
        instantiate_permission:
          description: AccessConfig access control type.
          properties:
            addresses:
              items:
                type: string
              type: array
            permission:
              default: ACCESS_TYPE_UNSPECIFIED
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              enum:
                - ACCESS_TYPE_UNSPECIFIED
                - ACCESS_TYPE_NOBODY
                - ACCESS_TYPE_EVERYBODY
                - ACCESS_TYPE_ANY_OF_ADDRESSES
              title: AccessType permission types
              type: string
          type: object
      title: CodeInfoResponse contains code meta data from CodeInfo
      type: object
      x-stoplight:
        id: jj5qgd2rr2x2o
    cosmwasm.wasm.v1.ContractCodeHistoryEntry:
      description: ContractCodeHistoryEntry metadata to a contract.
      properties:
        code_id:
          format: uint64
          title: CodeID is the reference to the stored WASM code
          type: string
        msg:
          format: byte
          type: string
        operation:
          default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          description: |-
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
          enum:
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
          title: ContractCodeHistoryOperationType actions that caused a code change
          type: string
        updated:
          description: Updated Tx position when the operation was executed.
          properties:
            block_height:
              format: uint64
              title: BlockHeight is the block the contract was created at
              type: string
            tx_index:
              format: uint64
              title: |-
                TxIndex is a monotonic counter within the block (actual transaction index,
                or gas consumed)
              type: string
          type: object
      type: object
      x-stoplight:
        id: oxpwovmyceb1e
    cosmwasm.wasm.v1.ContractCodeHistoryOperationType:
      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      description: |-
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
      enum:
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
      title: ContractCodeHistoryOperationType actions that caused a code change
      type: string
      x-stoplight:
        id: ms68v9k36nype
    cosmwasm.wasm.v1.ContractInfo:
      properties:
        admin:
          title: Admin is an optional address that can execute migrations
          type: string
        code_id:
          format: uint64
          title: CodeID is the reference to the stored Wasm code
          type: string
        created:
          description: Created Tx position when the contract was instantiated.
          properties:
            block_height:
              format: uint64
              title: BlockHeight is the block the contract was created at
              type: string
            tx_index:
              format: uint64
              title: |-
                TxIndex is a monotonic counter within the block (actual transaction index,
                or gas consumed)
              type: string
          type: object
        creator:
          title: Creator address who initially instantiated the contract
          type: string
        extension:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          type: object
        ibc_port_id:
          type: string
        label:
          description: Label is optional metadata to be stored with a contract instance.
          type: string
      title: ContractInfo stores a WASM contract instance
      type: object
      x-stoplight:
        id: xzrvj5jby1vpw
    cosmwasm.wasm.v1.Model:
      properties:
        key:
          format: byte
          title: hex-encode key to read it better (this is often ascii)
          type: string
        value:
          format: byte
          title: base64-encode raw value
          type: string
      title: Model is a struct that holds a KV pair
      type: object
      x-stoplight:
        id: uv45kkxkvwlc8
    cosmwasm.wasm.v1.Params:
      description: Params defines the set of wasm parameters.
      properties:
        code_upload_access:
          description: AccessConfig access control type.
          properties:
            addresses:
              items:
                type: string
              type: array
            permission:
              default: ACCESS_TYPE_UNSPECIFIED
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              enum:
                - ACCESS_TYPE_UNSPECIFIED
                - ACCESS_TYPE_NOBODY
                - ACCESS_TYPE_EVERYBODY
                - ACCESS_TYPE_ANY_OF_ADDRESSES
              title: AccessType permission types
              type: string
          type: object
        instantiate_default_permission:
          default: ACCESS_TYPE_UNSPECIFIED
          description: |-
            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
          enum:
            - ACCESS_TYPE_UNSPECIFIED
            - ACCESS_TYPE_NOBODY
            - ACCESS_TYPE_EVERYBODY
            - ACCESS_TYPE_ANY_OF_ADDRESSES
          title: AccessType permission types
          type: string
      type: object
      x-stoplight:
        id: d5mi0yd6zzheb
    cosmwasm.wasm.v1.QueryAllContractStateResponse:
      properties:
        models:
          items:
            properties:
              key:
                format: byte
                title: hex-encode key to read it better (this is often ascii)
                type: string
              value:
                format: byte
                title: base64-encode raw value
                type: string
            title: Model is a struct that holds a KV pair
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QueryAllContractStateResponse is the response type for the
        Query/AllContractState RPC method
      type: object
      x-stoplight:
        id: pr1dbbrbn8z9u
    cosmwasm.wasm.v1.QueryCodeResponse:
      properties:
        code_info:
          properties:
            code_id:
              format: uint64
              type: string
            creator:
              type: string
            data_hash:
              format: byte
              type: string
            instantiate_permission:
              description: AccessConfig access control type.
              properties:
                addresses:
                  items:
                    type: string
                  type: array
                permission:
                  default: ACCESS_TYPE_UNSPECIFIED
                  description: |-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  enum:
                    - ACCESS_TYPE_UNSPECIFIED
                    - ACCESS_TYPE_NOBODY
                    - ACCESS_TYPE_EVERYBODY
                    - ACCESS_TYPE_ANY_OF_ADDRESSES
                  title: AccessType permission types
                  type: string
              type: object
          title: CodeInfoResponse contains code meta data from CodeInfo
          type: object
        data:
          format: byte
          type: string
      title: QueryCodeResponse is the response type for the Query/Code RPC method
      type: object
      x-stoplight:
        id: 6ajxa4l54o0oj
    cosmwasm.wasm.v1.QueryCodesResponse:
      properties:
        code_infos:
          items:
            properties:
              code_id:
                format: uint64
                type: string
              creator:
                type: string
              data_hash:
                format: byte
                type: string
              instantiate_permission:
                description: AccessConfig access control type.
                properties:
                  addresses:
                    items:
                      type: string
                    type: array
                  permission:
                    default: ACCESS_TYPE_UNSPECIFIED
                    description: |-
                      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                    enum:
                      - ACCESS_TYPE_UNSPECIFIED
                      - ACCESS_TYPE_NOBODY
                      - ACCESS_TYPE_EVERYBODY
                      - ACCESS_TYPE_ANY_OF_ADDRESSES
                    title: AccessType permission types
                    type: string
                type: object
            title: CodeInfoResponse contains code meta data from CodeInfo
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: QueryCodesResponse is the response type for the Query/Codes RPC method
      type: object
      x-stoplight:
        id: juolalgwmhbwy
    cosmwasm.wasm.v1.QueryContractHistoryResponse:
      properties:
        entries:
          items:
            description: ContractCodeHistoryEntry metadata to a contract.
            properties:
              code_id:
                format: uint64
                title: CodeID is the reference to the stored WASM code
                type: string
              msg:
                format: byte
                type: string
              operation:
                default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                description: |-
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                enum:
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                title: ContractCodeHistoryOperationType actions that caused a code change
                type: string
              updated:
                description: Updated Tx position when the operation was executed.
                properties:
                  block_height:
                    format: uint64
                    title: BlockHeight is the block the contract was created at
                    type: string
                  tx_index:
                    format: uint64
                    title: |-
                      TxIndex is a monotonic counter within the block (actual transaction index,
                      or gas consumed)
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QueryContractHistoryResponse is the response type for the
        Query/ContractHistory RPC method
      type: object
      x-stoplight:
        id: eqhv2ulhuousi
    cosmwasm.wasm.v1.QueryContractInfoResponse:
      properties:
        address:
          title: address is the address of the contract
          type: string
        contract_info:
          properties:
            admin:
              title: Admin is an optional address that can execute migrations
              type: string
            code_id:
              format: uint64
              title: CodeID is the reference to the stored Wasm code
              type: string
            created:
              description: Created Tx position when the contract was instantiated.
              properties:
                block_height:
                  format: uint64
                  title: BlockHeight is the block the contract was created at
                  type: string
                tx_index:
                  format: uint64
                  title: |-
                    TxIndex is a monotonic counter within the block (actual transaction index,
                    or gas consumed)
                  type: string
              type: object
            creator:
              title: Creator address who initially instantiated the contract
              type: string
            extension:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              type: object
            ibc_port_id:
              type: string
            label:
              description: Label is optional metadata to be stored with a contract instance.
              type: string
          title: ContractInfo stores a WASM contract instance
          type: object
      title: |-
        QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
        method
      type: object
      x-stoplight:
        id: ocj27modq500m
    cosmwasm.wasm.v1.QueryContractsByCodeResponse:
      properties:
        contracts:
          items:
            type: string
          title: contracts are a set of contract addresses
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QueryContractsByCodeResponse is the response type for the
        Query/ContractsByCode RPC method
      type: object
      x-stoplight:
        id: ac9caa07g8ei3
    cosmwasm.wasm.v1.QueryContractsByCreatorResponse:
      description: |-
        QueryContractsByCreatorResponse is the response type for the
        Query/ContractsByCreator RPC method.
      properties:
        contract_addresses:
          items:
            type: string
          title: ContractAddresses result set
          type: array
        pagination:
          description: Pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: gr2jqw4uv359e
    cosmwasm.wasm.v1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            code_upload_access:
              description: AccessConfig access control type.
              properties:
                addresses:
                  items:
                    type: string
                  type: array
                permission:
                  default: ACCESS_TYPE_UNSPECIFIED
                  description: |-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  enum:
                    - ACCESS_TYPE_UNSPECIFIED
                    - ACCESS_TYPE_NOBODY
                    - ACCESS_TYPE_EVERYBODY
                    - ACCESS_TYPE_ANY_OF_ADDRESSES
                  title: AccessType permission types
                  type: string
              type: object
            instantiate_default_permission:
              default: ACCESS_TYPE_UNSPECIFIED
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              enum:
                - ACCESS_TYPE_UNSPECIFIED
                - ACCESS_TYPE_NOBODY
                - ACCESS_TYPE_EVERYBODY
                - ACCESS_TYPE_ANY_OF_ADDRESSES
              title: AccessType permission types
              type: string
          type: object
      type: object
      x-stoplight:
        id: 5kre8hlgqosfl
    cosmwasm.wasm.v1.QueryPinnedCodesResponse:
      properties:
        code_ids:
          items:
            format: uint64
            type: string
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: |-
        QueryPinnedCodesResponse is the response type for the
        Query/PinnedCodes RPC method
      type: object
      x-stoplight:
        id: fa5aea259vm6a
    cosmwasm.wasm.v1.QueryRawContractStateResponse:
      properties:
        data:
          format: byte
          title: Data contains the raw store data
          type: string
      title: |-
        QueryRawContractStateResponse is the response type for the
        Query/RawContractState RPC method
      type: object
      x-stoplight:
        id: drpfdkvv70j9q
    cosmwasm.wasm.v1.QuerySmartContractStateResponse:
      properties:
        data:
          format: byte
          title: Data contains the json data returned from the smart contract
          type: string
      title: |-
        QuerySmartContractStateResponse is the response type for the
        Query/SmartContractState RPC method
      type: object
      x-stoplight:
        id: a9hfxrrua9k19
    google.protobuf.Any:
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        type_url:
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified type.
          format: byte
          type: string
      type: object
      x-stoplight:
        id: f094wsd8wiwo7
    grpc.gateway.runtime.Error:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            properties:
              type_url:
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above specified type.
                format: byte
                type: string
            type: object
          type: array
        error:
          type: string
        message:
          type: string
      type: object
      x-stoplight:
        id: n4zkv4c30gqed
    ibc.applications.fee.v1.Fee:
      properties:
        ack_fee:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the packet acknowledgement fee
          type: array
        recv_fee:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the packet receive fee
          type: array
        timeout_fee:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the packet timeout fee
          type: array
      title: 'Fee defines the ICS29 receive, acknowledgement and timeout fees'
      type: object
      x-stoplight:
        id: 0wv1yscv2qv8b
    ibc.applications.fee.v1.FeeEnabledChannel:
      properties:
        channel_id:
          title: unique channel identifier
          type: string
        port_id:
          title: unique port identifier
          type: string
      title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
      type: object
      x-stoplight:
        id: q6vo3byh0ty07
    ibc.applications.fee.v1.IdentifiedPacketFees:
      properties:
        packet_fees:
          items:
            properties:
              fee:
                properties:
                  ack_fee:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the packet acknowledgement fee
                    type: array
                  recv_fee:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the packet receive fee
                    type: array
                  timeout_fee:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: the packet timeout fee
                    type: array
                title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                type: object
              refund_address:
                title: the refund address for unspent fees
                type: string
              relayers:
                items:
                  type: string
                title: optional list of relayers permitted to receive fees
                type: array
            title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
            type: object
          title: list of packet fees
          type: array
        packet_id:
          properties:
            channel_id:
              title: channel unique identifier
              type: string
            port_id:
              title: channel port identifier
              type: string
            sequence:
              format: uint64
              title: packet sequence
              type: string
          title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
          type: object
      title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
      type: object
      x-stoplight:
        id: mk6td1qae4z6b
    ibc.applications.fee.v1.PacketFee:
      properties:
        fee:
          properties:
            ack_fee:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: the packet acknowledgement fee
              type: array
            recv_fee:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: the packet receive fee
              type: array
            timeout_fee:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: the packet timeout fee
              type: array
          title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
          type: object
        refund_address:
          title: the refund address for unspent fees
          type: string
        relayers:
          items:
            type: string
          title: optional list of relayers permitted to receive fees
          type: array
      title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
      type: object
      x-stoplight:
        id: 3otzu80kib68y
    ibc.applications.fee.v1.QueryCounterpartyPayeeResponse:
      properties:
        counterparty_payee:
          title: the counterparty payee address used to compensate forward relaying
          type: string
      title: QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee rpc
      type: object
      x-stoplight:
        id: n2ue78whqn8uz
    ibc.applications.fee.v1.QueryFeeEnabledChannelResponse:
      properties:
        fee_enabled:
          title: boolean flag representing the fee enabled channel status
          type: boolean
      title: QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel rpc
      type: object
      x-stoplight:
        id: nyp4jlijbopfn
    ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse:
      properties:
        fee_enabled_channels:
          items:
            properties:
              channel_id:
                title: unique channel identifier
                type: string
              port_id:
                title: unique port identifier
                type: string
            title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
            type: object
          title: list of fee enabled channels
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels rpc
      type: object
      x-stoplight:
        id: rm5udpqbcbobs
    ibc.applications.fee.v1.QueryIncentivizedPacketResponse:
      properties:
        incentivized_packet:
          properties:
            packet_fees:
              items:
                properties:
                  fee:
                    properties:
                      ack_fee:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet acknowledgement fee
                        type: array
                      recv_fee:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet receive fee
                        type: array
                      timeout_fee:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet timeout fee
                        type: array
                    title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                    type: object
                  refund_address:
                    title: the refund address for unspent fees
                    type: string
                  relayers:
                    items:
                      type: string
                    title: optional list of relayers permitted to receive fees
                    type: array
                title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                type: object
              title: list of packet fees
              type: array
            packet_id:
              properties:
                channel_id:
                  title: channel unique identifier
                  type: string
                port_id:
                  title: channel port identifier
                  type: string
                sequence:
                  format: uint64
                  title: packet sequence
                  type: string
              title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
              type: object
          title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
          type: object
      title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc
      type: object
      x-stoplight:
        id: jmdvuxus3md57
    ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse:
      properties:
        incentivized_packets:
          items:
            properties:
              packet_fees:
                items:
                  properties:
                    fee:
                      properties:
                        ack_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet acknowledgement fee
                          type: array
                        recv_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet receive fee
                          type: array
                        timeout_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet timeout fee
                          type: array
                      title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                      type: object
                    refund_address:
                      title: the refund address for unspent fees
                      type: string
                    relayers:
                      items:
                        type: string
                      title: optional list of relayers permitted to receive fees
                      type: array
                  title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                  type: object
                title: list of packet fees
                type: array
              packet_id:
                properties:
                  channel_id:
                    title: channel unique identifier
                    type: string
                  port_id:
                    title: channel port identifier
                    type: string
                  sequence:
                    format: uint64
                    title: packet sequence
                    type: string
                title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
                type: object
            title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
            type: object
          title: Map of all incentivized_packets
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC
      type: object
      x-stoplight:
        id: yegv6pdywe92r
    ibc.applications.fee.v1.QueryIncentivizedPacketsResponse:
      properties:
        incentivized_packets:
          items:
            properties:
              packet_fees:
                items:
                  properties:
                    fee:
                      properties:
                        ack_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet acknowledgement fee
                          type: array
                        recv_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet receive fee
                          type: array
                        timeout_fee:
                          items:
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: the packet timeout fee
                          type: array
                      title: 'fee encapsulates the recv, ack and timeout fees associated with an IBC packet'
                      type: object
                    refund_address:
                      title: the refund address for unspent fees
                      type: string
                    relayers:
                      items:
                        type: string
                      title: optional list of relayers permitted to receive fees
                      type: array
                  title: 'PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers'
                  type: object
                title: list of packet fees
                type: array
              packet_id:
                properties:
                  channel_id:
                    title: channel unique identifier
                    type: string
                  port_id:
                    title: channel port identifier
                    type: string
                  sequence:
                    format: uint64
                    title: packet sequence
                    type: string
                title: 'unique packet identifier comprised of the channel ID, port ID and sequence'
                type: object
            title: IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
            type: object
          title: list of identified fees for incentivized packets
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets rpc
      type: object
      x-stoplight:
        id: nus1pz8lvsg84
    ibc.applications.fee.v1.QueryPayeeResponse:
      properties:
        payee_address:
          title: the payee address to which packet fees are paid out
          type: string
      title: QueryPayeeResponse defines the response type for the Payee rpc
      type: object
      x-stoplight:
        id: j181pkvkr3454
    ibc.applications.fee.v1.QueryTotalAckFeesResponse:
      properties:
        ack_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the total packet acknowledgement fees
          type: array
      title: QueryTotalAckFeesResponse defines the response type for the TotalAckFees rpc
      type: object
      x-stoplight:
        id: aa5g7c5hylob2
    ibc.applications.fee.v1.QueryTotalRecvFeesResponse:
      properties:
        recv_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the total packet receive fees
          type: array
      title: QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees rpc
      type: object
      x-stoplight:
        id: ajp10rpjs1684
    ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse:
      properties:
        timeout_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: the total packet timeout fees
          type: array
      title: QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees rpc
      type: object
      x-stoplight:
        id: w502o2xsevkju
    ibc.applications.interchain_accounts.controller.v1.Params:
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the controller submodule.
      properties:
        controller_enabled:
          description: controller_enabled enables or disables the controller submodule.
          type: boolean
      type: object
      x-stoplight:
        id: okp4njok9g0gd
    ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
      description: QueryInterchainAccountResponse the response type for the Query/InterchainAccount RPC method.
      properties:
        address:
          type: string
      type: object
      x-stoplight:
        id: uu84714u8r5tq
    ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            controller_enabled:
              description: controller_enabled enables or disables the controller submodule.
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: 75v44wdjo40lv
    ibc.applications.interchain_accounts.host.v1.Params:
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the host submodule.
      properties:
        allow_messages:
          description: allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
          items:
            type: string
          type: array
        host_enabled:
          description: host_enabled enables or disables the host submodule.
          type: boolean
      type: object
      x-stoplight:
        id: tp3jypviwp07g
    ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            allow_messages:
              description: allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
              items:
                type: string
              type: array
            host_enabled:
              description: host_enabled enables or disables the host submodule.
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: 3gesa3zxde12m
    ibc.applications.transfer.v1.DenomTrace:
      description: |-
        DenomTrace contains the base denomination for ICS20 fungible tokens and the
        source tracing information path.
      properties:
        base_denom:
          description: base denomination of the relayed fungible token.
          type: string
        path:
          description: |-
            path defines the chain of port/channel identifiers used for tracing the
            source of the fungible token.
          type: string
      type: object
      x-stoplight:
        id: n5w58e561a6wp
    ibc.applications.transfer.v1.Params:
      description: |-
        Params defines the set of IBC transfer parameters.
        NOTE: To prevent a single token from being transferred, set the
        TransfersEnabled parameter to true and then set the bank module's SendEnabled
        parameter for the denomination to false.
      properties:
        receive_enabled:
          description: |-
            receive_enabled enables or disables all cross-chain token transfers to this
            chain.
          type: boolean
        send_enabled:
          description: |-
            send_enabled enables or disables all cross-chain token transfers from this
            chain.
          type: boolean
      type: object
      x-stoplight:
        id: 5r5299n7pmyxu
    ibc.applications.transfer.v1.QueryDenomHashResponse:
      description: |-
        QueryDenomHashResponse is the response type for the Query/DenomHash RPC
        method.
      properties:
        hash:
          description: hash (in hex format) of the denomination trace information.
          type: string
      type: object
      x-stoplight:
        id: wghw0wuqjgjw9
    ibc.applications.transfer.v1.QueryDenomTraceResponse:
      description: |-
        QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
        method.
      properties:
        denom_trace:
          description: |-
            DenomTrace contains the base denomination for ICS20 fungible tokens and the
            source tracing information path.
          properties:
            base_denom:
              description: base denomination of the relayed fungible token.
              type: string
            path:
              description: |-
                path defines the chain of port/channel identifiers used for tracing the
                source of the fungible token.
              type: string
          type: object
      type: object
      x-stoplight:
        id: s6mm469hsz24x
    ibc.applications.transfer.v1.QueryDenomTracesResponse:
      description: |-
        QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
        method.
      properties:
        denom_traces:
          description: denom_traces returns all denominations trace information.
          items:
            description: |-
              DenomTrace contains the base denomination for ICS20 fungible tokens and the
              source tracing information path.
            properties:
              base_denom:
                description: base denomination of the relayed fungible token.
                type: string
              path:
                description: |-
                  path defines the chain of port/channel identifiers used for tracing the
                  source of the fungible token.
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: 3tfgnb31l5eru
    ibc.applications.transfer.v1.QueryEscrowAddressResponse:
      description: QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method.
      properties:
        escrow_address:
          title: the escrow account address
          type: string
      type: object
      x-stoplight:
        id: 6hnp0as3j20rw
    ibc.applications.transfer.v1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            receive_enabled:
              description: |-
                receive_enabled enables or disables all cross-chain token transfers to this
                chain.
              type: boolean
            send_enabled:
              description: |-
                send_enabled enables or disables all cross-chain token transfers from this
                chain.
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: tyxf33ni2y4j1
    ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
      description: QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method.
      properties:
        amount:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: jcnxxleug2zif
    ibc.core.channel.v1.Channel:
      description: |-
        Channel defines pipeline for exactly-once packet delivery between specific
        modules on separate blockchains, which has at least one end capable of
        sending packets and one end capable of receiving packets.
      properties:
        connection_hops:
          items:
            type: string
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
        counterparty:
          properties:
            channel_id:
              title: channel end on the counterparty chain
              type: string
            port_id:
              description: port on the counterparty chain which owns the other end of the channel.
              type: string
          title: counterparty channel end
          type: object
        ordering:
          default: ORDER_NONE_UNSPECIFIED
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
          title: whether the channel is ordered or unordered
          type: string
        state:
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
             - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
             - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            - STATE_FLUSHING
            - STATE_FLUSHCOMPLETE
          title: current state of the channel end
          type: string
        upgrade_sequence:
          format: uint64
          title: |-
            upgrade sequence indicates the latest upgrade attempt performed by this channel
            the value of 0 indicates the channel has never been upgraded
          type: string
        version:
          title: 'opaque channel version, which is agreed upon during the handshake'
          type: string
      type: object
      x-stoplight:
        id: 33oj86oc0ikb4
    ibc.core.channel.v1.Counterparty:
      properties:
        channel_id:
          title: channel end on the counterparty chain
          type: string
        port_id:
          description: port on the counterparty chain which owns the other end of the channel.
          type: string
      title: Counterparty defines a channel end counterparty
      type: object
      x-stoplight:
        id: puy1kvbrq72ep
    ibc.core.channel.v1.ErrorReceipt:
      description: |-
        ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the
        upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the
        next sequence.
      properties:
        message:
          title: the error message detailing the cause of failure
          type: string
        sequence:
          format: uint64
          title: the channel upgrade sequence
          type: string
      type: object
      x-stoplight:
        id: dj7nkph0pay7a
    ibc.core.channel.v1.IdentifiedChannel:
      description: |-
        IdentifiedChannel defines a channel with additional port and channel
        identifier fields.
      properties:
        channel_id:
          title: channel identifier
          type: string
        connection_hops:
          items:
            type: string
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
        counterparty:
          properties:
            channel_id:
              title: channel end on the counterparty chain
              type: string
            port_id:
              description: port on the counterparty chain which owns the other end of the channel.
              type: string
          title: counterparty channel end
          type: object
        ordering:
          default: ORDER_NONE_UNSPECIFIED
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
          title: whether the channel is ordered or unordered
          type: string
        port_id:
          title: port identifier
          type: string
        state:
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
             - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
             - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            - STATE_FLUSHING
            - STATE_FLUSHCOMPLETE
          title: current state of the channel end
          type: string
        upgrade_sequence:
          format: uint64
          title: |-
            upgrade sequence indicates the latest upgrade attempt performed by this channel
            the value of 0 indicates the channel has never been upgraded
          type: string
        version:
          title: 'opaque channel version, which is agreed upon during the handshake'
          type: string
      type: object
      x-stoplight:
        id: 8jnawrjks4zrt
    ibc.core.channel.v1.Order:
      default: ORDER_NONE_UNSPECIFIED
      description: |-
        - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
        which they were sent.
         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      enum:
        - ORDER_NONE_UNSPECIFIED
        - ORDER_UNORDERED
        - ORDER_ORDERED
      title: Order defines if a channel is ORDERED or UNORDERED
      type: string
      x-stoplight:
        id: f2pbnn301orfc
    ibc.core.channel.v1.PacketId:
      properties:
        channel_id:
          title: channel unique identifier
          type: string
        port_id:
          title: channel port identifier
          type: string
        sequence:
          format: uint64
          title: packet sequence
          type: string
      title: |-
        PacketId is an identifer for a unique Packet
        Source chains refer to packets by source port/channel
        Destination chains refer to packets by destination port/channel
      type: object
      x-stoplight:
        id: fa75p3s7l4ith
    ibc.core.channel.v1.PacketState:
      description: |-
        PacketState defines the generic type necessary to retrieve and store
        packet commitments, acknowledgements, and receipts.
        Caller is responsible for knowing the context necessary to interpret this
        state as a commitment, acknowledgement, or a receipt.
      properties:
        channel_id:
          description: channel unique identifier.
          type: string
        data:
          description: embedded data that represents packet state.
          format: byte
          type: string
        port_id:
          description: channel port identifier.
          type: string
        sequence:
          description: packet sequence.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: 4xuhmvgeqbq02
    ibc.core.channel.v1.Params:
      description: Params defines the set of IBC channel parameters.
      properties:
        upgrade_timeout:
          description: |-
            Timeout defines an execution deadline structure for 04-channel handlers.
            This includes packet lifecycle handlers as well as the upgrade handshake handlers.
            A valid Timeout contains either one or both of a timestamp and block height (sequence).
          properties:
            height:
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: block height after which the packet or upgrade times out
              type: object
            timestamp:
              format: uint64
              title: block timestamp (in nanoseconds) after which the packet or upgrade times out
              type: string
          type: object
      type: object
      x-stoplight:
        id: sx91yanoky2sk
    ibc.core.channel.v1.QueryChannelClientStateResponse:
      properties:
        identified_client_state:
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              title: client state
              type: object
          title: client state associated with the channel
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      x-stoplight:
        id: 5ex3izcpatemr
    ibc.core.channel.v1.QueryChannelConsensusStateResponse:
      properties:
        client_id:
          title: client ID associated with the consensus state
          type: string
        consensus_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: consensus state associated with the channel
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      x-stoplight:
        id: 15tjgnx5le94b
    ibc.core.channel.v1.QueryChannelParamsResponse:
      description: QueryChannelParamsResponse is the response type for the Query/ChannelParams RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            upgrade_timeout:
              description: |-
                Timeout defines an execution deadline structure for 04-channel handlers.
                This includes packet lifecycle handlers as well as the upgrade handshake handlers.
                A valid Timeout contains either one or both of a timestamp and block height (sequence).
              properties:
                height:
                  description: |-
                    Normally the RevisionHeight is incremented at each height while keeping
                    RevisionNumber the same. However some consensus algorithms may choose to
                    reset the height in certain conditions e.g. hard forks, state-machine
                    breaking changes In these cases, the RevisionNumber is incremented so that
                    height continues to be monitonically increasing even as the RevisionHeight
                    gets reset
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet or upgrade times out
                  type: object
                timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet or upgrade times out
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: fjeu4wy8bjh8y
    ibc.core.channel.v1.QueryChannelResponse:
      description: |-
        QueryChannelResponse is the response type for the Query/Channel RPC method.
        Besides the Channel end, it includes a proof and the height from which the
        proof was retrieved.
      properties:
        channel:
          description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
          properties:
            connection_hops:
              items:
                type: string
              title: |-
                list of connection identifiers, in order, along which packets sent on
                this channel will travel
              type: array
            counterparty:
              properties:
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
                port_id:
                  description: port on the counterparty chain which owns the other end of the channel.
                  type: string
              title: counterparty channel end
              type: object
            ordering:
              default: ORDER_NONE_UNSPECIFIED
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              title: whether the channel is ordered or unordered
              type: string
            state:
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: |-
                State defines if a channel is in one of the following states:
                CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
                 - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                 - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
                - STATE_FLUSHING
                - STATE_FLUSHCOMPLETE
              title: current state of the channel end
              type: string
            upgrade_sequence:
              format: uint64
              title: |-
                upgrade sequence indicates the latest upgrade attempt performed by this channel
                the value of 0 indicates the channel has never been upgraded
              type: string
            version:
              title: 'opaque channel version, which is agreed upon during the handshake'
              type: string
          title: channel associated with the request identifiers
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      type: object
      x-stoplight:
        id: 0nv3yl0jh1krz
    ibc.core.channel.v1.QueryChannelsResponse:
      description: QueryChannelsResponse is the response type for the Query/Channels RPC method.
      properties:
        channels:
          description: list of stored channels of the chain.
          items:
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
            properties:
              channel_id:
                title: channel identifier
                type: string
              connection_hops:
                items:
                  type: string
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
              counterparty:
                properties:
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
                  port_id:
                    description: port on the counterparty chain which owns the other end of the channel.
                    type: string
                title: counterparty channel end
                type: object
              ordering:
                default: ORDER_NONE_UNSPECIFIED
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                title: whether the channel is ordered or unordered
                type: string
              port_id:
                title: port identifier
                type: string
              state:
                default: STATE_UNINITIALIZED_UNSPECIFIED
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                   - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                   - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                  - STATE_FLUSHING
                  - STATE_FLUSHCOMPLETE
                title: current state of the channel end
                type: string
              upgrade_sequence:
                format: uint64
                title: |-
                  upgrade sequence indicates the latest upgrade attempt performed by this channel
                  the value of 0 indicates the channel has never been upgraded
                type: string
              version:
                title: 'opaque channel version, which is agreed upon during the handshake'
                type: string
            type: object
          type: array
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      type: object
      x-stoplight:
        id: o3vatraxler2g
    ibc.core.channel.v1.QueryConnectionChannelsResponse:
      properties:
        channels:
          description: list of channels associated with a connection.
          items:
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
            properties:
              channel_id:
                title: channel identifier
                type: string
              connection_hops:
                items:
                  type: string
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
              counterparty:
                properties:
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
                  port_id:
                    description: port on the counterparty chain which owns the other end of the channel.
                    type: string
                title: counterparty channel end
                type: object
              ordering:
                default: ORDER_NONE_UNSPECIFIED
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                title: whether the channel is ordered or unordered
                type: string
              port_id:
                title: port identifier
                type: string
              state:
                default: STATE_UNINITIALIZED_UNSPECIFIED
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                   - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
                   - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
                enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                  - STATE_FLUSHING
                  - STATE_FLUSHCOMPLETE
                title: current state of the channel end
                type: string
              upgrade_sequence:
                format: uint64
                title: |-
                  upgrade sequence indicates the latest upgrade attempt performed by this channel
                  the value of 0 indicates the channel has never been upgraded
                type: string
              version:
                title: 'opaque channel version, which is agreed upon during the handshake'
                type: string
            type: object
          type: array
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      title: |-
        QueryConnectionChannelsResponse is the Response type for the
        Query/QueryConnectionChannels RPC method
      type: object
      x-stoplight:
        id: ek5jad1rfe2wr
    ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
      properties:
        next_sequence_receive:
          format: uint64
          title: next sequence receive number
          type: string
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QuerySequenceResponse is the response type for the
        Query/QueryNextSequenceReceiveResponse RPC method
      type: object
      x-stoplight:
        id: zej21ur61wuxg
    ibc.core.channel.v1.QueryNextSequenceSendResponse:
      properties:
        next_sequence_send:
          format: uint64
          title: next sequence send number
          type: string
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryNextSequenceSendResponse is the request type for the
        Query/QueryNextSequenceSend RPC method
      type: object
      x-stoplight:
        id: hxym7dnnmyhlt
    ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
      properties:
        acknowledgement:
          format: byte
          title: packet associated with the request fields
          type: string
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryPacketAcknowledgementResponse defines the client query response for a
        packet which also includes a proof and the height from which the
        proof was retrieved
      type: object
      x-stoplight:
        id: jpulv4yofaequ
    ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
      properties:
        acknowledgements:
          items:
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
            properties:
              channel_id:
                description: channel unique identifier.
                type: string
              data:
                description: embedded data that represents packet state.
                format: byte
                type: string
              port_id:
                description: channel port identifier.
                type: string
              sequence:
                description: packet sequence.
                format: uint64
                type: string
            type: object
          type: array
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      title: |-
        QueryPacketAcknowledgemetsResponse is the request type for the
        Query/QueryPacketAcknowledgements RPC method
      type: object
      x-stoplight:
        id: x8rhv3pbwmq0f
    ibc.core.channel.v1.QueryPacketCommitmentResponse:
      properties:
        commitment:
          format: byte
          title: packet associated with the request fields
          type: string
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryPacketCommitmentResponse defines the client query response for a packet
        which also includes a proof and the height from which the proof was
        retrieved
      type: object
      x-stoplight:
        id: c8040uzp4hsgs
    ibc.core.channel.v1.QueryPacketCommitmentsResponse:
      properties:
        commitments:
          items:
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
            properties:
              channel_id:
                description: channel unique identifier.
                type: string
              data:
                description: embedded data that represents packet state.
                format: byte
                type: string
              port_id:
                description: channel port identifier.
                type: string
              sequence:
                description: packet sequence.
                format: uint64
                type: string
            type: object
          type: array
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      title: |-
        QueryPacketCommitmentsResponse is the request type for the
        Query/QueryPacketCommitments RPC method
      type: object
      x-stoplight:
        id: enx27zk2gt5o5
    ibc.core.channel.v1.QueryPacketReceiptResponse:
      properties:
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
        received:
          title: success flag for if receipt exists
          type: boolean
      title: |-
        QueryPacketReceiptResponse defines the client query response for a packet
        receipt which also includes a proof, and the height from which the proof was
        retrieved
      type: object
      x-stoplight:
        id: 2scxmruatqizy
    ibc.core.channel.v1.QueryUnreceivedAcksResponse:
      properties:
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        sequences:
          items:
            format: uint64
            type: string
          title: list of unreceived acknowledgement sequences
          type: array
      title: |-
        QueryUnreceivedAcksResponse is the response type for the
        Query/UnreceivedAcks RPC method
      type: object
      x-stoplight:
        id: nxhdxjlzm4c8i
    ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
      properties:
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        sequences:
          items:
            format: uint64
            type: string
          title: list of unreceived packet sequences
          type: array
      title: |-
        QueryUnreceivedPacketsResponse is the response type for the
        Query/UnreceivedPacketCommitments RPC method
      type: object
      x-stoplight:
        id: bgk1f6a6cuy5a
    ibc.core.channel.v1.QueryUpgradeErrorResponse:
      properties:
        error_receipt:
          description: |-
            ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the
            upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the
            next sequence.
          properties:
            message:
              title: the error message detailing the cause of failure
              type: string
            sequence:
              format: uint64
              title: the channel upgrade sequence
              type: string
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: QueryUpgradeErrorResponse is the response type for the Query/QueryUpgradeError RPC method
      type: object
      x-stoplight:
        id: gxwypzohkmmur
    ibc.core.channel.v1.QueryUpgradeResponse:
      properties:
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
        upgrade:
          description: |-
            Upgrade is a verifiable type which contains the relevant information
            for an attempted upgrade. It provides the proposed changes to the channel
            end, the timeout for this upgrade attempt and the next packet sequence
            which allows the counterparty to efficiently know the highest sequence it has received.
            The next sequence send is used for pruning and upgrading from unordered to ordered channels.
          properties:
            fields:
              description: |-
                UpgradeFields are the fields in a channel end which may be changed
                during a channel upgrade.
              properties:
                connection_hops:
                  items:
                    type: string
                  type: array
                ordering:
                  default: ORDER_NONE_UNSPECIFIED
                  description: |-
                    - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                     - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                    which they were sent.
                     - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                  enum:
                    - ORDER_NONE_UNSPECIFIED
                    - ORDER_UNORDERED
                    - ORDER_ORDERED
                  title: Order defines if a channel is ORDERED or UNORDERED
                  type: string
                version:
                  type: string
              type: object
            next_sequence_send:
              format: uint64
              type: string
            timeout:
              description: |-
                Timeout defines an execution deadline structure for 04-channel handlers.
                This includes packet lifecycle handlers as well as the upgrade handshake handlers.
                A valid Timeout contains either one or both of a timestamp and block height (sequence).
              properties:
                height:
                  description: |-
                    Normally the RevisionHeight is incremented at each height while keeping
                    RevisionNumber the same. However some consensus algorithms may choose to
                    reset the height in certain conditions e.g. hard forks, state-machine
                    breaking changes In these cases, the RevisionNumber is incremented so that
                    height continues to be monitonically increasing even as the RevisionHeight
                    gets reset
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet or upgrade times out
                  type: object
                timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet or upgrade times out
                  type: string
              type: object
          type: object
      title: QueryUpgradeResponse is the response type for the QueryUpgradeResponse RPC method
      type: object
      x-stoplight:
        id: 0ofzzdek7rrku
    ibc.core.channel.v1.State:
      default: STATE_UNINITIALIZED_UNSPECIFIED
      description: |-
        State defines if a channel is in one of the following states:
        CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A channel has just started the opening handshake.
         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
         - STATE_OPEN: A channel has completed the handshake. Open channels are
        ready to send and receive packets.
         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
        packets.
         - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
         - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
      enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        - STATE_CLOSED
        - STATE_FLUSHING
        - STATE_FLUSHCOMPLETE
      type: string
      x-stoplight:
        id: kmw4hh5xx17ah
    ibc.core.channel.v1.Timeout:
      description: |-
        Timeout defines an execution deadline structure for 04-channel handlers.
        This includes packet lifecycle handlers as well as the upgrade handshake handlers.
        A valid Timeout contains either one or both of a timestamp and block height (sequence).
      properties:
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: block height after which the packet or upgrade times out
          type: object
        timestamp:
          format: uint64
          title: block timestamp (in nanoseconds) after which the packet or upgrade times out
          type: string
      type: object
      x-stoplight:
        id: x2v1g1vbgjhsk
    ibc.core.channel.v1.Upgrade:
      description: |-
        Upgrade is a verifiable type which contains the relevant information
        for an attempted upgrade. It provides the proposed changes to the channel
        end, the timeout for this upgrade attempt and the next packet sequence
        which allows the counterparty to efficiently know the highest sequence it has received.
        The next sequence send is used for pruning and upgrading from unordered to ordered channels.
      properties:
        fields:
          description: |-
            UpgradeFields are the fields in a channel end which may be changed
            during a channel upgrade.
          properties:
            connection_hops:
              items:
                type: string
              type: array
            ordering:
              default: ORDER_NONE_UNSPECIFIED
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              title: Order defines if a channel is ORDERED or UNORDERED
              type: string
            version:
              type: string
          type: object
        next_sequence_send:
          format: uint64
          type: string
        timeout:
          description: |-
            Timeout defines an execution deadline structure for 04-channel handlers.
            This includes packet lifecycle handlers as well as the upgrade handshake handlers.
            A valid Timeout contains either one or both of a timestamp and block height (sequence).
          properties:
            height:
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: block height after which the packet or upgrade times out
              type: object
            timestamp:
              format: uint64
              title: block timestamp (in nanoseconds) after which the packet or upgrade times out
              type: string
          type: object
      type: object
      x-stoplight:
        id: fvgd3dl6fgd1w
    ibc.core.channel.v1.UpgradeFields:
      description: |-
        UpgradeFields are the fields in a channel end which may be changed
        during a channel upgrade.
      properties:
        connection_hops:
          items:
            type: string
          type: array
        ordering:
          default: ORDER_NONE_UNSPECIFIED
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
          title: Order defines if a channel is ORDERED or UNORDERED
          type: string
        version:
          type: string
      type: object
      x-stoplight:
        id: kzp36orn3tt1f
    ibc.core.client.v1.ConsensusStateWithHeight:
      description: |-
        ConsensusStateWithHeight defines a consensus state with an additional height
        field.
      properties:
        consensus_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: consensus state
          type: object
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: consensus state height
          type: object
      type: object
      x-stoplight:
        id: 8f9paoksz1tmh
    ibc.core.client.v1.Height:
      description: |-
        Normally the RevisionHeight is incremented at each height while keeping
        RevisionNumber the same. However some consensus algorithms may choose to
        reset the height in certain conditions e.g. hard forks, state-machine
        breaking changes In these cases, the RevisionNumber is incremented so that
        height continues to be monitonically increasing even as the RevisionHeight
        gets reset
      properties:
        revision_height:
          format: uint64
          title: the height within the given revision
          type: string
        revision_number:
          format: uint64
          title: the revision that the client is currently on
          type: string
      title: |-
        Height is a monotonically increasing data type
        that can be compared against another Height for the purposes of updating and
        freezing clients
      type: object
      x-stoplight:
        id: bzbdvl3wh92l0
    ibc.core.client.v1.IdentifiedClientState:
      description: |-
        IdentifiedClientState defines a client state with an additional client
        identifier field.
      properties:
        client_id:
          title: client identifier
          type: string
        client_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: client state
          type: object
      type: object
      x-stoplight:
        id: gedp8696vhbu3
    ibc.core.client.v1.Params:
      description: Params defines the set of IBC light client parameters.
      properties:
        allowed_clients:
          description: |-
            allowed_clients defines the list of allowed client state types which can be created
            and interacted with. If a client type is removed from the allowed clients list, usage
            of this client will be disabled until it is added again to the list.
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: 3aft2dia98vew
    ibc.core.client.v1.QueryClientParamsResponse:
      description: |-
        QueryClientParamsResponse is the response type for the Query/ClientParams RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            allowed_clients:
              description: |-
                allowed_clients defines the list of allowed client state types which can be created
                and interacted with. If a client type is removed from the allowed clients list, usage
                of this client will be disabled until it is added again to the list.
              items:
                type: string
              type: array
          type: object
      type: object
      x-stoplight:
        id: tb3sqd5qjf3eh
    ibc.core.client.v1.QueryClientStateResponse:
      description: |-
        QueryClientStateResponse is the response type for the Query/ClientState RPC
        method. Besides the client state, it includes a proof and the height from
        which the proof was retrieved.
      properties:
        client_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: client state associated with the request identifier
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      type: object
      x-stoplight:
        id: 6u4rwx9e0rc7y
    ibc.core.client.v1.QueryClientStatesResponse:
      description: |-
        QueryClientStatesResponse is the response type for the Query/ClientStates RPC
        method.
      properties:
        client_states:
          description: list of stored ClientStates of the chain.
          items:
            description: |-
              IdentifiedClientState defines a client state with an additional client
              identifier field.
            properties:
              client_id:
                title: client identifier
                type: string
              client_state:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                title: client state
                type: object
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      type: object
      x-stoplight:
        id: ncd3dm3pvdio5
    ibc.core.client.v1.QueryClientStatusResponse:
      description: |-
        QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
        method. It returns the current status of the IBC client.
      properties:
        status:
          type: string
      type: object
      x-stoplight:
        id: dahv1i8f8a5ol
    ibc.core.client.v1.QueryConsensusStateHeightsResponse:
      properties:
        consensus_state_heights:
          items:
            description: |-
              Normally the RevisionHeight is incremented at each height while keeping
              RevisionNumber the same. However some consensus algorithms may choose to
              reset the height in certain conditions e.g. hard forks, state-machine
              breaking changes In these cases, the RevisionNumber is incremented so that
              height continues to be monitonically increasing even as the RevisionHeight
              gets reset
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: |-
              Height is a monotonically increasing data type
              that can be compared against another Height for the purposes of updating and
              freezing clients
            type: object
          title: consensus state heights
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      title: |-
        QueryConsensusStateHeightsResponse is the response type for the
        Query/ConsensusStateHeights RPC method
      type: object
      x-stoplight:
        id: 41ea9fg63dfch
    ibc.core.client.v1.QueryConsensusStateResponse:
      properties:
        consensus_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: consensus state associated with the client identifier at the given height
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
      title: |-
        QueryConsensusStateResponse is the response type for the Query/ConsensusState
        RPC method
      type: object
      x-stoplight:
        id: r5w5x51crmc59
    ibc.core.client.v1.QueryConsensusStatesResponse:
      properties:
        consensus_states:
          items:
            description: |-
              ConsensusStateWithHeight defines a consensus state with an additional height
              field.
            properties:
              consensus_state:
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }
                      // or ...
                      if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                        foo = any.unpack(Foo.getDefaultInstance());
                      }

                  Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                  Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".

                  JSON

                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
                properties:
                  type_url:
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: byte
                    type: string
                title: consensus state
                type: object
              height:
                description: |-
                  Normally the RevisionHeight is incremented at each height while keeping
                  RevisionNumber the same. However some consensus algorithms may choose to
                  reset the height in certain conditions e.g. hard forks, state-machine
                  breaking changes In these cases, the RevisionNumber is incremented so that
                  height continues to be monitonically increasing even as the RevisionHeight
                  gets reset
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: consensus state height
                type: object
            type: object
          title: consensus states associated with the identifier
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      title: |-
        QueryConsensusStatesResponse is the response type for the
        Query/ConsensusStates RPC method
      type: object
      x-stoplight:
        id: c38ownqf58x66
    ibc.core.client.v1.QueryUpgradedClientStateResponse:
      description: |-
        QueryUpgradedClientStateResponse is the response type for the
        Query/UpgradedClientState RPC method.
      properties:
        upgraded_client_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: client state associated with the request identifier
          type: object
      type: object
      x-stoplight:
        id: 4uijctu68g2gw
    ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState RPC method.
      properties:
        upgraded_consensus_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: Consensus state associated with the request identifier
          type: object
      type: object
      x-stoplight:
        id: 6fxizuhfq7yjk
    ibc.core.client.v1.QueryVerifyMembershipRequest:
      properties:
        block_delay:
          format: uint64
          title: optional block delay
          type: string
        client_id:
          description: client unique identifier.
          type: string
        merkle_path:
          description: the commitment key path.
          properties:
            key_path:
              items:
                type: string
              type: array
          title: |-
            MerklePath is the path used to verify commitment proofs, which can be an
            arbitrary structured object (defined by a commitment type).
            MerklePath is represented from root-to-leaf
          type: object
        proof:
          description: the proof to be verified by the client.
          format: byte
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
        time_delay:
          format: uint64
          title: optional time delay
          type: string
        value:
          description: the value which is proven.
          format: byte
          type: string
      title: QueryVerifyMembershipRequest is the request type for the Query/VerifyMembership RPC method
      type: object
      x-stoplight:
        id: fqekzm66dtxne
    ibc.core.client.v1.QueryVerifyMembershipResponse:
      properties:
        success:
          description: boolean indicating success or failure of proof verification.
          type: boolean
      title: QueryVerifyMembershipResponse is the response type for the Query/VerifyMembership RPC method
      type: object
      x-stoplight:
        id: yhm2w4wwu4btk
    ibc.core.commitment.v1.MerklePath:
      properties:
        key_path:
          items:
            type: string
          type: array
      title: |-
        MerklePath is the path used to verify commitment proofs, which can be an
        arbitrary structured object (defined by a commitment type).
        MerklePath is represented from root-to-leaf
      type: object
      x-stoplight:
        id: lwkydxnvz1p5j
    ibc.core.commitment.v1.MerklePrefix:
      properties:
        key_prefix:
          format: byte
          type: string
      title: |-
        MerklePrefix is merkle path prefixed to the key.
        The constructed key from the Path and the key will be append(Path.KeyPath,
        append(Path.KeyPrefix, key...))
      type: object
      x-stoplight:
        id: b0wc82q6kqmso
    ibc.core.connection.v1.ConnectionEnd:
      description: |-
        ConnectionEnd defines a stateful object on a chain connected to another
        separate one.
        NOTE: there must only be 2 defined ConnectionEnds to establish
        a connection between two chains.
      properties:
        client_id:
          description: client associated with this connection.
          type: string
        counterparty:
          description: counterparty chain associated with this connection.
          properties:
            client_id:
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
              type: string
            connection_id:
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
              type: string
            prefix:
              description: commitment merkle prefix of the counterparty chain.
              properties:
                key_prefix:
                  format: byte
                  type: string
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
          type: object
        delay_period:
          description: |-
            delay period that must pass before a consensus state can be used for
            packet-verification NOTE: delay period logic is only implemented by some
            clients.
          format: uint64
          type: string
        state:
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: current state of the connection end.
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
          type: string
        versions:
          description: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection.
          items:
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
            properties:
              features:
                items:
                  type: string
                title: list of features compatible with the specified identifier
                type: array
              identifier:
                title: unique version identifier
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 3rvm12z4kk8ug
    ibc.core.connection.v1.Counterparty:
      description: Counterparty defines the counterparty chain associated with a connection end.
      properties:
        client_id:
          description: |-
            identifies the client on the counterparty chain associated with a given
            connection.
          type: string
        connection_id:
          description: |-
            identifies the connection end on the counterparty chain associated with a
            given connection.
          type: string
        prefix:
          description: commitment merkle prefix of the counterparty chain.
          properties:
            key_prefix:
              format: byte
              type: string
          title: |-
            MerklePrefix is merkle path prefixed to the key.
            The constructed key from the Path and the key will be append(Path.KeyPath,
            append(Path.KeyPrefix, key...))
          type: object
      type: object
      x-stoplight:
        id: 3uzh4oob2a1z2
    ibc.core.connection.v1.IdentifiedConnection:
      description: |-
        IdentifiedConnection defines a connection with additional connection
        identifier field.
      properties:
        client_id:
          description: client associated with this connection.
          type: string
        counterparty:
          description: counterparty chain associated with this connection.
          properties:
            client_id:
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
              type: string
            connection_id:
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
              type: string
            prefix:
              description: commitment merkle prefix of the counterparty chain.
              properties:
                key_prefix:
                  format: byte
                  type: string
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
          type: object
        delay_period:
          description: delay period associated with this connection.
          format: uint64
          type: string
        id:
          description: connection identifier.
          type: string
        state:
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: current state of the connection end.
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
          type: string
        versions:
          items:
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
            properties:
              features:
                items:
                  type: string
                title: list of features compatible with the specified identifier
                type: array
              identifier:
                title: unique version identifier
                type: string
            type: object
          title: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection
          type: array
      type: object
      x-stoplight:
        id: xa4zj1gyf2f8a
    ibc.core.connection.v1.Params:
      description: Params defines the set of Connection parameters.
      properties:
        max_expected_time_per_block:
          description: |-
            maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
            largest amount of time that the chain might reasonably take to produce the next block under normal operating
            conditions. A safe choice is 3-5x the expected time per block.
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: iqdhjo5vmgg8y
    ibc.core.connection.v1.QueryClientConnectionsResponse:
      properties:
        connection_paths:
          description: slice of all the connection paths associated with a client.
          items:
            type: string
          type: array
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was generated
          type: object
      title: |-
        QueryClientConnectionsResponse is the response type for the
        Query/ClientConnections RPC method
      type: object
      x-stoplight:
        id: 34loqw3hqquvh
    ibc.core.connection.v1.QueryConnectionClientStateResponse:
      properties:
        identified_client_state:
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              properties:
                type_url:
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above specified type.
                  format: byte
                  type: string
              title: client state
              type: object
          title: client state associated with the channel
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryConnectionClientStateResponse is the response type for the
        Query/ConnectionClientState RPC method
      type: object
      x-stoplight:
        id: knfq1octrfw2a
    ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
      properties:
        client_id:
          title: client ID associated with the consensus state
          type: string
        consensus_state:
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
          properties:
            type_url:
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above specified type.
              format: byte
              type: string
          title: consensus state associated with the channel
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      title: |-
        QueryConnectionConsensusStateResponse is the response type for the
        Query/ConnectionConsensusState RPC method
      type: object
      x-stoplight:
        id: yi2hwq5y6628h
    ibc.core.connection.v1.QueryConnectionParamsResponse:
      description: QueryConnectionParamsResponse is the response type for the Query/ConnectionParams RPC method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            max_expected_time_per_block:
              description: |-
                maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                largest amount of time that the chain might reasonably take to produce the next block under normal operating
                conditions. A safe choice is 3-5x the expected time per block.
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: cnqjevapj6qsz
    ibc.core.connection.v1.QueryConnectionResponse:
      description: |-
        QueryConnectionResponse is the response type for the Query/Connection RPC
        method. Besides the connection end, it includes a proof and the height from
        which the proof was retrieved.
      properties:
        connection:
          description: |-
            ConnectionEnd defines a stateful object on a chain connected to another
            separate one.
            NOTE: there must only be 2 defined ConnectionEnds to establish
            a connection between two chains.
          properties:
            client_id:
              description: client associated with this connection.
              type: string
            counterparty:
              description: counterparty chain associated with this connection.
              properties:
                client_id:
                  description: |-
                    identifies the client on the counterparty chain associated with a given
                    connection.
                  type: string
                connection_id:
                  description: |-
                    identifies the connection end on the counterparty chain associated with a
                    given connection.
                  type: string
                prefix:
                  description: commitment merkle prefix of the counterparty chain.
                  properties:
                    key_prefix:
                      format: byte
                      type: string
                  title: |-
                    MerklePrefix is merkle path prefixed to the key.
                    The constructed key from the Path and the key will be append(Path.KeyPath,
                    append(Path.KeyPrefix, key...))
                  type: object
              type: object
            delay_period:
              description: |-
                delay period that must pass before a consensus state can be used for
                packet-verification NOTE: delay period logic is only implemented by some
                clients.
              format: uint64
              type: string
            state:
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: current state of the connection end.
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
              type: string
            versions:
              description: |-
                IBC version which can be utilised to determine encodings or protocols for
                channels or packets utilising this connection.
              items:
                description: |-
                  Version defines the versioning scheme used to negotiate the IBC verison in
                  the connection handshake.
                properties:
                  features:
                    items:
                      type: string
                    title: list of features compatible with the specified identifier
                    type: array
                  identifier:
                    title: unique version identifier
                    type: string
                type: object
              type: array
          title: connection associated with the request identifier
          type: object
        proof:
          format: byte
          title: merkle proof of existence
          type: string
        proof_height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: height at which the proof was retrieved
          type: object
      type: object
      x-stoplight:
        id: 4ujt5475zv10z
    ibc.core.connection.v1.QueryConnectionsResponse:
      description: |-
        QueryConnectionsResponse is the response type for the Query/Connections RPC
        method.
      properties:
        connections:
          description: list of stored connections of the chain.
          items:
            description: |-
              IdentifiedConnection defines a connection with additional connection
              identifier field.
            properties:
              client_id:
                description: client associated with this connection.
                type: string
              counterparty:
                description: counterparty chain associated with this connection.
                properties:
                  client_id:
                    description: |-
                      identifies the client on the counterparty chain associated with a given
                      connection.
                    type: string
                  connection_id:
                    description: |-
                      identifies the connection end on the counterparty chain associated with a
                      given connection.
                    type: string
                  prefix:
                    description: commitment merkle prefix of the counterparty chain.
                    properties:
                      key_prefix:
                        format: byte
                        type: string
                    title: |-
                      MerklePrefix is merkle path prefixed to the key.
                      The constructed key from the Path and the key will be append(Path.KeyPath,
                      append(Path.KeyPrefix, key...))
                    type: object
                type: object
              delay_period:
                description: delay period associated with this connection.
                format: uint64
                type: string
              id:
                description: connection identifier.
                type: string
              state:
                default: STATE_UNINITIALIZED_UNSPECIFIED
                description: current state of the connection end.
                enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                type: string
              versions:
                items:
                  description: |-
                    Version defines the versioning scheme used to negotiate the IBC verison in
                    the connection handshake.
                  properties:
                    features:
                      items:
                        type: string
                      title: list of features compatible with the specified identifier
                      type: array
                    identifier:
                      title: unique version identifier
                      type: string
                  type: object
                title: |-
                  IBC version which can be utilised to determine encodings or protocols for
                  channels or packets utilising this connection
                type: array
            type: object
          type: array
        height:
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: query block height
          type: object
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          title: pagination response
          type: object
      type: object
      x-stoplight:
        id: tmsc6ddv6sna8
    ibc.core.connection.v1.State:
      default: STATE_UNINITIALIZED_UNSPECIFIED
      description: |-
        State defines if a connection is in one of the following states:
        INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A connection end has just started the opening handshake.
         - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
        chain.
         - STATE_OPEN: A connection end has completed the handshake.
      enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
      type: string
      x-stoplight:
        id: 0y4hyzhlcqoxr
    ibc.core.connection.v1.Version:
      description: |-
        Version defines the versioning scheme used to negotiate the IBC verison in
        the connection handshake.
      properties:
        features:
          items:
            type: string
          title: list of features compatible with the specified identifier
          type: array
        identifier:
          title: unique version identifier
          type: string
      type: object
      x-stoplight:
        id: e7bufj7c71dux
    ibc.lightclients.wasm.v1.QueryChecksumsResponse:
      description: QueryChecksumsResponse is the response type for the Query/Checksums RPC method.
      properties:
        checksums:
          description: checksums is a list of the hex encoded checksums of all wasm codes stored.
          items:
            type: string
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: fboubj4nkym8u
    ibc.lightclients.wasm.v1.QueryCodeResponse:
      description: QueryCodeResponse is the response type for the Query/Code RPC method.
      properties:
        data:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: 30nape9dkip18
    ixo.bonds.v1beta1.BaseOrder:
      description: |-
        BaseOrder defines a base order type. It contains all the necessary fields for
        specifying the general details about a buy, sell, or swap order.
      properties:
        account_did:
          type: string
        amount:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        cancel_reason:
          type: string
        cancelled:
          type: boolean
      type: object
      x-stoplight:
        id: qv4flzxv3xfws
    ixo.bonds.v1beta1.Batch:
      description: |-
        Batch holds a collection of outstanding buy, sell, and swap orders on a
        particular bond.
      properties:
        blocks_remaining:
          type: string
        bond_did:
          type: string
        buy_prices:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        buys:
          items:
            description: |-
              BuyOrder defines a type for submitting a buy order on a bond, together with
              the maximum amount of reserve tokens the buyer is willing to pay.
            properties:
              base_order:
                description: |-
                  BaseOrder defines a base order type. It contains all the necessary fields for
                  specifying the general details about a buy, sell, or swap order.
                properties:
                  account_did:
                    type: string
                  amount:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  cancel_reason:
                    type: string
                  cancelled:
                    type: boolean
                type: object
              max_prices:
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
          type: array
        next_public_alpha:
          type: string
        sell_prices:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        sells:
          items:
            description: SellOrder defines a type for submitting a sell order on a bond.
            properties:
              base_order:
                description: |-
                  BaseOrder defines a base order type. It contains all the necessary fields for
                  specifying the general details about a buy, sell, or swap order.
                properties:
                  account_did:
                    type: string
                  amount:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  cancel_reason:
                    type: string
                  cancelled:
                    type: boolean
                type: object
            type: object
          type: array
        swaps:
          items:
            description: |-
              SwapOrder defines a type for submitting a swap order between two tokens on a
              bond.
            properties:
              base_order:
                description: |-
                  BaseOrder defines a base order type. It contains all the necessary fields for
                  specifying the general details about a buy, sell, or swap order.
                properties:
                  account_did:
                    type: string
                  amount:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  cancel_reason:
                    type: string
                  cancelled:
                    type: boolean
                type: object
              to_token:
                type: string
            type: object
          type: array
        total_buy_amount:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        total_sell_amount:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: iywnihrmhtuqj
    ixo.bonds.v1beta1.Bond:
      description: Bond defines a token bonding curve type with all of its parameters.
      properties:
        allow_reserve_withdrawals:
          type: boolean
        allow_sells:
          type: boolean
        alpha_bond:
          type: boolean
        available_reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        batch_blocks:
          type: string
        bond_did:
          type: string
        controller_did:
          type: string
        creator_did:
          type: string
        current_outcome_payment_reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        current_reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        current_supply:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        description:
          type: string
        exit_fee_percentage:
          type: string
        fee_address:
          type: string
        function_parameters:
          items:
            description: |-
              FunctionParam is a key-value pair used for specifying a specific bond
              parameter.
            properties:
              param:
                type: string
              value:
                type: string
            type: object
          type: array
        function_type:
          type: string
        max_supply:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        name:
          type: string
        oracle_did:
          type: string
        order_quantity_limits:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        outcome_payment:
          type: string
        reserve_tokens:
          items:
            type: string
          type: array
        reserve_withdrawal_address:
          type: string
        sanity_margin_percentage:
          type: string
        sanity_rate:
          type: string
        state:
          type: string
        token:
          type: string
        tx_fee_percentage:
          type: string
      type: object
      x-stoplight:
        id: s0l22lcjel5kq
    ixo.bonds.v1beta1.BondDetails:
      description: BondDetails contains details about the current state of a given bond.
      properties:
        bond_did:
          type: string
        reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        spot_price:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        supply:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 2fh1rndtwqaik
    ixo.bonds.v1beta1.BuyOrder:
      description: |-
        BuyOrder defines a type for submitting a buy order on a bond, together with
        the maximum amount of reserve tokens the buyer is willing to pay.
      properties:
        base_order:
          description: |-
            BaseOrder defines a base order type. It contains all the necessary fields for
            specifying the general details about a buy, sell, or swap order.
          properties:
            account_did:
              type: string
            amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            cancel_reason:
              type: string
            cancelled:
              type: boolean
          type: object
        max_prices:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 9twadun16rpfd
    ixo.bonds.v1beta1.FunctionParam:
      description: |-
        FunctionParam is a key-value pair used for specifying a specific bond
        parameter.
      properties:
        param:
          type: string
        value:
          type: string
      type: object
      x-stoplight:
        id: 66nh2mcdl687m
    ixo.bonds.v1beta1.Params:
      description: Params defines the parameters for the bonds module.
      properties:
        reserved_bond_tokens:
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: wjxs9e8ct2zak
    ixo.bonds.v1beta1.QueryAlphaMaximumsResponse:
      description: |-
        QueryAlphaMaximumsResponse is the response type for the Query/AlphaMaximums
        RPC method.
      properties:
        max_system_alpha:
          type: string
        max_system_alpha_increase:
          type: string
      type: object
      x-stoplight:
        id: 3ji3dcsslu6jh
    ixo.bonds.v1beta1.QueryAvailableReserveResponse:
      description: |-
        QueryAvailableReserveResponse is the response type for the
        Query/AvailableReserve RPC method.
      properties:
        available_reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: rfwh998nkqye3
    ixo.bonds.v1beta1.QueryBatchResponse:
      description: QueryBatchResponse is the response type for the Query/Batch RPC method.
      properties:
        batch:
          description: |-
            Batch holds a collection of outstanding buy, sell, and swap orders on a
            particular bond.
          properties:
            blocks_remaining:
              type: string
            bond_did:
              type: string
            buy_prices:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            buys:
              items:
                description: |-
                  BuyOrder defines a type for submitting a buy order on a bond, together with
                  the maximum amount of reserve tokens the buyer is willing to pay.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                  max_prices:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            next_public_alpha:
              type: string
            sell_prices:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            sells:
              items:
                description: SellOrder defines a type for submitting a sell order on a bond.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                type: object
              type: array
            swaps:
              items:
                description: |-
                  SwapOrder defines a type for submitting a swap order between two tokens on a
                  bond.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                  to_token:
                    type: string
                type: object
              type: array
            total_buy_amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            total_sell_amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: 3tvtl267fzf5q
    ixo.bonds.v1beta1.QueryBondResponse:
      description: QueryBondResponse is the response type for the Query/Bond RPC method.
      properties:
        bond:
          description: Bond defines a token bonding curve type with all of its parameters.
          properties:
            allow_reserve_withdrawals:
              type: boolean
            allow_sells:
              type: boolean
            alpha_bond:
              type: boolean
            available_reserve:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            batch_blocks:
              type: string
            bond_did:
              type: string
            controller_did:
              type: string
            creator_did:
              type: string
            current_outcome_payment_reserve:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            current_reserve:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            current_supply:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            description:
              type: string
            exit_fee_percentage:
              type: string
            fee_address:
              type: string
            function_parameters:
              items:
                description: |-
                  FunctionParam is a key-value pair used for specifying a specific bond
                  parameter.
                properties:
                  param:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            function_type:
              type: string
            max_supply:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            name:
              type: string
            oracle_did:
              type: string
            order_quantity_limits:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            outcome_payment:
              type: string
            reserve_tokens:
              items:
                type: string
              type: array
            reserve_withdrawal_address:
              type: string
            sanity_margin_percentage:
              type: string
            sanity_rate:
              type: string
            state:
              type: string
            token:
              type: string
            tx_fee_percentage:
              type: string
          type: object
      type: object
      x-stoplight:
        id: amifru4kkh93k
    ixo.bonds.v1beta1.QueryBondsDetailedResponse:
      description: |-
        QueryBondsDetailedResponse is the response type for the Query/BondsDetailed
        RPC method.
      properties:
        bonds_detailed:
          items:
            description: BondDetails contains details about the current state of a given bond.
            properties:
              bond_did:
                type: string
              reserve:
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              spot_price:
                items:
                  description: |-
                    DecCoin defines a token with a denomination and a decimal amount.

                    NOTE: The amount field is an Dec which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              supply:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-stoplight:
        id: xnhu7poyfe1it
    ixo.bonds.v1beta1.QueryBondsResponse:
      description: QueryBondsResponse is the response type for the Query/Bonds RPC method.
      properties:
        bonds:
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: nqqzfo8epd99y
    ixo.bonds.v1beta1.QueryBuyPriceResponse:
      description: |-
        QueryCustomPriceResponse is the response type for the Query/BuyPrice RPC
        method.
      properties:
        adjusted_supply:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        prices:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_prices:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        tx_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: i2fhdquavpoaf
    ixo.bonds.v1beta1.QueryCurrentPriceResponse:
      description: |-
        QueryCurrentPriceResponse is the response type for the Query/CurrentPrice RPC
        method.
      properties:
        current_price:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: t11k7iuyjlcrn
    ixo.bonds.v1beta1.QueryCurrentReserveResponse:
      description: |-
        QueryCurrentReserveResponse is the response type for the Query/CurrentReserve
        RPC method.
      properties:
        current_reserve:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: g00lirmhbdq1u
    ixo.bonds.v1beta1.QueryCustomPriceResponse:
      description: |-
        QueryCustomPriceResponse is the response type for the Query/CustomPrice RPC
        method.
      properties:
        price:
          items:
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 30hxi348r5bip
    ixo.bonds.v1beta1.QueryLastBatchResponse:
      description: |-
        QueryLastBatchResponse is the response type for the Query/LastBatch RPC
        method.
      properties:
        last_batch:
          description: |-
            Batch holds a collection of outstanding buy, sell, and swap orders on a
            particular bond.
          properties:
            blocks_remaining:
              type: string
            bond_did:
              type: string
            buy_prices:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            buys:
              items:
                description: |-
                  BuyOrder defines a type for submitting a buy order on a bond, together with
                  the maximum amount of reserve tokens the buyer is willing to pay.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                  max_prices:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            next_public_alpha:
              type: string
            sell_prices:
              items:
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            sells:
              items:
                description: SellOrder defines a type for submitting a sell order on a bond.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                type: object
              type: array
            swaps:
              items:
                description: |-
                  SwapOrder defines a type for submitting a swap order between two tokens on a
                  bond.
                properties:
                  base_order:
                    description: |-
                      BaseOrder defines a base order type. It contains all the necessary fields for
                      specifying the general details about a buy, sell, or swap order.
                    properties:
                      account_did:
                        type: string
                      amount:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      cancel_reason:
                        type: string
                      cancelled:
                        type: boolean
                    type: object
                  to_token:
                    type: string
                type: object
              type: array
            total_buy_amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            total_sell_amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
      type: object
      x-stoplight:
        id: j6fxzt1dksymn
    ixo.bonds.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
      properties:
        params:
          description: Params defines the parameters for the bonds module.
          properties:
            reserved_bond_tokens:
              items:
                type: string
              type: array
          type: object
      type: object
      x-stoplight:
        id: 1ms5ggw765dwh
    ixo.bonds.v1beta1.QuerySellReturnResponse:
      description: |-
        QuerySellReturnResponse is the response type for the Query/SellReturn RPC
        method.
      properties:
        adjusted_supply:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        exit_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        returns:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_returns:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        tx_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: vro6x5g50pb6m
    ixo.bonds.v1beta1.QuerySwapReturnResponse:
      description: |-
        QuerySwapReturnResponse is the response type for the Query/SwapReturn RPC
        method.
      properties:
        total_fees:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_returns:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 0pvhfsbbn78cc
    ixo.bonds.v1beta1.SellOrder:
      description: SellOrder defines a type for submitting a sell order on a bond.
      properties:
        base_order:
          description: |-
            BaseOrder defines a base order type. It contains all the necessary fields for
            specifying the general details about a buy, sell, or swap order.
          properties:
            account_did:
              type: string
            amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            cancel_reason:
              type: string
            cancelled:
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: c20v2kkxjniph
    ixo.bonds.v1beta1.SwapOrder:
      description: |-
        SwapOrder defines a type for submitting a swap order between two tokens on a
        bond.
      properties:
        base_order:
          description: |-
            BaseOrder defines a base order type. It contains all the necessary fields for
            specifying the general details about a buy, sell, or swap order.
          properties:
            account_did:
              type: string
            amount:
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            cancel_reason:
              type: string
            cancelled:
              type: boolean
          type: object
        to_token:
          type: string
      type: object
      x-stoplight:
        id: hir91dqe1y19v
    ixo.claims.v1beta1.CW20Payment:
      properties:
        address:
          type: string
        amount:
          format: uint64
          title: |-
            chose uint64 for now as amounts should be small enough to fit in a
            uint64(max 18446744073709551615)
          type: string
      type: object
      x-stoplight:
        id: q0jb2mct3nf6t
    ixo.claims.v1beta1.Claim:
      properties:
        agent_address:
          type: string
        agent_did:
          title: agent is the DID of the agent submitting the claim
          type: string
        amount:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: |-
            NOTE: if both amount and cw20 amount are empty then use default by
            Collection custom amount specified by service agent for claim approval
          type: array
        claim_id:
          title: claimID is the unique identifier of the claim in the cid hash format
          type: string
        collection_id:
          title: collection_id indicates to which Collection this claim belongs
          type: string
        cw20_payment:
          items:
            properties:
              address:
                type: string
              amount:
                format: uint64
                title: |-
                  chose uint64 for now as amounts should be small enough to fit in a
                  uint64(max 18446744073709551615)
                type: string
            type: object
          title: |-
            NOTE: if both amount and cw20 amount are empty then use default by
            Collection custom cw20 payments specified by service agent for claim
            approval
          type: array
        evaluation:
          properties:
            agent_address:
              type: string
            agent_did:
              title: agent is the DID of the agent that submits the evaluation
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: |-
                if both amount and cw20 amount are empty then use default by Collection
                custom amount specified by evaluator for claim approval
              type: array
            claim_id:
              title: claim_id indicates which Claim this evaluation is for
              type: string
            collection_id:
              title: |-
                collection_id indicates to which Collection the claim being evaluated
                belongs to
              type: string
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: custom cw20 payments specified by evaluator for claim approval
              type: array
            evaluation_date:
              format: date-time
              title: |-
                evaluationDate is the date and time that the claim evaluation was submitted
                on-chain
              type: string
            oracle:
              title: oracle is the DID of the Oracle entity that evaluates the claim
              type: string
            reason:
              format: int64
              title: |-
                reason is the code expressed as an integer, for why the evaluation result
                was given (codes defined by evaluator)
              type: integer
            status:
              default: PENDING
              enum:
                - PENDING
                - APPROVED
                - REJECTED
                - DISPUTED
                - INVALIDATED
              title: |-
                status is the evaluation status expressed as an integer (2=approved,
                3=rejected, ...)
              type: string
            verification_proof:
              title: verificationProof is the cid of the evaluation Verfiable Credential
              type: string
          title: evaluation is the result of one or more claim evaluations
          type: object
        payments_status:
          properties:
            approval:
              default: NO_PAYMENT
              enum:
                - NO_PAYMENT
                - PROMISED
                - AUTHORIZED
                - GUARANTEED
                - PAID
                - FAILED
                - DISPUTED_PAYMENT
              title: |-
                - PROMISED: Promised: Agent is contracted to receive payment
                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                 - PAID: Paid: Funds have been paid
                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
              type: string
            evaluation:
              default: NO_PAYMENT
              enum:
                - NO_PAYMENT
                - PROMISED
                - AUTHORIZED
                - GUARANTEED
                - PAID
                - FAILED
                - DISPUTED_PAYMENT
              title: |-
                - PROMISED: Promised: Agent is contracted to receive payment
                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                 - PAID: Paid: Funds have been paid
                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
              type: string
            rejection:
              default: NO_PAYMENT
              enum:
                - NO_PAYMENT
                - PROMISED
                - AUTHORIZED
                - GUARANTEED
                - PAID
                - FAILED
                - DISPUTED_PAYMENT
              title: |-
                - PROMISED: Promised: Agent is contracted to receive payment
                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                 - PAID: Paid: Funds have been paid
                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
              type: string
            submission:
              default: NO_PAYMENT
              enum:
                - NO_PAYMENT
                - PROMISED
                - AUTHORIZED
                - GUARANTEED
                - PAID
                - FAILED
                - DISPUTED_PAYMENT
              title: |-
                - PROMISED: Promised: Agent is contracted to receive payment
                 - AUTHORIZED: Authorized: Authz set up, no guarantee
                 - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                 - PAID: Paid: Funds have been paid
                 - FAILED: Failed: Payment failed, most probably due to insufficient funds
                 - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
              type: string
          title: payments_status is the status of the payments for the claim
          type: object
        submission_date:
          format: date-time
          title: submissionDate is the date and time that the claim was submitted on-chain
          type: string
        use_intent:
          title: 'intent_id is the id of the intent for this claim, if any'
          type: boolean
      type: object
      x-stoplight:
        id: ih2fjv1x38fhw
    ixo.claims.v1beta1.ClaimPayments:
      properties:
        approval:
          default: NO_PAYMENT
          enum:
            - NO_PAYMENT
            - PROMISED
            - AUTHORIZED
            - GUARANTEED
            - PAID
            - FAILED
            - DISPUTED_PAYMENT
          title: |-
            - PROMISED: Promised: Agent is contracted to receive payment
             - AUTHORIZED: Authorized: Authz set up, no guarantee
             - GUARANTEED: Guaranteed: Escrow set up with funds blocked
             - PAID: Paid: Funds have been paid
             - FAILED: Failed: Payment failed, most probably due to insufficient funds
             - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
          type: string
        evaluation:
          default: NO_PAYMENT
          enum:
            - NO_PAYMENT
            - PROMISED
            - AUTHORIZED
            - GUARANTEED
            - PAID
            - FAILED
            - DISPUTED_PAYMENT
          title: |-
            - PROMISED: Promised: Agent is contracted to receive payment
             - AUTHORIZED: Authorized: Authz set up, no guarantee
             - GUARANTEED: Guaranteed: Escrow set up with funds blocked
             - PAID: Paid: Funds have been paid
             - FAILED: Failed: Payment failed, most probably due to insufficient funds
             - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
          type: string
        rejection:
          default: NO_PAYMENT
          enum:
            - NO_PAYMENT
            - PROMISED
            - AUTHORIZED
            - GUARANTEED
            - PAID
            - FAILED
            - DISPUTED_PAYMENT
          title: |-
            - PROMISED: Promised: Agent is contracted to receive payment
             - AUTHORIZED: Authorized: Authz set up, no guarantee
             - GUARANTEED: Guaranteed: Escrow set up with funds blocked
             - PAID: Paid: Funds have been paid
             - FAILED: Failed: Payment failed, most probably due to insufficient funds
             - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
          type: string
        submission:
          default: NO_PAYMENT
          enum:
            - NO_PAYMENT
            - PROMISED
            - AUTHORIZED
            - GUARANTEED
            - PAID
            - FAILED
            - DISPUTED_PAYMENT
          title: |-
            - PROMISED: Promised: Agent is contracted to receive payment
             - AUTHORIZED: Authorized: Authz set up, no guarantee
             - GUARANTEED: Guaranteed: Escrow set up with funds blocked
             - PAID: Paid: Funds have been paid
             - FAILED: Failed: Payment failed, most probably due to insufficient funds
             - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
          type: string
      type: object
      x-stoplight:
        id: qachcbxpfi26x
    ixo.claims.v1beta1.Collection:
      properties:
        admin:
          title: |-
            admin is the account address that will authorize or revoke agents and
            payments (the grantor), and can update the collection
          type: string
        approved:
          format: uint64
          title: |-
            approved is the number of claims that have been evaluated and approved
            (internally calculated)
          type: string
        count:
          format: uint64
          title: count is the number of claims already submitted (internally calculated)
          type: string
        disputed:
          format: uint64
          title: |-
            disputed is the number of claims that have disputed status (internally
            calculated)
          type: string
        end_date:
          format: date-time
          title: |-
            endDate is the date after which no more claims may be submitted (no endDate
            is allowed)
          type: string
        entity:
          title: entity is the DID of the entity for which the claims are being created
          type: string
        escrow_account:
          title: |-
            escrow_account is the escrow account address for this collection created at
            collection creation, current purpose is to transfer payments to escrow
            account for GUARANTEED payments through intents
          type: string
        evaluated:
          format: uint64
          title: |-
            evaluated is the number of claims that have been evaluated (internally
            calculated)
          type: string
        id:
          title: collection id is the incremented internal id for the collection of claims
          type: string
        intents:
          default: ALLOW
          description: |2-



             - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
            intents.
             - DENY: Deny: Intents cannot be made for claims for the collection.
             - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
            mandatory before a claim can be submitted.
          enum:
            - ALLOW
            - DENY
            - REQUIRED
          title: |-
            intents is the option for intents for this collection (allow, deny,
            required)
          type: string
        invalidated:
          format: uint64
          title: |-
            invalidated is the number of claims that have been evaluated as invalid
            (internally calculated)
          type: string
        payments:
          properties:
            approval:
              properties:
                account:
                  title: account is the entity account address from which the payment will be made
                  type: string
                amount:
                  items:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                contract_1155_payment:
                  properties:
                    address:
                      type: string
                    amount:
                      format: int64
                      type: integer
                    token_id:
                      type: string
                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                  type: object
                cw20_payment:
                  items:
                    properties:
                      address:
                        type: string
                      amount:
                        format: uint64
                        title: |-
                          chose uint64 for now as amounts should be small enough to fit in a
                          uint64(max 18446744073709551615)
                        type: string
                    type: object
                  title: 'cw20 payments, can be empty or multiple'
                  type: array
                is_oracle_payment:
                  title: |-
                    boolean to indicate if the payment is for oracle payments, aka it will go
                    through network fees split NOTE: if true the payment can only have amount
                    values(Native coins), no cw20 payments allowed then
                  type: boolean
                timeout_ns:
                  title: |-
                    timeout after claim/evaluation to create authZ for payment, if 0 then
                    immediate direct payment
                  type: string
              type: object
            evaluation:
              properties:
                account:
                  title: account is the entity account address from which the payment will be made
                  type: string
                amount:
                  items:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                contract_1155_payment:
                  properties:
                    address:
                      type: string
                    amount:
                      format: int64
                      type: integer
                    token_id:
                      type: string
                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                  type: object
                cw20_payment:
                  items:
                    properties:
                      address:
                        type: string
                      amount:
                        format: uint64
                        title: |-
                          chose uint64 for now as amounts should be small enough to fit in a
                          uint64(max 18446744073709551615)
                        type: string
                    type: object
                  title: 'cw20 payments, can be empty or multiple'
                  type: array
                is_oracle_payment:
                  title: |-
                    boolean to indicate if the payment is for oracle payments, aka it will go
                    through network fees split NOTE: if true the payment can only have amount
                    values(Native coins), no cw20 payments allowed then
                  type: boolean
                timeout_ns:
                  title: |-
                    timeout after claim/evaluation to create authZ for payment, if 0 then
                    immediate direct payment
                  type: string
              type: object
            rejection:
              properties:
                account:
                  title: account is the entity account address from which the payment will be made
                  type: string
                amount:
                  items:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                contract_1155_payment:
                  properties:
                    address:
                      type: string
                    amount:
                      format: int64
                      type: integer
                    token_id:
                      type: string
                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                  type: object
                cw20_payment:
                  items:
                    properties:
                      address:
                        type: string
                      amount:
                        format: uint64
                        title: |-
                          chose uint64 for now as amounts should be small enough to fit in a
                          uint64(max 18446744073709551615)
                        type: string
                    type: object
                  title: 'cw20 payments, can be empty or multiple'
                  type: array
                is_oracle_payment:
                  title: |-
                    boolean to indicate if the payment is for oracle payments, aka it will go
                    through network fees split NOTE: if true the payment can only have amount
                    values(Native coins), no cw20 payments allowed then
                  type: boolean
                timeout_ns:
                  title: |-
                    timeout after claim/evaluation to create authZ for payment, if 0 then
                    immediate direct payment
                  type: string
              type: object
            submission:
              properties:
                account:
                  title: account is the entity account address from which the payment will be made
                  type: string
                amount:
                  items:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                contract_1155_payment:
                  properties:
                    address:
                      type: string
                    amount:
                      format: int64
                      type: integer
                    token_id:
                      type: string
                  title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                  type: object
                cw20_payment:
                  items:
                    properties:
                      address:
                        type: string
                      amount:
                        format: uint64
                        title: |-
                          chose uint64 for now as amounts should be small enough to fit in a
                          uint64(max 18446744073709551615)
                        type: string
                    type: object
                  title: 'cw20 payments, can be empty or multiple'
                  type: array
                is_oracle_payment:
                  title: |-
                    boolean to indicate if the payment is for oracle payments, aka it will go
                    through network fees split NOTE: if true the payment can only have amount
                    values(Native coins), no cw20 payments allowed then
                  type: boolean
                timeout_ns:
                  title: |-
                    timeout after claim/evaluation to create authZ for payment, if 0 then
                    immediate direct payment
                  type: string
              type: object
          title: |-
            payments is the amount paid for claim submission, evaluation, approval, or
            rejection
          type: object
        protocol:
          title: protocol is the DID of the claim protocol
          type: string
        quota:
          format: uint64
          title: 'quota is the maximum number of claims that may be submitted, 0 is unlimited'
          type: string
        rejected:
          format: uint64
          title: |-
            rejected is the number of claims that have been evaluated and rejected
            (internally calculated)
          type: string
        signer:
          title: signer address
          type: string
        start_date:
          format: date-time
          title: startDate is the date after which claims may be submitted
          type: string
        state:
          default: OPEN
          enum:
            - OPEN
            - PAUSED
            - CLOSED
          title: 'state is the current state of this Collection (open, paused, closed)'
          type: string
      type: object
      x-stoplight:
        id: gttbu72wqphen
    ixo.claims.v1beta1.CollectionIntentOptions:
      default: ALLOW
      description: |2-



         - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
        intents.
         - DENY: Deny: Intents cannot be made for claims for the collection.
         - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
        mandatory before a claim can be submitted.
      enum:
        - ALLOW
        - DENY
        - REQUIRED
      type: string
      x-stoplight:
        id: j44ifjyx7w1m5
    ixo.claims.v1beta1.CollectionState:
      default: OPEN
      enum:
        - OPEN
        - PAUSED
        - CLOSED
      type: string
      x-stoplight:
        id: dit3binxhogpl
    ixo.claims.v1beta1.Contract1155Payment:
      properties:
        address:
          type: string
        amount:
          format: int64
          type: integer
        token_id:
          type: string
      type: object
      x-stoplight:
        id: txw8mr9dr9yv8
    ixo.claims.v1beta1.Dispute:
      properties:
        data:
          properties:
            encrypted:
              type: boolean
            proof:
              type: string
            type:
              type: string
            uri:
              type: string
          type: object
        subject_id:
          type: string
        type:
          format: int32
          title: 'type is expressed as an integer, interpreted by the client'
          type: integer
      type: object
      x-stoplight:
        id: r05ox4r621avt
    ixo.claims.v1beta1.DisputeData:
      properties:
        encrypted:
          type: boolean
        proof:
          type: string
        type:
          type: string
        uri:
          type: string
      type: object
      x-stoplight:
        id: ke1jrgf5vry87
    ixo.claims.v1beta1.Evaluation:
      properties:
        agent_address:
          type: string
        agent_did:
          title: agent is the DID of the agent that submits the evaluation
          type: string
        amount:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: |-
            if both amount and cw20 amount are empty then use default by Collection
            custom amount specified by evaluator for claim approval
          type: array
        claim_id:
          title: claim_id indicates which Claim this evaluation is for
          type: string
        collection_id:
          title: |-
            collection_id indicates to which Collection the claim being evaluated
            belongs to
          type: string
        cw20_payment:
          items:
            properties:
              address:
                type: string
              amount:
                format: uint64
                title: |-
                  chose uint64 for now as amounts should be small enough to fit in a
                  uint64(max 18446744073709551615)
                type: string
            type: object
          title: custom cw20 payments specified by evaluator for claim approval
          type: array
        evaluation_date:
          format: date-time
          title: |-
            evaluationDate is the date and time that the claim evaluation was submitted
            on-chain
          type: string
        oracle:
          title: oracle is the DID of the Oracle entity that evaluates the claim
          type: string
        reason:
          format: int64
          title: |-
            reason is the code expressed as an integer, for why the evaluation result
            was given (codes defined by evaluator)
          type: integer
        status:
          default: PENDING
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - DISPUTED
            - INVALIDATED
          title: |-
            status is the evaluation status expressed as an integer (2=approved,
            3=rejected, ...)
          type: string
        verification_proof:
          title: verificationProof is the cid of the evaluation Verfiable Credential
          type: string
      type: object
      x-stoplight:
        id: dj6lwmx2drlds
    ixo.claims.v1beta1.EvaluationStatus:
      default: PENDING
      enum:
        - PENDING
        - APPROVED
        - REJECTED
        - DISPUTED
        - INVALIDATED
      type: string
      x-stoplight:
        id: oaorz4evwf8sc
    ixo.claims.v1beta1.Intent:
      description: Intent defines the structure for a service agent's claim intent.
      properties:
        agent_address:
          description: The service agent's address.
          type: string
        agent_did:
          description: The service agent's DID (Decentralized Identifier).
          type: string
        amount:
          description: 'The payment amount the agent intends to claim, if any.'
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        claim_id:
          title: 'claim_id (optional, set when claim is submitted)'
          type: string
        collection_id:
          description: The id of the collection this intent is linked to.
          type: string
        created_at:
          description: The time the intent was created.
          format: date-time
          type: string
        cw20_payment:
          description: 'The CW20Payment amount the agent intends to claim, if any.'
          items:
            properties:
              address:
                type: string
              amount:
                format: uint64
                title: |-
                  chose uint64 for now as amounts should be small enough to fit in a
                  uint64(max 18446744073709551615)
                type: string
            type: object
          type: array
        escrow_address:
          title: the escrow account address
          type: string
        expire_at:
          description: |-
            Timeout period for the intent. If the claim is not submitted by this time,
            the intent expires.
          format: date-time
          type: string
        from_address:
          title: the address the escrow payment came from
          type: string
        id:
          title: id is the incremented internal id for the intent
          type: string
        status:
          default: ACTIVE
          description: 'Status of the intent (e.g., "ACTIVE" or "FULFILLED").'
          enum:
            - ACTIVE
            - FULFILLED
            - EXPIRED
          title: |-
            - ACTIVE: Active: Intent is created and active, payments have been transferred to
            escrow if there is any
             - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
            be released on claim APPROVAL, or funds will be reverted on claim REJECTION
            or DISPUTE
             - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
            escrow
          type: string
      type: object
      x-stoplight:
        id: dndbjpxpebdu7
    ixo.claims.v1beta1.IntentStatus:
      default: ACTIVE
      enum:
        - ACTIVE
        - FULFILLED
        - EXPIRED
      title: |-
        - ACTIVE: Active: Intent is created and active, payments have been transferred to
        escrow if there is any
         - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
        be released on claim APPROVAL, or funds will be reverted on claim REJECTION
        or DISPUTE
         - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
        escrow
      type: string
      x-stoplight:
        id: rpqj4wp4sm6id
    ixo.claims.v1beta1.Params:
      properties:
        collection_sequence:
          format: uint64
          type: string
        intent_sequence:
          format: uint64
          type: string
        ixo_account:
          type: string
        network_fee_percentage:
          type: string
        node_fee_percentage:
          type: string
      type: object
      x-stoplight:
        id: p6luhws7o7cve
    ixo.claims.v1beta1.Payment:
      properties:
        account:
          title: account is the entity account address from which the payment will be made
          type: string
        amount:
          items:
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        contract_1155_payment:
          properties:
            address:
              type: string
            amount:
              format: int64
              type: integer
            token_id:
              type: string
          title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
          type: object
        cw20_payment:
          items:
            properties:
              address:
                type: string
              amount:
                format: uint64
                title: |-
                  chose uint64 for now as amounts should be small enough to fit in a
                  uint64(max 18446744073709551615)
                type: string
            type: object
          title: 'cw20 payments, can be empty or multiple'
          type: array
        is_oracle_payment:
          title: |-
            boolean to indicate if the payment is for oracle payments, aka it will go
            through network fees split NOTE: if true the payment can only have amount
            values(Native coins), no cw20 payments allowed then
          type: boolean
        timeout_ns:
          title: |-
            timeout after claim/evaluation to create authZ for payment, if 0 then
            immediate direct payment
          type: string
      type: object
      x-stoplight:
        id: h7yj1mn604maz
    ixo.claims.v1beta1.PaymentStatus:
      default: NO_PAYMENT
      enum:
        - NO_PAYMENT
        - PROMISED
        - AUTHORIZED
        - GUARANTEED
        - PAID
        - FAILED
        - DISPUTED_PAYMENT
      title: |-
        - PROMISED: Promised: Agent is contracted to receive payment
         - AUTHORIZED: Authorized: Authz set up, no guarantee
         - GUARANTEED: Guaranteed: Escrow set up with funds blocked
         - PAID: Paid: Funds have been paid
         - FAILED: Failed: Payment failed, most probably due to insufficient funds
         - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
      type: string
      x-stoplight:
        id: d708csah8vyri
    ixo.claims.v1beta1.Payments:
      properties:
        approval:
          properties:
            account:
              title: account is the entity account address from which the payment will be made
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            contract_1155_payment:
              properties:
                address:
                  type: string
                amount:
                  format: int64
                  type: integer
                token_id:
                  type: string
              title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
              type: object
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: 'cw20 payments, can be empty or multiple'
              type: array
            is_oracle_payment:
              title: |-
                boolean to indicate if the payment is for oracle payments, aka it will go
                through network fees split NOTE: if true the payment can only have amount
                values(Native coins), no cw20 payments allowed then
              type: boolean
            timeout_ns:
              title: |-
                timeout after claim/evaluation to create authZ for payment, if 0 then
                immediate direct payment
              type: string
          type: object
        evaluation:
          properties:
            account:
              title: account is the entity account address from which the payment will be made
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            contract_1155_payment:
              properties:
                address:
                  type: string
                amount:
                  format: int64
                  type: integer
                token_id:
                  type: string
              title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
              type: object
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: 'cw20 payments, can be empty or multiple'
              type: array
            is_oracle_payment:
              title: |-
                boolean to indicate if the payment is for oracle payments, aka it will go
                through network fees split NOTE: if true the payment can only have amount
                values(Native coins), no cw20 payments allowed then
              type: boolean
            timeout_ns:
              title: |-
                timeout after claim/evaluation to create authZ for payment, if 0 then
                immediate direct payment
              type: string
          type: object
        rejection:
          properties:
            account:
              title: account is the entity account address from which the payment will be made
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            contract_1155_payment:
              properties:
                address:
                  type: string
                amount:
                  format: int64
                  type: integer
                token_id:
                  type: string
              title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
              type: object
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: 'cw20 payments, can be empty or multiple'
              type: array
            is_oracle_payment:
              title: |-
                boolean to indicate if the payment is for oracle payments, aka it will go
                through network fees split NOTE: if true the payment can only have amount
                values(Native coins), no cw20 payments allowed then
              type: boolean
            timeout_ns:
              title: |-
                timeout after claim/evaluation to create authZ for payment, if 0 then
                immediate direct payment
              type: string
          type: object
        submission:
          properties:
            account:
              title: account is the entity account address from which the payment will be made
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            contract_1155_payment:
              properties:
                address:
                  type: string
                amount:
                  format: int64
                  type: integer
                token_id:
                  type: string
              title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
              type: object
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: 'cw20 payments, can be empty or multiple'
              type: array
            is_oracle_payment:
              title: |-
                boolean to indicate if the payment is for oracle payments, aka it will go
                through network fees split NOTE: if true the payment can only have amount
                values(Native coins), no cw20 payments allowed then
              type: boolean
            timeout_ns:
              title: |-
                timeout after claim/evaluation to create authZ for payment, if 0 then
                immediate direct payment
              type: string
          type: object
      type: object
      x-stoplight:
        id: sxjqjchr4hbea
    ixo.claims.v1beta1.QueryClaimListResponse:
      properties:
        claims:
          items:
            properties:
              agent_address:
                type: string
              agent_did:
                title: agent is the DID of the agent submitting the claim
                type: string
              amount:
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: |-
                  NOTE: if both amount and cw20 amount are empty then use default by
                  Collection custom amount specified by service agent for claim approval
                type: array
              claim_id:
                title: claimID is the unique identifier of the claim in the cid hash format
                type: string
              collection_id:
                title: collection_id indicates to which Collection this claim belongs
                type: string
              cw20_payment:
                items:
                  properties:
                    address:
                      type: string
                    amount:
                      format: uint64
                      title: |-
                        chose uint64 for now as amounts should be small enough to fit in a
                        uint64(max 18446744073709551615)
                      type: string
                  type: object
                title: |-
                  NOTE: if both amount and cw20 amount are empty then use default by
                  Collection custom cw20 payments specified by service agent for claim
                  approval
                type: array
              evaluation:
                properties:
                  agent_address:
                    type: string
                  agent_did:
                    title: agent is the DID of the agent that submits the evaluation
                    type: string
                  amount:
                    items:
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: |-
                      if both amount and cw20 amount are empty then use default by Collection
                      custom amount specified by evaluator for claim approval
                    type: array
                  claim_id:
                    title: claim_id indicates which Claim this evaluation is for
                    type: string
                  collection_id:
                    title: |-
                      collection_id indicates to which Collection the claim being evaluated
                      belongs to
                    type: string
                  cw20_payment:
                    items:
                      properties:
                        address:
                          type: string
                        amount:
                          format: uint64
                          title: |-
                            chose uint64 for now as amounts should be small enough to fit in a
                            uint64(max 18446744073709551615)
                          type: string
                      type: object
                    title: custom cw20 payments specified by evaluator for claim approval
                    type: array
                  evaluation_date:
                    format: date-time
                    title: |-
                      evaluationDate is the date and time that the claim evaluation was submitted
                      on-chain
                    type: string
                  oracle:
                    title: oracle is the DID of the Oracle entity that evaluates the claim
                    type: string
                  reason:
                    format: int64
                    title: |-
                      reason is the code expressed as an integer, for why the evaluation result
                      was given (codes defined by evaluator)
                    type: integer
                  status:
                    default: PENDING
                    enum:
                      - PENDING
                      - APPROVED
                      - REJECTED
                      - DISPUTED
                      - INVALIDATED
                    title: |-
                      status is the evaluation status expressed as an integer (2=approved,
                      3=rejected, ...)
                    type: string
                  verification_proof:
                    title: verificationProof is the cid of the evaluation Verfiable Credential
                    type: string
                title: evaluation is the result of one or more claim evaluations
                type: object
              payments_status:
                properties:
                  approval:
                    default: NO_PAYMENT
                    enum:
                      - NO_PAYMENT
                      - PROMISED
                      - AUTHORIZED
                      - GUARANTEED
                      - PAID
                      - FAILED
                      - DISPUTED_PAYMENT
                    title: |-
                      - PROMISED: Promised: Agent is contracted to receive payment
                       - AUTHORIZED: Authorized: Authz set up, no guarantee
                       - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                       - PAID: Paid: Funds have been paid
                       - FAILED: Failed: Payment failed, most probably due to insufficient funds
                       - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                    type: string
                  evaluation:
                    default: NO_PAYMENT
                    enum:
                      - NO_PAYMENT
                      - PROMISED
                      - AUTHORIZED
                      - GUARANTEED
                      - PAID
                      - FAILED
                      - DISPUTED_PAYMENT
                    title: |-
                      - PROMISED: Promised: Agent is contracted to receive payment
                       - AUTHORIZED: Authorized: Authz set up, no guarantee
                       - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                       - PAID: Paid: Funds have been paid
                       - FAILED: Failed: Payment failed, most probably due to insufficient funds
                       - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                    type: string
                  rejection:
                    default: NO_PAYMENT
                    enum:
                      - NO_PAYMENT
                      - PROMISED
                      - AUTHORIZED
                      - GUARANTEED
                      - PAID
                      - FAILED
                      - DISPUTED_PAYMENT
                    title: |-
                      - PROMISED: Promised: Agent is contracted to receive payment
                       - AUTHORIZED: Authorized: Authz set up, no guarantee
                       - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                       - PAID: Paid: Funds have been paid
                       - FAILED: Failed: Payment failed, most probably due to insufficient funds
                       - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                    type: string
                  submission:
                    default: NO_PAYMENT
                    enum:
                      - NO_PAYMENT
                      - PROMISED
                      - AUTHORIZED
                      - GUARANTEED
                      - PAID
                      - FAILED
                      - DISPUTED_PAYMENT
                    title: |-
                      - PROMISED: Promised: Agent is contracted to receive payment
                       - AUTHORIZED: Authorized: Authz set up, no guarantee
                       - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                       - PAID: Paid: Funds have been paid
                       - FAILED: Failed: Payment failed, most probably due to insufficient funds
                       - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                    type: string
                title: payments_status is the status of the payments for the claim
                type: object
              submission_date:
                format: date-time
                title: submissionDate is the date and time that the claim was submitted on-chain
                type: string
              use_intent:
                title: 'intent_id is the id of the intent for this claim, if any'
                type: boolean
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: wmu73yyagk4b4
    ixo.claims.v1beta1.QueryClaimResponse:
      properties:
        claim:
          properties:
            agent_address:
              type: string
            agent_did:
              title: agent is the DID of the agent submitting the claim
              type: string
            amount:
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: |-
                NOTE: if both amount and cw20 amount are empty then use default by
                Collection custom amount specified by service agent for claim approval
              type: array
            claim_id:
              title: claimID is the unique identifier of the claim in the cid hash format
              type: string
            collection_id:
              title: collection_id indicates to which Collection this claim belongs
              type: string
            cw20_payment:
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              title: |-
                NOTE: if both amount and cw20 amount are empty then use default by
                Collection custom cw20 payments specified by service agent for claim
                approval
              type: array
            evaluation:
              properties:
                agent_address:
                  type: string
                agent_did:
                  title: agent is the DID of the agent that submits the evaluation
                  type: string
                amount:
                  items:
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  title: |-
                    if both amount and cw20 amount are empty then use default by Collection
                    custom amount specified by evaluator for claim approval
                  type: array
                claim_id:
                  title: claim_id indicates which Claim this evaluation is for
                  type: string
                collection_id:
                  title: |-
                    collection_id indicates to which Collection the claim being evaluated
                    belongs to
                  type: string
                cw20_payment:
                  items:
                    properties:
                      address:
                        type: string
                      amount:
                        format: uint64
                        title: |-
                          chose uint64 for now as amounts should be small enough to fit in a
                          uint64(max 18446744073709551615)
                        type: string
                    type: object
                  title: custom cw20 payments specified by evaluator for claim approval
                  type: array
                evaluation_date:
                  format: date-time
                  title: |-
                    evaluationDate is the date and time that the claim evaluation was submitted
                    on-chain
                  type: string
                oracle:
                  title: oracle is the DID of the Oracle entity that evaluates the claim
                  type: string
                reason:
                  format: int64
                  title: |-
                    reason is the code expressed as an integer, for why the evaluation result
                    was given (codes defined by evaluator)
                  type: integer
                status:
                  default: PENDING
                  enum:
                    - PENDING
                    - APPROVED
                    - REJECTED
                    - DISPUTED
                    - INVALIDATED
                  title: |-
                    status is the evaluation status expressed as an integer (2=approved,
                    3=rejected, ...)
                  type: string
                verification_proof:
                  title: verificationProof is the cid of the evaluation Verfiable Credential
                  type: string
              title: evaluation is the result of one or more claim evaluations
              type: object
            payments_status:
              properties:
                approval:
                  default: NO_PAYMENT
                  enum:
                    - NO_PAYMENT
                    - PROMISED
                    - AUTHORIZED
                    - GUARANTEED
                    - PAID
                    - FAILED
                    - DISPUTED_PAYMENT
                  title: |-
                    - PROMISED: Promised: Agent is contracted to receive payment
                     - AUTHORIZED: Authorized: Authz set up, no guarantee
                     - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                     - PAID: Paid: Funds have been paid
                     - FAILED: Failed: Payment failed, most probably due to insufficient funds
                     - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                  type: string
                evaluation:
                  default: NO_PAYMENT
                  enum:
                    - NO_PAYMENT
                    - PROMISED
                    - AUTHORIZED
                    - GUARANTEED
                    - PAID
                    - FAILED
                    - DISPUTED_PAYMENT
                  title: |-
                    - PROMISED: Promised: Agent is contracted to receive payment
                     - AUTHORIZED: Authorized: Authz set up, no guarantee
                     - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                     - PAID: Paid: Funds have been paid
                     - FAILED: Failed: Payment failed, most probably due to insufficient funds
                     - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                  type: string
                rejection:
                  default: NO_PAYMENT
                  enum:
                    - NO_PAYMENT
                    - PROMISED
                    - AUTHORIZED
                    - GUARANTEED
                    - PAID
                    - FAILED
                    - DISPUTED_PAYMENT
                  title: |-
                    - PROMISED: Promised: Agent is contracted to receive payment
                     - AUTHORIZED: Authorized: Authz set up, no guarantee
                     - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                     - PAID: Paid: Funds have been paid
                     - FAILED: Failed: Payment failed, most probably due to insufficient funds
                     - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                  type: string
                submission:
                  default: NO_PAYMENT
                  enum:
                    - NO_PAYMENT
                    - PROMISED
                    - AUTHORIZED
                    - GUARANTEED
                    - PAID
                    - FAILED
                    - DISPUTED_PAYMENT
                  title: |-
                    - PROMISED: Promised: Agent is contracted to receive payment
                     - AUTHORIZED: Authorized: Authz set up, no guarantee
                     - GUARANTEED: Guaranteed: Escrow set up with funds blocked
                     - PAID: Paid: Funds have been paid
                     - FAILED: Failed: Payment failed, most probably due to insufficient funds
                     - DISPUTED_PAYMENT: DisputedPayment: Payment disputed
                  type: string
              title: payments_status is the status of the payments for the claim
              type: object
            submission_date:
              format: date-time
              title: submissionDate is the date and time that the claim was submitted on-chain
              type: string
            use_intent:
              title: 'intent_id is the id of the intent for this claim, if any'
              type: boolean
          type: object
      type: object
      x-stoplight:
        id: bkds4m841x9i2
    ixo.claims.v1beta1.QueryCollectionListResponse:
      properties:
        collections:
          items:
            properties:
              admin:
                title: |-
                  admin is the account address that will authorize or revoke agents and
                  payments (the grantor), and can update the collection
                type: string
              approved:
                format: uint64
                title: |-
                  approved is the number of claims that have been evaluated and approved
                  (internally calculated)
                type: string
              count:
                format: uint64
                title: count is the number of claims already submitted (internally calculated)
                type: string
              disputed:
                format: uint64
                title: |-
                  disputed is the number of claims that have disputed status (internally
                  calculated)
                type: string
              end_date:
                format: date-time
                title: |-
                  endDate is the date after which no more claims may be submitted (no endDate
                  is allowed)
                type: string
              entity:
                title: entity is the DID of the entity for which the claims are being created
                type: string
              escrow_account:
                title: |-
                  escrow_account is the escrow account address for this collection created at
                  collection creation, current purpose is to transfer payments to escrow
                  account for GUARANTEED payments through intents
                type: string
              evaluated:
                format: uint64
                title: |-
                  evaluated is the number of claims that have been evaluated (internally
                  calculated)
                type: string
              id:
                title: collection id is the incremented internal id for the collection of claims
                type: string
              intents:
                default: ALLOW
                description: |2-



                   - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
                  intents.
                   - DENY: Deny: Intents cannot be made for claims for the collection.
                   - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
                  mandatory before a claim can be submitted.
                enum:
                  - ALLOW
                  - DENY
                  - REQUIRED
                title: |-
                  intents is the option for intents for this collection (allow, deny,
                  required)
                type: string
              invalidated:
                format: uint64
                title: |-
                  invalidated is the number of claims that have been evaluated as invalid
                  (internally calculated)
                type: string
              payments:
                properties:
                  approval:
                    properties:
                      account:
                        title: account is the entity account address from which the payment will be made
                        type: string
                      amount:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      contract_1155_payment:
                        properties:
                          address:
                            type: string
                          amount:
                            format: int64
                            type: integer
                          token_id:
                            type: string
                        title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                        type: object
                      cw20_payment:
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        title: 'cw20 payments, can be empty or multiple'
                        type: array
                      is_oracle_payment:
                        title: |-
                          boolean to indicate if the payment is for oracle payments, aka it will go
                          through network fees split NOTE: if true the payment can only have amount
                          values(Native coins), no cw20 payments allowed then
                        type: boolean
                      timeout_ns:
                        title: |-
                          timeout after claim/evaluation to create authZ for payment, if 0 then
                          immediate direct payment
                        type: string
                    type: object
                  evaluation:
                    properties:
                      account:
                        title: account is the entity account address from which the payment will be made
                        type: string
                      amount:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      contract_1155_payment:
                        properties:
                          address:
                            type: string
                          amount:
                            format: int64
                            type: integer
                          token_id:
                            type: string
                        title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                        type: object
                      cw20_payment:
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        title: 'cw20 payments, can be empty or multiple'
                        type: array
                      is_oracle_payment:
                        title: |-
                          boolean to indicate if the payment is for oracle payments, aka it will go
                          through network fees split NOTE: if true the payment can only have amount
                          values(Native coins), no cw20 payments allowed then
                        type: boolean
                      timeout_ns:
                        title: |-
                          timeout after claim/evaluation to create authZ for payment, if 0 then
                          immediate direct payment
                        type: string
                    type: object
                  rejection:
                    properties:
                      account:
                        title: account is the entity account address from which the payment will be made
                        type: string
                      amount:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      contract_1155_payment:
                        properties:
                          address:
                            type: string
                          amount:
                            format: int64
                            type: integer
                          token_id:
                            type: string
                        title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                        type: object
                      cw20_payment:
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        title: 'cw20 payments, can be empty or multiple'
                        type: array
                      is_oracle_payment:
                        title: |-
                          boolean to indicate if the payment is for oracle payments, aka it will go
                          through network fees split NOTE: if true the payment can only have amount
                          values(Native coins), no cw20 payments allowed then
                        type: boolean
                      timeout_ns:
                        title: |-
                          timeout after claim/evaluation to create authZ for payment, if 0 then
                          immediate direct payment
                        type: string
                    type: object
                  submission:
                    properties:
                      account:
                        title: account is the entity account address from which the payment will be made
                        type: string
                      amount:
                        items:
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      contract_1155_payment:
                        properties:
                          address:
                            type: string
                          amount:
                            format: int64
                            type: integer
                          token_id:
                            type: string
                        title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                        type: object
                      cw20_payment:
                        items:
                          properties:
                            address:
                              type: string
                            amount:
                              format: uint64
                              title: |-
                                chose uint64 for now as amounts should be small enough to fit in a
                                uint64(max 18446744073709551615)
                              type: string
                          type: object
                        title: 'cw20 payments, can be empty or multiple'
                        type: array
                      is_oracle_payment:
                        title: |-
                          boolean to indicate if the payment is for oracle payments, aka it will go
                          through network fees split NOTE: if true the payment can only have amount
                          values(Native coins), no cw20 payments allowed then
                        type: boolean
                      timeout_ns:
                        title: |-
                          timeout after claim/evaluation to create authZ for payment, if 0 then
                          immediate direct payment
                        type: string
                    type: object
                title: |-
                  payments is the amount paid for claim submission, evaluation, approval, or
                  rejection
                type: object
              protocol:
                title: protocol is the DID of the claim protocol
                type: string
              quota:
                format: uint64
                title: 'quota is the maximum number of claims that may be submitted, 0 is unlimited'
                type: string
              rejected:
                format: uint64
                title: |-
                  rejected is the number of claims that have been evaluated and rejected
                  (internally calculated)
                type: string
              signer:
                title: signer address
                type: string
              start_date:
                format: date-time
                title: startDate is the date after which claims may be submitted
                type: string
              state:
                default: OPEN
                enum:
                  - OPEN
                  - PAUSED
                  - CLOSED
                title: 'state is the current state of this Collection (open, paused, closed)'
                type: string
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: neibf4cwm6nht
    ixo.claims.v1beta1.QueryCollectionResponse:
      properties:
        collection:
          properties:
            admin:
              title: |-
                admin is the account address that will authorize or revoke agents and
                payments (the grantor), and can update the collection
              type: string
            approved:
              format: uint64
              title: |-
                approved is the number of claims that have been evaluated and approved
                (internally calculated)
              type: string
            count:
              format: uint64
              title: count is the number of claims already submitted (internally calculated)
              type: string
            disputed:
              format: uint64
              title: |-
                disputed is the number of claims that have disputed status (internally
                calculated)
              type: string
            end_date:
              format: date-time
              title: |-
                endDate is the date after which no more claims may be submitted (no endDate
                is allowed)
              type: string
            entity:
              title: entity is the DID of the entity for which the claims are being created
              type: string
            escrow_account:
              title: |-
                escrow_account is the escrow account address for this collection created at
                collection creation, current purpose is to transfer payments to escrow
                account for GUARANTEED payments through intents
              type: string
            evaluated:
              format: uint64
              title: |-
                evaluated is the number of claims that have been evaluated (internally
                calculated)
              type: string
            id:
              title: collection id is the incremented internal id for the collection of claims
              type: string
            intents:
              default: ALLOW
              description: |2-



                 - ALLOW: Allow: Intents can be made for claims, but claims can also be made without
                intents.
                 - DENY: Deny: Intents cannot be made for claims for the collection.
                 - REQUIRED: Required: Claims cannot be made without an associated intent. An intent is
                mandatory before a claim can be submitted.
              enum:
                - ALLOW
                - DENY
                - REQUIRED
              title: |-
                intents is the option for intents for this collection (allow, deny,
                required)
              type: string
            invalidated:
              format: uint64
              title: |-
                invalidated is the number of claims that have been evaluated as invalid
                (internally calculated)
              type: string
            payments:
              properties:
                approval:
                  properties:
                    account:
                      title: account is the entity account address from which the payment will be made
                      type: string
                    amount:
                      items:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    contract_1155_payment:
                      properties:
                        address:
                          type: string
                        amount:
                          format: int64
                          type: integer
                        token_id:
                          type: string
                      title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                      type: object
                    cw20_payment:
                      items:
                        properties:
                          address:
                            type: string
                          amount:
                            format: uint64
                            title: |-
                              chose uint64 for now as amounts should be small enough to fit in a
                              uint64(max 18446744073709551615)
                            type: string
                        type: object
                      title: 'cw20 payments, can be empty or multiple'
                      type: array
                    is_oracle_payment:
                      title: |-
                        boolean to indicate if the payment is for oracle payments, aka it will go
                        through network fees split NOTE: if true the payment can only have amount
                        values(Native coins), no cw20 payments allowed then
                      type: boolean
                    timeout_ns:
                      title: |-
                        timeout after claim/evaluation to create authZ for payment, if 0 then
                        immediate direct payment
                      type: string
                  type: object
                evaluation:
                  properties:
                    account:
                      title: account is the entity account address from which the payment will be made
                      type: string
                    amount:
                      items:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    contract_1155_payment:
                      properties:
                        address:
                          type: string
                        amount:
                          format: int64
                          type: integer
                        token_id:
                          type: string
                      title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                      type: object
                    cw20_payment:
                      items:
                        properties:
                          address:
                            type: string
                          amount:
                            format: uint64
                            title: |-
                              chose uint64 for now as amounts should be small enough to fit in a
                              uint64(max 18446744073709551615)
                            type: string
                        type: object
                      title: 'cw20 payments, can be empty or multiple'
                      type: array
                    is_oracle_payment:
                      title: |-
                        boolean to indicate if the payment is for oracle payments, aka it will go
                        through network fees split NOTE: if true the payment can only have amount
                        values(Native coins), no cw20 payments allowed then
                      type: boolean
                    timeout_ns:
                      title: |-
                        timeout after claim/evaluation to create authZ for payment, if 0 then
                        immediate direct payment
                      type: string
                  type: object
                rejection:
                  properties:
                    account:
                      title: account is the entity account address from which the payment will be made
                      type: string
                    amount:
                      items:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    contract_1155_payment:
                      properties:
                        address:
                          type: string
                        amount:
                          format: int64
                          type: integer
                        token_id:
                          type: string
                      title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                      type: object
                    cw20_payment:
                      items:
                        properties:
                          address:
                            type: string
                          amount:
                            format: uint64
                            title: |-
                              chose uint64 for now as amounts should be small enough to fit in a
                              uint64(max 18446744073709551615)
                            type: string
                        type: object
                      title: 'cw20 payments, can be empty or multiple'
                      type: array
                    is_oracle_payment:
                      title: |-
                        boolean to indicate if the payment is for oracle payments, aka it will go
                        through network fees split NOTE: if true the payment can only have amount
                        values(Native coins), no cw20 payments allowed then
                      type: boolean
                    timeout_ns:
                      title: |-
                        timeout after claim/evaluation to create authZ for payment, if 0 then
                        immediate direct payment
                      type: string
                  type: object
                submission:
                  properties:
                    account:
                      title: account is the entity account address from which the payment will be made
                      type: string
                    amount:
                      items:
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    contract_1155_payment:
                      properties:
                        address:
                          type: string
                        amount:
                          format: int64
                          type: integer
                        token_id:
                          type: string
                      title: 'if empty(nil) then no contract payment, not allowed for Evaluation Payment'
                      type: object
                    cw20_payment:
                      items:
                        properties:
                          address:
                            type: string
                          amount:
                            format: uint64
                            title: |-
                              chose uint64 for now as amounts should be small enough to fit in a
                              uint64(max 18446744073709551615)
                            type: string
                        type: object
                      title: 'cw20 payments, can be empty or multiple'
                      type: array
                    is_oracle_payment:
                      title: |-
                        boolean to indicate if the payment is for oracle payments, aka it will go
                        through network fees split NOTE: if true the payment can only have amount
                        values(Native coins), no cw20 payments allowed then
                      type: boolean
                    timeout_ns:
                      title: |-
                        timeout after claim/evaluation to create authZ for payment, if 0 then
                        immediate direct payment
                      type: string
                  type: object
              title: |-
                payments is the amount paid for claim submission, evaluation, approval, or
                rejection
              type: object
            protocol:
              title: protocol is the DID of the claim protocol
              type: string
            quota:
              format: uint64
              title: 'quota is the maximum number of claims that may be submitted, 0 is unlimited'
              type: string
            rejected:
              format: uint64
              title: |-
                rejected is the number of claims that have been evaluated and rejected
                (internally calculated)
              type: string
            signer:
              title: signer address
              type: string
            start_date:
              format: date-time
              title: startDate is the date after which claims may be submitted
              type: string
            state:
              default: OPEN
              enum:
                - OPEN
                - PAUSED
                - CLOSED
              title: 'state is the current state of this Collection (open, paused, closed)'
              type: string
          type: object
      type: object
      x-stoplight:
        id: v58odt4et9es5
    ixo.claims.v1beta1.QueryDisputeListResponse:
      properties:
        disputes:
          items:
            properties:
              data:
                properties:
                  encrypted:
                    type: boolean
                  proof:
                    type: string
                  type:
                    type: string
                  uri:
                    type: string
                type: object
              subject_id:
                type: string
              type:
                format: int32
                title: 'type is expressed as an integer, interpreted by the client'
                type: integer
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: pd51sbxdmjr4k
    ixo.claims.v1beta1.QueryDisputeResponse:
      properties:
        dispute:
          properties:
            data:
              properties:
                encrypted:
                  type: boolean
                proof:
                  type: string
                type:
                  type: string
                uri:
                  type: string
              type: object
            subject_id:
              type: string
            type:
              format: int32
              title: 'type is expressed as an integer, interpreted by the client'
              type: integer
          type: object
      type: object
      x-stoplight:
        id: grjchxb29horz
    ixo.claims.v1beta1.QueryIntentListResponse:
      properties:
        intents:
          items:
            description: Intent defines the structure for a service agent's claim intent.
            properties:
              agent_address:
                description: The service agent's address.
                type: string
              agent_did:
                description: The service agent's DID (Decentralized Identifier).
                type: string
              amount:
                description: 'The payment amount the agent intends to claim, if any.'
                items:
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              claim_id:
                title: 'claim_id (optional, set when claim is submitted)'
                type: string
              collection_id:
                description: The id of the collection this intent is linked to.
                type: string
              created_at:
                description: The time the intent was created.
                format: date-time
                type: string
              cw20_payment:
                description: 'The CW20Payment amount the agent intends to claim, if any.'
                items:
                  properties:
                    address:
                      type: string
                    amount:
                      format: uint64
                      title: |-
                        chose uint64 for now as amounts should be small enough to fit in a
                        uint64(max 18446744073709551615)
                      type: string
                  type: object
                type: array
              escrow_address:
                title: the escrow account address
                type: string
              expire_at:
                description: |-
                  Timeout period for the intent. If the claim is not submitted by this time,
                  the intent expires.
                format: date-time
                type: string
              from_address:
                title: the address the escrow payment came from
                type: string
              id:
                title: id is the incremented internal id for the intent
                type: string
              status:
                default: ACTIVE
                description: 'Status of the intent (e.g., "ACTIVE" or "FULFILLED").'
                enum:
                  - ACTIVE
                  - FULFILLED
                  - EXPIRED
                title: |-
                  - ACTIVE: Active: Intent is created and active, payments have been transferred to
                  escrow if there is any
                   - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
                  be released on claim APPROVAL, or funds will be reverted on claim REJECTION
                  or DISPUTE
                   - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
                  escrow
                type: string
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: c28s9bubw4wzo
    ixo.claims.v1beta1.QueryIntentResponse:
      properties:
        intent:
          description: Intent defines the structure for a service agent's claim intent.
          properties:
            agent_address:
              description: The service agent's address.
              type: string
            agent_did:
              description: The service agent's DID (Decentralized Identifier).
              type: string
            amount:
              description: 'The payment amount the agent intends to claim, if any.'
              items:
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            claim_id:
              title: 'claim_id (optional, set when claim is submitted)'
              type: string
            collection_id:
              description: The id of the collection this intent is linked to.
              type: string
            created_at:
              description: The time the intent was created.
              format: date-time
              type: string
            cw20_payment:
              description: 'The CW20Payment amount the agent intends to claim, if any.'
              items:
                properties:
                  address:
                    type: string
                  amount:
                    format: uint64
                    title: |-
                      chose uint64 for now as amounts should be small enough to fit in a
                      uint64(max 18446744073709551615)
                    type: string
                type: object
              type: array
            escrow_address:
              title: the escrow account address
              type: string
            expire_at:
              description: |-
                Timeout period for the intent. If the claim is not submitted by this time,
                the intent expires.
              format: date-time
              type: string
            from_address:
              title: the address the escrow payment came from
              type: string
            id:
              title: id is the incremented internal id for the intent
              type: string
            status:
              default: ACTIVE
              description: 'Status of the intent (e.g., "ACTIVE" or "FULFILLED").'
              enum:
                - ACTIVE
                - FULFILLED
                - EXPIRED
              title: |-
                - ACTIVE: Active: Intent is created and active, payments have been transferred to
                escrow if there is any
                 - FULFILLED: Fulfilled: Intent is fulfilled, was used to create a claim and funds will
                be released on claim APPROVAL, or funds will be reverted on claim REJECTION
                or DISPUTE
                 - EXPIRED: Expired: Intent has expired, payments have been transferred back out of
                escrow
              type: string
          type: object
      type: object
      x-stoplight:
        id: xtgjct5oubzwe
    ixo.claims.v1beta1.QueryParamsResponse:
      properties:
        params:
          description: params holds all the parameters of this module.
          properties:
            collection_sequence:
              format: uint64
              type: string
            intent_sequence:
              format: uint64
              type: string
            ixo_account:
              type: string
            network_fee_percentage:
              type: string
            node_fee_percentage:
              type: string
          type: object
      type: object
      x-stoplight:
        id: 6rta1lujxsxg4
    ixo.entity.v1beta1.Entity:
      properties:
        accounts:
          items:
            properties:
              address:
                type: string
              name:
                type: string
            type: object
          title: module accounts created for entity
          type: array
        credentials:
          items:
            type: string
          title: Credentials of the entity to be verified
          type: array
        end_date:
          format: date-time
          title: |-
            End Date of the Entity as defined by the implementer and interpreted by
            Client applications
          type: string
        entity_verified:
          title: Used as check whether the credentials of entity is verified
          type: boolean
        id:
          description: id represents the id for the entity document.
          type: string
        metadata:
          properties:
            created:
              format: date-time
              type: string
            updated:
              format: date-time
              type: string
            version_id:
              type: string
          title: |-
            Metadata concerning the Entity such as versionId, created, updated and
            deactivated
          type: object
        relayer_node:
          title: Did of the operator through which the Entity was created
          type: string
        start_date:
          format: date-time
          title: |-
            Start Date of the Entity as defined by the implementer and interpreted by
            Client applications
          type: string
        status:
          format: int32
          title: |-
            Status of the Entity as defined by the implementer and interpreted by
            Client applications
          type: integer
        type:
          title: 'Type of entity, eg protocol or asset'
          type: string
      type: object
      x-stoplight:
        id: xa674inf4balg
    ixo.entity.v1beta1.EntityAccount:
      properties:
        address:
          type: string
        name:
          type: string
      type: object
      x-stoplight:
        id: 5xggeagq9nf8j
    ixo.entity.v1beta1.EntityMetadata:
      properties:
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        version_id:
          type: string
      title: EntityMetadata defines metadata associated to a entity
      type: object
      x-stoplight:
        id: s8twki5pfj6zj
    ixo.entity.v1beta1.Params:
      properties:
        createSequence:
          format: uint64
          type: string
        nftContractAddress:
          type: string
        nftContractMinter:
          type: string
      type: object
      x-stoplight:
        id: s63wdnsmp8rlx
    ixo.entity.v1beta1.QueryEntityIidDocumentResponse:
      properties:
        iidDocument:
          properties:
            accordedRight:
              items:
                properties:
                  id:
                    type: string
                  mechanism:
                    type: string
                  message:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            alsoKnownAs:
              type: string
            assertionMethod:
              items:
                type: string
              title: |-
                Used to specify how the DID subject is expected to express claims,
                such as for the purposes of issuing a Verifiable Credential.
                cfr. https://www.w3.org/TR/did-core/#assertion
              type: array
            authentication:
              items:
                type: string
              title: |-
                NOTE: below this line there are the relationships
                Authentication represents public key associated with the did document.
                cfr. https://www.w3.org/TR/did-core/#authentication
              type: array
            capabilityDelegation:
              items:
                type: string
              title: |-
                Used to specify a mechanism that might be used by the DID subject
                to delegate a cryptographic capability to another party.
                https://www.w3.org/TR/did-core/#capability-delegation
              type: array
            capabilityInvocation:
              items:
                type: string
              title: |-
                Used to specify a verification method that might be used by the DID subject
                to invoke a cryptographic capability, such as the authorization
                to update the DID Document.
                https://www.w3.org/TR/did-core/#capability-invocation
              type: array
            context:
              description: '@context is spec for did document.'
              items:
                properties:
                  key:
                    type: string
                  val:
                    type: string
                type: object
              type: array
            controller:
              items:
                type: string
              title: |-
                A DID controller is an entity that is authorized to make changes to a DID
                document. cfr. https://www.w3.org/TR/did-core/#did-controller
              type: array
            id:
              description: id represents the id for the did document.
              type: string
            keyAgreement:
              items:
                type: string
              title: |-
                used to specify how an entity can generate encryption material
                in order to transmit confidential information intended for the DID subject.
                https://www.w3.org/TR/did-core/#key-agreement
              type: array
            linkedClaim:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedEntity:
              items:
                properties:
                  id:
                    type: string
                  relationship:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedResource:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  mediaType:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            metadata:
              properties:
                created:
                  format: date-time
                  type: string
                deactivated:
                  type: boolean
                updated:
                  format: date-time
                  type: string
                versionId:
                  type: string
              title: |-
                Metadata concerning the IidDocument such as versionId, created, updated and
                deactivated
              type: object
            service:
              items:
                properties:
                  id:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                Services are used in DID documents to express ways of communicating
                with the DID subject or associated entities.
                https://www.w3.org/TR/did-core/#services
              type: array
            verificationMethod:
              items:
                properties:
                  blockchainAccountID:
                    type: string
                  controller:
                    type: string
                  id:
                    type: string
                  publicKeyBase58:
                    type: string
                  publicKeyHex:
                    type: string
                  publicKeyMultibase:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                A DID document can express verification methods,
                such as cryptographic public keys, which can be used
                to authenticate or authorize interactions with the DID subject or
                associated parties. https://www.w3.org/TR/did-core/#verification-methods
              type: array
          type: object
      type: object
      x-stoplight:
        id: sz2nnmdwhp60z
    ixo.entity.v1beta1.QueryEntityListResponse:
      properties:
        entities:
          items:
            properties:
              accounts:
                items:
                  properties:
                    address:
                      type: string
                    name:
                      type: string
                  type: object
                title: module accounts created for entity
                type: array
              credentials:
                items:
                  type: string
                title: Credentials of the entity to be verified
                type: array
              end_date:
                format: date-time
                title: |-
                  End Date of the Entity as defined by the implementer and interpreted by
                  Client applications
                type: string
              entity_verified:
                title: Used as check whether the credentials of entity is verified
                type: boolean
              id:
                description: id represents the id for the entity document.
                type: string
              metadata:
                properties:
                  created:
                    format: date-time
                    type: string
                  updated:
                    format: date-time
                    type: string
                  version_id:
                    type: string
                title: |-
                  Metadata concerning the Entity such as versionId, created, updated and
                  deactivated
                type: object
              relayer_node:
                title: Did of the operator through which the Entity was created
                type: string
              start_date:
                format: date-time
                title: |-
                  Start Date of the Entity as defined by the implementer and interpreted by
                  Client applications
                type: string
              status:
                format: int32
                title: |-
                  Status of the Entity as defined by the implementer and interpreted by
                  Client applications
                type: integer
              type:
                title: 'Type of entity, eg protocol or asset'
                type: string
            type: object
          type: array
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: huaueu9ltoyuz
    ixo.entity.v1beta1.QueryEntityMetadataResponse:
      properties:
        entity:
          properties:
            accounts:
              items:
                properties:
                  address:
                    type: string
                  name:
                    type: string
                type: object
              title: module accounts created for entity
              type: array
            credentials:
              items:
                type: string
              title: Credentials of the entity to be verified
              type: array
            end_date:
              format: date-time
              title: |-
                End Date of the Entity as defined by the implementer and interpreted by
                Client applications
              type: string
            entity_verified:
              title: Used as check whether the credentials of entity is verified
              type: boolean
            id:
              description: id represents the id for the entity document.
              type: string
            metadata:
              properties:
                created:
                  format: date-time
                  type: string
                updated:
                  format: date-time
                  type: string
                version_id:
                  type: string
              title: |-
                Metadata concerning the Entity such as versionId, created, updated and
                deactivated
              type: object
            relayer_node:
              title: Did of the operator through which the Entity was created
              type: string
            start_date:
              format: date-time
              title: |-
                Start Date of the Entity as defined by the implementer and interpreted by
                Client applications
              type: string
            status:
              format: int32
              title: |-
                Status of the Entity as defined by the implementer and interpreted by
                Client applications
              type: integer
            type:
              title: 'Type of entity, eg protocol or asset'
              type: string
          type: object
      type: object
      x-stoplight:
        id: 882lomhgea8ka
    ixo.entity.v1beta1.QueryEntityResponse:
      properties:
        entity:
          properties:
            accounts:
              items:
                properties:
                  address:
                    type: string
                  name:
                    type: string
                type: object
              title: module accounts created for entity
              type: array
            credentials:
              items:
                type: string
              title: Credentials of the entity to be verified
              type: array
            end_date:
              format: date-time
              title: |-
                End Date of the Entity as defined by the implementer and interpreted by
                Client applications
              type: string
            entity_verified:
              title: Used as check whether the credentials of entity is verified
              type: boolean
            id:
              description: id represents the id for the entity document.
              type: string
            metadata:
              properties:
                created:
                  format: date-time
                  type: string
                updated:
                  format: date-time
                  type: string
                version_id:
                  type: string
              title: |-
                Metadata concerning the Entity such as versionId, created, updated and
                deactivated
              type: object
            relayer_node:
              title: Did of the operator through which the Entity was created
              type: string
            start_date:
              format: date-time
              title: |-
                Start Date of the Entity as defined by the implementer and interpreted by
                Client applications
              type: string
            status:
              format: int32
              title: |-
                Status of the Entity as defined by the implementer and interpreted by
                Client applications
              type: integer
            type:
              title: 'Type of entity, eg protocol or asset'
              type: string
          type: object
        iidDocument:
          properties:
            accordedRight:
              items:
                properties:
                  id:
                    type: string
                  mechanism:
                    type: string
                  message:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            alsoKnownAs:
              type: string
            assertionMethod:
              items:
                type: string
              title: |-
                Used to specify how the DID subject is expected to express claims,
                such as for the purposes of issuing a Verifiable Credential.
                cfr. https://www.w3.org/TR/did-core/#assertion
              type: array
            authentication:
              items:
                type: string
              title: |-
                NOTE: below this line there are the relationships
                Authentication represents public key associated with the did document.
                cfr. https://www.w3.org/TR/did-core/#authentication
              type: array
            capabilityDelegation:
              items:
                type: string
              title: |-
                Used to specify a mechanism that might be used by the DID subject
                to delegate a cryptographic capability to another party.
                https://www.w3.org/TR/did-core/#capability-delegation
              type: array
            capabilityInvocation:
              items:
                type: string
              title: |-
                Used to specify a verification method that might be used by the DID subject
                to invoke a cryptographic capability, such as the authorization
                to update the DID Document.
                https://www.w3.org/TR/did-core/#capability-invocation
              type: array
            context:
              description: '@context is spec for did document.'
              items:
                properties:
                  key:
                    type: string
                  val:
                    type: string
                type: object
              type: array
            controller:
              items:
                type: string
              title: |-
                A DID controller is an entity that is authorized to make changes to a DID
                document. cfr. https://www.w3.org/TR/did-core/#did-controller
              type: array
            id:
              description: id represents the id for the did document.
              type: string
            keyAgreement:
              items:
                type: string
              title: |-
                used to specify how an entity can generate encryption material
                in order to transmit confidential information intended for the DID subject.
                https://www.w3.org/TR/did-core/#key-agreement
              type: array
            linkedClaim:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedEntity:
              items:
                properties:
                  id:
                    type: string
                  relationship:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedResource:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  mediaType:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            metadata:
              properties:
                created:
                  format: date-time
                  type: string
                deactivated:
                  type: boolean
                updated:
                  format: date-time
                  type: string
                versionId:
                  type: string
              title: |-
                Metadata concerning the IidDocument such as versionId, created, updated and
                deactivated
              type: object
            service:
              items:
                properties:
                  id:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                Services are used in DID documents to express ways of communicating
                with the DID subject or associated entities.
                https://www.w3.org/TR/did-core/#services
              type: array
            verificationMethod:
              items:
                properties:
                  blockchainAccountID:
                    type: string
                  controller:
                    type: string
                  id:
                    type: string
                  publicKeyBase58:
                    type: string
                  publicKeyHex:
                    type: string
                  publicKeyMultibase:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                A DID document can express verification methods,
                such as cryptographic public keys, which can be used
                to authenticate or authorize interactions with the DID subject or
                associated parties. https://www.w3.org/TR/did-core/#verification-methods
              type: array
          type: object
      type: object
      x-stoplight:
        id: 28qmaxvogyx91
    ixo.entity.v1beta1.QueryEntityVerifiedResponse:
      properties:
        entity_verified:
          type: boolean
      type: object
      x-stoplight:
        id: puwqqv7obbb0n
    ixo.entity.v1beta1.QueryParamsResponse:
      properties:
        params:
          description: params holds all the parameters of this module.
          properties:
            createSequence:
              format: uint64
              type: string
            nftContractAddress:
              type: string
            nftContractMinter:
              type: string
          type: object
      type: object
      x-stoplight:
        id: x58n7z74zjmmi
    ixo.iid.v1beta1.AccordedRight:
      properties:
        id:
          type: string
        mechanism:
          type: string
        message:
          type: string
        service:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: 3188evmiio452
    ixo.iid.v1beta1.Context:
      properties:
        key:
          type: string
        val:
          type: string
      type: object
      x-stoplight:
        id: rkvty74438peh
    ixo.iid.v1beta1.IidDocument:
      properties:
        accordedRight:
          items:
            properties:
              id:
                type: string
              mechanism:
                type: string
              message:
                type: string
              service:
                type: string
              type:
                type: string
            type: object
          type: array
        alsoKnownAs:
          type: string
        assertionMethod:
          items:
            type: string
          title: |-
            Used to specify how the DID subject is expected to express claims,
            such as for the purposes of issuing a Verifiable Credential.
            cfr. https://www.w3.org/TR/did-core/#assertion
          type: array
        authentication:
          items:
            type: string
          title: |-
            NOTE: below this line there are the relationships
            Authentication represents public key associated with the did document.
            cfr. https://www.w3.org/TR/did-core/#authentication
          type: array
        capabilityDelegation:
          items:
            type: string
          title: |-
            Used to specify a mechanism that might be used by the DID subject
            to delegate a cryptographic capability to another party.
            https://www.w3.org/TR/did-core/#capability-delegation
          type: array
        capabilityInvocation:
          items:
            type: string
          title: |-
            Used to specify a verification method that might be used by the DID subject
            to invoke a cryptographic capability, such as the authorization
            to update the DID Document.
            https://www.w3.org/TR/did-core/#capability-invocation
          type: array
        context:
          description: '@context is spec for did document.'
          items:
            properties:
              key:
                type: string
              val:
                type: string
            type: object
          type: array
        controller:
          items:
            type: string
          title: |-
            A DID controller is an entity that is authorized to make changes to a DID
            document. cfr. https://www.w3.org/TR/did-core/#did-controller
          type: array
        id:
          description: id represents the id for the did document.
          type: string
        keyAgreement:
          items:
            type: string
          title: |-
            used to specify how an entity can generate encryption material
            in order to transmit confidential information intended for the DID subject.
            https://www.w3.org/TR/did-core/#key-agreement
          type: array
        linkedClaim:
          items:
            properties:
              description:
                type: string
              encrypted:
                type: string
              id:
                type: string
              proof:
                type: string
              right:
                type: string
              serviceEndpoint:
                type: string
              type:
                type: string
            type: object
          type: array
        linkedEntity:
          items:
            properties:
              id:
                type: string
              relationship:
                type: string
              service:
                type: string
              type:
                type: string
            type: object
          type: array
        linkedResource:
          items:
            properties:
              description:
                type: string
              encrypted:
                type: string
              id:
                type: string
              mediaType:
                type: string
              proof:
                type: string
              right:
                type: string
              serviceEndpoint:
                type: string
              type:
                type: string
            type: object
          type: array
        metadata:
          properties:
            created:
              format: date-time
              type: string
            deactivated:
              type: boolean
            updated:
              format: date-time
              type: string
            versionId:
              type: string
          title: |-
            Metadata concerning the IidDocument such as versionId, created, updated and
            deactivated
          type: object
        service:
          items:
            properties:
              id:
                type: string
              serviceEndpoint:
                type: string
              type:
                type: string
            type: object
          title: |-
            Services are used in DID documents to express ways of communicating
            with the DID subject or associated entities.
            https://www.w3.org/TR/did-core/#services
          type: array
        verificationMethod:
          items:
            properties:
              blockchainAccountID:
                type: string
              controller:
                type: string
              id:
                type: string
              publicKeyBase58:
                type: string
              publicKeyHex:
                type: string
              publicKeyMultibase:
                type: string
              type:
                type: string
            type: object
          title: |-
            A DID document can express verification methods,
            such as cryptographic public keys, which can be used
            to authenticate or authorize interactions with the DID subject or
            associated parties. https://www.w3.org/TR/did-core/#verification-methods
          type: array
      type: object
      x-stoplight:
        id: 23a97gsl76n5r
    ixo.iid.v1beta1.IidMetadata:
      properties:
        created:
          format: date-time
          type: string
        deactivated:
          type: boolean
        updated:
          format: date-time
          type: string
        versionId:
          type: string
      type: object
      x-stoplight:
        id: apeqzqn7hgo2l
    ixo.iid.v1beta1.LinkedClaim:
      properties:
        description:
          type: string
        encrypted:
          type: string
        id:
          type: string
        proof:
          type: string
        right:
          type: string
        serviceEndpoint:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: g904wqqcftb5b
    ixo.iid.v1beta1.LinkedEntity:
      properties:
        id:
          type: string
        relationship:
          type: string
        service:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: kslbq8z2xh7or
    ixo.iid.v1beta1.LinkedResource:
      properties:
        description:
          type: string
        encrypted:
          type: string
        id:
          type: string
        mediaType:
          type: string
        proof:
          type: string
        right:
          type: string
        serviceEndpoint:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: phgcjqd1uhmvv
    ixo.iid.v1beta1.QueryIidDocumentResponse:
      properties:
        iidDocument:
          properties:
            accordedRight:
              items:
                properties:
                  id:
                    type: string
                  mechanism:
                    type: string
                  message:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            alsoKnownAs:
              type: string
            assertionMethod:
              items:
                type: string
              title: |-
                Used to specify how the DID subject is expected to express claims,
                such as for the purposes of issuing a Verifiable Credential.
                cfr. https://www.w3.org/TR/did-core/#assertion
              type: array
            authentication:
              items:
                type: string
              title: |-
                NOTE: below this line there are the relationships
                Authentication represents public key associated with the did document.
                cfr. https://www.w3.org/TR/did-core/#authentication
              type: array
            capabilityDelegation:
              items:
                type: string
              title: |-
                Used to specify a mechanism that might be used by the DID subject
                to delegate a cryptographic capability to another party.
                https://www.w3.org/TR/did-core/#capability-delegation
              type: array
            capabilityInvocation:
              items:
                type: string
              title: |-
                Used to specify a verification method that might be used by the DID subject
                to invoke a cryptographic capability, such as the authorization
                to update the DID Document.
                https://www.w3.org/TR/did-core/#capability-invocation
              type: array
            context:
              description: '@context is spec for did document.'
              items:
                properties:
                  key:
                    type: string
                  val:
                    type: string
                type: object
              type: array
            controller:
              items:
                type: string
              title: |-
                A DID controller is an entity that is authorized to make changes to a DID
                document. cfr. https://www.w3.org/TR/did-core/#did-controller
              type: array
            id:
              description: id represents the id for the did document.
              type: string
            keyAgreement:
              items:
                type: string
              title: |-
                used to specify how an entity can generate encryption material
                in order to transmit confidential information intended for the DID subject.
                https://www.w3.org/TR/did-core/#key-agreement
              type: array
            linkedClaim:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedEntity:
              items:
                properties:
                  id:
                    type: string
                  relationship:
                    type: string
                  service:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            linkedResource:
              items:
                properties:
                  description:
                    type: string
                  encrypted:
                    type: string
                  id:
                    type: string
                  mediaType:
                    type: string
                  proof:
                    type: string
                  right:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            metadata:
              properties:
                created:
                  format: date-time
                  type: string
                deactivated:
                  type: boolean
                updated:
                  format: date-time
                  type: string
                versionId:
                  type: string
              title: |-
                Metadata concerning the IidDocument such as versionId, created, updated and
                deactivated
              type: object
            service:
              items:
                properties:
                  id:
                    type: string
                  serviceEndpoint:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                Services are used in DID documents to express ways of communicating
                with the DID subject or associated entities.
                https://www.w3.org/TR/did-core/#services
              type: array
            verificationMethod:
              items:
                properties:
                  blockchainAccountID:
                    type: string
                  controller:
                    type: string
                  id:
                    type: string
                  publicKeyBase58:
                    type: string
                  publicKeyHex:
                    type: string
                  publicKeyMultibase:
                    type: string
                  type:
                    type: string
                type: object
              title: |-
                A DID document can express verification methods,
                such as cryptographic public keys, which can be used
                to authenticate or authorize interactions with the DID subject or
                associated parties. https://www.w3.org/TR/did-core/#verification-methods
              type: array
          type: object
      type: object
      x-stoplight:
        id: mqtoqiidjvdq5
    ixo.iid.v1beta1.QueryIidDocumentsResponse:
      properties:
        iidDocuments:
          items:
            properties:
              accordedRight:
                items:
                  properties:
                    id:
                      type: string
                    mechanism:
                      type: string
                    message:
                      type: string
                    service:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              alsoKnownAs:
                type: string
              assertionMethod:
                items:
                  type: string
                title: |-
                  Used to specify how the DID subject is expected to express claims,
                  such as for the purposes of issuing a Verifiable Credential.
                  cfr. https://www.w3.org/TR/did-core/#assertion
                type: array
              authentication:
                items:
                  type: string
                title: |-
                  NOTE: below this line there are the relationships
                  Authentication represents public key associated with the did document.
                  cfr. https://www.w3.org/TR/did-core/#authentication
                type: array
              capabilityDelegation:
                items:
                  type: string
                title: |-
                  Used to specify a mechanism that might be used by the DID subject
                  to delegate a cryptographic capability to another party.
                  https://www.w3.org/TR/did-core/#capability-delegation
                type: array
              capabilityInvocation:
                items:
                  type: string
                title: |-
                  Used to specify a verification method that might be used by the DID subject
                  to invoke a cryptographic capability, such as the authorization
                  to update the DID Document.
                  https://www.w3.org/TR/did-core/#capability-invocation
                type: array
              context:
                description: '@context is spec for did document.'
                items:
                  properties:
                    key:
                      type: string
                    val:
                      type: string
                  type: object
                type: array
              controller:
                items:
                  type: string
                title: |-
                  A DID controller is an entity that is authorized to make changes to a DID
                  document. cfr. https://www.w3.org/TR/did-core/#did-controller
                type: array
              id:
                description: id represents the id for the did document.
                type: string
              keyAgreement:
                items:
                  type: string
                title: |-
                  used to specify how an entity can generate encryption material
                  in order to transmit confidential information intended for the DID subject.
                  https://www.w3.org/TR/did-core/#key-agreement
                type: array
              linkedClaim:
                items:
                  properties:
                    description:
                      type: string
                    encrypted:
                      type: string
                    id:
                      type: string
                    proof:
                      type: string
                    right:
                      type: string
                    serviceEndpoint:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              linkedEntity:
                items:
                  properties:
                    id:
                      type: string
                    relationship:
                      type: string
                    service:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              linkedResource:
                items:
                  properties:
                    description:
                      type: string
                    encrypted:
                      type: string
                    id:
                      type: string
                    mediaType:
                      type: string
                    proof:
                      type: string
                    right:
                      type: string
                    serviceEndpoint:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
              metadata:
                properties:
                  created:
                    format: date-time
                    type: string
                  deactivated:
                    type: boolean
                  updated:
                    format: date-time
                    type: string
                  versionId:
                    type: string
                title: |-
                  Metadata concerning the IidDocument such as versionId, created, updated and
                  deactivated
                type: object
              service:
                items:
                  properties:
                    id:
                      type: string
                    serviceEndpoint:
                      type: string
                    type:
                      type: string
                  type: object
                title: |-
                  Services are used in DID documents to express ways of communicating
                  with the DID subject or associated entities.
                  https://www.w3.org/TR/did-core/#services
                type: array
              verificationMethod:
                items:
                  properties:
                    blockchainAccountID:
                      type: string
                    controller:
                      type: string
                    id:
                      type: string
                    publicKeyBase58:
                      type: string
                    publicKeyHex:
                      type: string
                    publicKeyMultibase:
                      type: string
                    type:
                      type: string
                  type: object
                title: |-
                  A DID document can express verification methods,
                  such as cryptographic public keys, which can be used
                  to authenticate or authorize interactions with the DID subject or
                  associated parties. https://www.w3.org/TR/did-core/#verification-methods
                type: array
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
      type: object
      x-stoplight:
        id: v321ikjop72iv
    ixo.iid.v1beta1.Service:
      properties:
        id:
          type: string
        serviceEndpoint:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: 78t2qoc70by6g
    ixo.iid.v1beta1.VerificationMethod:
      properties:
        blockchainAccountID:
          type: string
        controller:
          type: string
        id:
          type: string
        publicKeyBase58:
          type: string
        publicKeyHex:
          type: string
        publicKeyMultibase:
          type: string
        type:
          type: string
      type: object
      x-stoplight:
        id: 0ir8l5hvtngo6
    ixo.token.v1beta1.Params:
      properties:
        ixo1155_contract_code:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: 0znjka6vvu5aw
    ixo.token.v1beta1.QueryParamsResponse:
      properties:
        params:
          description: params holds all the parameters of this module.
          properties:
            ixo1155_contract_code:
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: qr4rz4kxb5gud
    ixo.token.v1beta1.QueryTokenDocResponse:
      properties:
        tokenDoc:
          properties:
            cancelled:
              items:
                properties:
                  amount:
                    type: string
                  id:
                    type: string
                  owner:
                    type: string
                  reason:
                    type: string
                type: object
              title: |-
                tokens that has been cancelled for this Token with specific name and
                contract address
              type: array
            cap:
              title: |-
                cap is the maximum number of tokens with this name that can be minted, 0 is
                unlimited
              type: string
            class:
              title: class is the token protocol entity DID (validated)
              type: string
            contract_address:
              title: generated on token initiation
              type: string
            description:
              title: description is any arbitrary description
              type: string
            image:
              title: image is the image url for the token
              type: string
            minter:
              title: address of minter
              type: string
            name:
              title: 'name is the token name, which must be unique (namespace)'
              type: string
            paused:
              title: stop allowance of token minter temporarily
              type: boolean
            retired:
              items:
                properties:
                  amount:
                    type: string
                  id:
                    type: string
                  jurisdiction:
                    type: string
                  owner:
                    type: string
                  reason:
                    type: string
                type: object
              title: |-
                tokens that has been retired for this Token with specific name and contract
                address
              type: array
            stopped:
              title: stop allowance of token minter permanently
              type: boolean
            supply:
              title: 'how much has already been minted for this Token type, aka the supply'
              type: string
            type:
              title: type is the token type (eg ixo1155)
              type: string
          type: object
      type: object
      x-stoplight:
        id: xvcusjf789ifq
    ixo.token.v1beta1.QueryTokenListResponse:
      properties:
        pagination:
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
          properties:
            next_key:
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
              type: string
            total:
              format: uint64
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
          type: object
        tokenDocs:
          items:
            properties:
              cancelled:
                items:
                  properties:
                    amount:
                      type: string
                    id:
                      type: string
                    owner:
                      type: string
                    reason:
                      type: string
                  type: object
                title: |-
                  tokens that has been cancelled for this Token with specific name and
                  contract address
                type: array
              cap:
                title: |-
                  cap is the maximum number of tokens with this name that can be minted, 0 is
                  unlimited
                type: string
              class:
                title: class is the token protocol entity DID (validated)
                type: string
              contract_address:
                title: generated on token initiation
                type: string
              description:
                title: description is any arbitrary description
                type: string
              image:
                title: image is the image url for the token
                type: string
              minter:
                title: address of minter
                type: string
              name:
                title: 'name is the token name, which must be unique (namespace)'
                type: string
              paused:
                title: stop allowance of token minter temporarily
                type: boolean
              retired:
                items:
                  properties:
                    amount:
                      type: string
                    id:
                      type: string
                    jurisdiction:
                      type: string
                    owner:
                      type: string
                    reason:
                      type: string
                  type: object
                title: |-
                  tokens that has been retired for this Token with specific name and contract
                  address
                type: array
              stopped:
                title: stop allowance of token minter permanently
                type: boolean
              supply:
                title: 'how much has already been minted for this Token type, aka the supply'
                type: string
              type:
                title: type is the token type (eg ixo1155)
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: kyqhu04q3iujr
    ixo.token.v1beta1.QueryTokenMetadataResponse:
      properties:
        decimals:
          type: string
        description:
          type: string
        image:
          type: string
        index:
          type: string
        name:
          type: string
        properties:
          properties:
            cap:
              type: string
            class:
              type: string
            collection:
              type: string
            linkedResources:
              items:
                properties:
                  encrypted:
                    type: boolean
                  id:
                    title: did of entity to map token to
                    type: string
                  proof:
                    type: string
                  type:
                    type: string
                  uri:
                    title: media type value should always be "application/json"
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: hpn1316e58q9h
    ixo.token.v1beta1.Token:
      properties:
        cancelled:
          items:
            properties:
              amount:
                type: string
              id:
                type: string
              owner:
                type: string
              reason:
                type: string
            type: object
          title: |-
            tokens that has been cancelled for this Token with specific name and
            contract address
          type: array
        cap:
          title: |-
            cap is the maximum number of tokens with this name that can be minted, 0 is
            unlimited
          type: string
        class:
          title: class is the token protocol entity DID (validated)
          type: string
        contract_address:
          title: generated on token initiation
          type: string
        description:
          title: description is any arbitrary description
          type: string
        image:
          title: image is the image url for the token
          type: string
        minter:
          title: address of minter
          type: string
        name:
          title: 'name is the token name, which must be unique (namespace)'
          type: string
        paused:
          title: stop allowance of token minter temporarily
          type: boolean
        retired:
          items:
            properties:
              amount:
                type: string
              id:
                type: string
              jurisdiction:
                type: string
              owner:
                type: string
              reason:
                type: string
            type: object
          title: |-
            tokens that has been retired for this Token with specific name and contract
            address
          type: array
        stopped:
          title: stop allowance of token minter permanently
          type: boolean
        supply:
          title: 'how much has already been minted for this Token type, aka the supply'
          type: string
        type:
          title: type is the token type (eg ixo1155)
          type: string
      type: object
      x-stoplight:
        id: kda9wn7k46gzh
    ixo.token.v1beta1.TokenData:
      properties:
        encrypted:
          type: boolean
        id:
          title: did of entity to map token to
          type: string
        proof:
          type: string
        type:
          type: string
        uri:
          title: media type value should always be "application/json"
          type: string
      type: object
      x-stoplight:
        id: i77blnzhu2ke9
    ixo.token.v1beta1.TokenMetadataProperties:
      properties:
        cap:
          type: string
        class:
          type: string
        collection:
          type: string
        linkedResources:
          items:
            properties:
              encrypted:
                type: boolean
              id:
                title: did of entity to map token to
                type: string
              proof:
                type: string
              type:
                type: string
              uri:
                title: media type value should always be "application/json"
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: uqnmxh7t0tbpp
    ixo.token.v1beta1.TokensCancelled:
      properties:
        amount:
          type: string
        id:
          type: string
        owner:
          type: string
        reason:
          type: string
      type: object
      x-stoplight:
        id: alpf6xm35x8ie
    ixo.token.v1beta1.TokensRetired:
      properties:
        amount:
          type: string
        id:
          type: string
        jurisdiction:
          type: string
        owner:
          type: string
        reason:
          type: string
      type: object
      x-stoplight:
        id: l7o601xlkw9uh
    tendermint.abci.Event:
      description: |-
        Event allows application developers to attach additional information to
        ResponseFinalizeBlock and ResponseCheckTx.
        Later, transactions may be queried using these events.
      properties:
        attributes:
          items:
            description: 'EventAttribute is a single key-value pair, associated with an event.'
            properties:
              index:
                type: boolean
              key:
                type: string
              value:
                type: string
            type: object
          type: array
        type:
          type: string
      type: object
      x-stoplight:
        id: hmb4rte49cx3w
    tendermint.abci.EventAttribute:
      description: 'EventAttribute is a single key-value pair, associated with an event.'
      properties:
        index:
          type: boolean
        key:
          type: string
        value:
          type: string
      type: object
      x-stoplight:
        id: 58dilmjof9a6v
    tendermint.crypto.PublicKey:
      properties:
        ed25519:
          format: byte
          type: string
        secp256k1:
          format: byte
          type: string
      title: PublicKey defines the keys available for use with Validators
      type: object
      x-stoplight:
        id: aj43tfg3c21gi
    tendermint.p2p.DefaultNodeInfo:
      properties:
        channels:
          format: byte
          type: string
        default_node_id:
          type: string
        listen_addr:
          type: string
        moniker:
          type: string
        network:
          type: string
        other:
          properties:
            rpc_address:
              type: string
            tx_index:
              type: string
          type: object
        protocol_version:
          properties:
            app:
              format: uint64
              type: string
            block:
              format: uint64
              type: string
            p2p:
              format: uint64
              type: string
          type: object
        version:
          type: string
      type: object
      x-stoplight:
        id: stxmklm81uiuz
    tendermint.p2p.DefaultNodeInfoOther:
      properties:
        rpc_address:
          type: string
        tx_index:
          type: string
      type: object
      x-stoplight:
        id: 0w3xp2p4bq6la
    tendermint.p2p.ProtocolVersion:
      properties:
        app:
          format: uint64
          type: string
        block:
          format: uint64
          type: string
        p2p:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: bv3fpgte5xugo
    tendermint.types.ABCIParams:
      description: ABCIParams configure functionality specific to the Application Blockchain Interface.
      properties:
        vote_extensions_enable_height:
          description: |-
            vote_extensions_enable_height configures the first height during which
            vote extensions will be enabled. During this specified height, and for all
            subsequent heights, precommit messages that do not contain valid extension data
            will be considered invalid. Prior to this height, vote extensions will not
            be used or accepted by validators on the network.

            Once enabled, vote extensions will be created by the application in ExtendVote,
            passed to the application for validation in VerifyVoteExtension and given
            to the application to use when proposing a block during PrepareProposal.
          format: int64
          type: string
      type: object
      x-stoplight:
        id: zcxw7fvrh9jyq
    tendermint.types.Block:
      properties:
        data:
          properties:
            txs:
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                format: byte
                type: string
              type: array
          title: Data contains the set of transactions included in the block
          type: object
        evidence:
          properties:
            evidence:
              items:
                properties:
                  duplicate_vote_evidence:
                    description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                    properties:
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                      validator_power:
                        format: int64
                        type: string
                      vote_a:
                        description: |-
                          Vote represents a prevote or precommit vote from validators for
                          consensus.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          extension:
                            description: |-
                              Vote extension provided by the application. Only valid for precommit
                              messages.
                            format: byte
                            type: string
                          extension_signature:
                            description: |-
                              Vote extension signature by the validator if they participated in
                              consensus for the associated block.
                              Only valid for precommit messages.
                            format: byte
                            type: string
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            description: |-
                              Vote signature by the validator if they participated in consensus for the
                              associated block.
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                      vote_b:
                        description: |-
                          Vote represents a prevote or precommit vote from validators for
                          consensus.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          extension:
                            description: |-
                              Vote extension provided by the application. Only valid for precommit
                              messages.
                            format: byte
                            type: string
                          extension_signature:
                            description: |-
                              Vote extension signature by the validator if they participated in
                              consensus for the associated block.
                              Only valid for precommit messages.
                            format: byte
                            type: string
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            description: |-
                              Vote signature by the validator if they participated in consensus for the
                              associated block.
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                    type: object
                  light_client_attack_evidence:
                    description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                    properties:
                      byzantine_validators:
                        items:
                          properties:
                            address:
                              format: byte
                              type: string
                            proposer_priority:
                              format: int64
                              type: string
                            pub_key:
                              properties:
                                ed25519:
                                  format: byte
                                  type: string
                                secp256k1:
                                  format: byte
                                  type: string
                              title: PublicKey defines the keys available for use with Validators
                              type: object
                            voting_power:
                              format: int64
                              type: string
                          type: object
                        type: array
                      common_height:
                        format: int64
                        type: string
                      conflicting_block:
                        properties:
                          signed_header:
                            properties:
                              commit:
                                description: Commit contains the evidence that a block was committed by a set of validators.
                                properties:
                                  block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  height:
                                    format: int64
                                    type: string
                                  round:
                                    format: int32
                                    type: integer
                                  signatures:
                                    items:
                                      description: CommitSig is a part of the Vote included in a Commit.
                                      properties:
                                        block_id_flag:
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                          title: BlockIdFlag indicates which BlockID the signature is for
                                          type: string
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              header:
                                description: Header defines the structure of a block header.
                                properties:
                                  app_hash:
                                    format: byte
                                    type: string
                                  chain_id:
                                    type: string
                                  consensus_hash:
                                    format: byte
                                    type: string
                                  data_hash:
                                    format: byte
                                    type: string
                                  evidence_hash:
                                    format: byte
                                    title: consensus info
                                    type: string
                                  height:
                                    format: int64
                                    type: string
                                  last_block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  last_commit_hash:
                                    format: byte
                                    title: hashes of block data
                                    type: string
                                  last_results_hash:
                                    format: byte
                                    type: string
                                  next_validators_hash:
                                    format: byte
                                    type: string
                                  proposer_address:
                                    format: byte
                                    type: string
                                  time:
                                    format: date-time
                                    type: string
                                  validators_hash:
                                    format: byte
                                    title: hashes from the app output from the prev block
                                    type: string
                                  version:
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                    properties:
                                      app:
                                        format: uint64
                                        type: string
                                      block:
                                        format: uint64
                                        type: string
                                    title: basic block info
                                    type: object
                                type: object
                            type: object
                          validator_set:
                            properties:
                              proposer:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: PublicKey defines the keys available for use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              total_voting_power:
                                format: int64
                                type: string
                              validators:
                                items:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                    type: object
                type: object
              type: array
          type: object
        header:
          description: Header defines the structure of a block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
        last_commit:
          description: Commit contains the evidence that a block was committed by a set of validators.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signatures:
              items:
                description: CommitSig is a part of the Vote included in a Commit.
                properties:
                  block_id_flag:
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                    title: BlockIdFlag indicates which BlockID the signature is for
                    type: string
                  signature:
                    format: byte
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_address:
                    format: byte
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: o690701sx2yzp
    tendermint.types.BlockID:
      properties:
        hash:
          format: byte
          type: string
        part_set_header:
          properties:
            hash:
              format: byte
              type: string
            total:
              format: int64
              type: integer
          title: PartsetHeader
          type: object
      title: BlockID
      type: object
      x-stoplight:
        id: ctvvy3pfeh021
    tendermint.types.BlockIDFlag:
      default: BLOCK_ID_FLAG_UNKNOWN
      enum:
        - BLOCK_ID_FLAG_UNKNOWN
        - BLOCK_ID_FLAG_ABSENT
        - BLOCK_ID_FLAG_COMMIT
        - BLOCK_ID_FLAG_NIL
      title: BlockIdFlag indicates which BlockID the signature is for
      type: string
      x-stoplight:
        id: qcqb4ec3q9q1m
    tendermint.types.BlockParams:
      description: BlockParams contains limits on the block size.
      properties:
        max_bytes:
          format: int64
          title: |-
            Max block size, in bytes.
            Note: must be greater than 0
          type: string
        max_gas:
          format: int64
          title: |-
            Max gas per block.
            Note: must be greater or equal to -1
          type: string
      type: object
      x-stoplight:
        id: iledmii9voohn
    tendermint.types.Commit:
      description: Commit contains the evidence that a block was committed by a set of validators.
      properties:
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        height:
          format: int64
          type: string
        round:
          format: int32
          type: integer
        signatures:
          items:
            description: CommitSig is a part of the Vote included in a Commit.
            properties:
              block_id_flag:
                default: BLOCK_ID_FLAG_UNKNOWN
                enum:
                  - BLOCK_ID_FLAG_UNKNOWN
                  - BLOCK_ID_FLAG_ABSENT
                  - BLOCK_ID_FLAG_COMMIT
                  - BLOCK_ID_FLAG_NIL
                title: BlockIdFlag indicates which BlockID the signature is for
                type: string
              signature:
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              validator_address:
                format: byte
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: h0xqz67fhoa3j
    tendermint.types.CommitSig:
      description: CommitSig is a part of the Vote included in a Commit.
      properties:
        block_id_flag:
          default: BLOCK_ID_FLAG_UNKNOWN
          enum:
            - BLOCK_ID_FLAG_UNKNOWN
            - BLOCK_ID_FLAG_ABSENT
            - BLOCK_ID_FLAG_COMMIT
            - BLOCK_ID_FLAG_NIL
          title: BlockIdFlag indicates which BlockID the signature is for
          type: string
        signature:
          format: byte
          type: string
        timestamp:
          format: date-time
          type: string
        validator_address:
          format: byte
          type: string
      type: object
      x-stoplight:
        id: jfjqxms41o6t0
    tendermint.types.ConsensusParams:
      description: |-
        ConsensusParams contains consensus critical parameters that determine the
        validity of blocks.
      properties:
        abci:
          description: ABCIParams configure functionality specific to the Application Blockchain Interface.
          properties:
            vote_extensions_enable_height:
              description: |-
                vote_extensions_enable_height configures the first height during which
                vote extensions will be enabled. During this specified height, and for all
                subsequent heights, precommit messages that do not contain valid extension data
                will be considered invalid. Prior to this height, vote extensions will not
                be used or accepted by validators on the network.

                Once enabled, vote extensions will be created by the application in ExtendVote,
                passed to the application for validation in VerifyVoteExtension and given
                to the application to use when proposing a block during PrepareProposal.
              format: int64
              type: string
          type: object
        block:
          description: BlockParams contains limits on the block size.
          properties:
            max_bytes:
              format: int64
              title: |-
                Max block size, in bytes.
                Note: must be greater than 0
              type: string
            max_gas:
              format: int64
              title: |-
                Max gas per block.
                Note: must be greater or equal to -1
              type: string
          type: object
        evidence:
          description: EvidenceParams determine how we handle evidence of malfeasance.
          properties:
            max_age_duration:
              description: |-
                Max age of evidence, in time.

                It should correspond with an app's "unbonding period" or other similar
                mechanism for handling [Nothing-At-Stake
                attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
              type: string
            max_age_num_blocks:
              description: |-
                Max age of evidence, in blocks.

                The basic formula for calculating this is: MaxAgeDuration / {average block
                time}.
              format: int64
              type: string
            max_bytes:
              format: int64
              title: |-
                This sets the maximum size of total evidence in bytes that can be committed in a single block.
                and should fall comfortably under the max block bytes.
                Default is 1048576 or 1MB
              type: string
          type: object
        validator:
          description: |-
            ValidatorParams restrict the public key types validators can use.
            NOTE: uses ABCI pubkey naming, not Amino names.
          properties:
            pub_key_types:
              items:
                type: string
              type: array
          type: object
        version:
          description: VersionParams contains the ABCI application version.
          properties:
            app:
              format: uint64
              type: string
          type: object
      type: object
      x-stoplight:
        id: 4xs664a64h6ze
    tendermint.types.Data:
      properties:
        txs:
          description: |-
            Txs that will be applied by state @ block.Height+1.
            NOTE: not all txs here are valid.  We're just agreeing on the order first.
            This means that block.AppHash does not include these txs.
          items:
            format: byte
            type: string
          type: array
      title: Data contains the set of transactions included in the block
      type: object
      x-stoplight:
        id: 5xyr3i6tljpcy
    tendermint.types.DuplicateVoteEvidence:
      description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
      properties:
        timestamp:
          format: date-time
          type: string
        total_voting_power:
          format: int64
          type: string
        validator_power:
          format: int64
          type: string
        vote_a:
          description: |-
            Vote represents a prevote or precommit vote from validators for
            consensus.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            extension:
              description: |-
                Vote extension provided by the application. Only valid for precommit
                messages.
              format: byte
              type: string
            extension_signature:
              description: |-
                Vote extension signature by the validator if they participated in
                consensus for the associated block.
                Only valid for precommit messages.
              format: byte
              type: string
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signature:
              description: |-
                Vote signature by the validator if they participated in consensus for the
                associated block.
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            type:
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
              type: string
            validator_address:
              format: byte
              type: string
            validator_index:
              format: int32
              type: integer
          type: object
        vote_b:
          description: |-
            Vote represents a prevote or precommit vote from validators for
            consensus.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            extension:
              description: |-
                Vote extension provided by the application. Only valid for precommit
                messages.
              format: byte
              type: string
            extension_signature:
              description: |-
                Vote extension signature by the validator if they participated in
                consensus for the associated block.
                Only valid for precommit messages.
              format: byte
              type: string
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signature:
              description: |-
                Vote signature by the validator if they participated in consensus for the
                associated block.
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            type:
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
              type: string
            validator_address:
              format: byte
              type: string
            validator_index:
              format: int32
              type: integer
          type: object
      type: object
      x-stoplight:
        id: chdahyc4hc210
    tendermint.types.Evidence:
      properties:
        duplicate_vote_evidence:
          description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
          properties:
            timestamp:
              format: date-time
              type: string
            total_voting_power:
              format: int64
              type: string
            validator_power:
              format: int64
              type: string
            vote_a:
              description: |-
                Vote represents a prevote or precommit vote from validators for
                consensus.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                extension:
                  description: |-
                    Vote extension provided by the application. Only valid for precommit
                    messages.
                  format: byte
                  type: string
                extension_signature:
                  description: |-
                    Vote extension signature by the validator if they participated in
                    consensus for the associated block.
                    Only valid for precommit messages.
                  format: byte
                  type: string
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signature:
                  description: |-
                    Vote signature by the validator if they participated in consensus for the
                    associated block.
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                type:
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  enum:
                    - SIGNED_MSG_TYPE_UNKNOWN
                    - SIGNED_MSG_TYPE_PREVOTE
                    - SIGNED_MSG_TYPE_PRECOMMIT
                    - SIGNED_MSG_TYPE_PROPOSAL
                  type: string
                validator_address:
                  format: byte
                  type: string
                validator_index:
                  format: int32
                  type: integer
              type: object
            vote_b:
              description: |-
                Vote represents a prevote or precommit vote from validators for
                consensus.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                extension:
                  description: |-
                    Vote extension provided by the application. Only valid for precommit
                    messages.
                  format: byte
                  type: string
                extension_signature:
                  description: |-
                    Vote extension signature by the validator if they participated in
                    consensus for the associated block.
                    Only valid for precommit messages.
                  format: byte
                  type: string
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signature:
                  description: |-
                    Vote signature by the validator if they participated in consensus for the
                    associated block.
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                type:
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  enum:
                    - SIGNED_MSG_TYPE_UNKNOWN
                    - SIGNED_MSG_TYPE_PREVOTE
                    - SIGNED_MSG_TYPE_PRECOMMIT
                    - SIGNED_MSG_TYPE_PROPOSAL
                  type: string
                validator_address:
                  format: byte
                  type: string
                validator_index:
                  format: int32
                  type: integer
              type: object
          type: object
        light_client_attack_evidence:
          description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
          properties:
            byzantine_validators:
              items:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              type: array
            common_height:
              format: int64
              type: string
            conflicting_block:
              properties:
                signed_header:
                  properties:
                    commit:
                      description: Commit contains the evidence that a block was committed by a set of validators.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signatures:
                          items:
                            description: CommitSig is a part of the Vote included in a Commit.
                            properties:
                              block_id_flag:
                                default: BLOCK_ID_FLAG_UNKNOWN
                                enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                title: BlockIdFlag indicates which BlockID the signature is for
                                type: string
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              validator_address:
                                format: byte
                                type: string
                            type: object
                          type: array
                      type: object
                    header:
                      description: Header defines the structure of a block header.
                      properties:
                        app_hash:
                          format: byte
                          type: string
                        chain_id:
                          type: string
                        consensus_hash:
                          format: byte
                          type: string
                        data_hash:
                          format: byte
                          type: string
                        evidence_hash:
                          format: byte
                          title: consensus info
                          type: string
                        height:
                          format: int64
                          type: string
                        last_block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        last_commit_hash:
                          format: byte
                          title: hashes of block data
                          type: string
                        last_results_hash:
                          format: byte
                          type: string
                        next_validators_hash:
                          format: byte
                          type: string
                        proposer_address:
                          format: byte
                          type: string
                        time:
                          format: date-time
                          type: string
                        validators_hash:
                          format: byte
                          title: hashes from the app output from the prev block
                          type: string
                        version:
                          description: |-
                            Consensus captures the consensus rules for processing a block in the blockchain,
                            including all blockchain data structures and the rules of the application's
                            state transition machine.
                          properties:
                            app:
                              format: uint64
                              type: string
                            block:
                              format: uint64
                              type: string
                          title: basic block info
                          type: object
                      type: object
                  type: object
                validator_set:
                  properties:
                    proposer:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: PublicKey defines the keys available for use with Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    total_voting_power:
                      format: int64
                      type: string
                    validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: PublicKey defines the keys available for use with Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            timestamp:
              format: date-time
              type: string
            total_voting_power:
              format: int64
              type: string
          type: object
      type: object
      x-stoplight:
        id: 8zxtqym62wyoe
    tendermint.types.EvidenceList:
      properties:
        evidence:
          items:
            properties:
              duplicate_vote_evidence:
                description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
                properties:
                  timestamp:
                    format: date-time
                    type: string
                  total_voting_power:
                    format: int64
                    type: string
                  validator_power:
                    format: int64
                    type: string
                  vote_a:
                    description: |-
                      Vote represents a prevote or precommit vote from validators for
                      consensus.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      extension:
                        description: |-
                          Vote extension provided by the application. Only valid for precommit
                          messages.
                        format: byte
                        type: string
                      extension_signature:
                        description: |-
                          Vote extension signature by the validator if they participated in
                          consensus for the associated block.
                          Only valid for precommit messages.
                        format: byte
                        type: string
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signature:
                        description: |-
                          Vote signature by the validator if they participated in consensus for the
                          associated block.
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      type:
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                        type: string
                      validator_address:
                        format: byte
                        type: string
                      validator_index:
                        format: int32
                        type: integer
                    type: object
                  vote_b:
                    description: |-
                      Vote represents a prevote or precommit vote from validators for
                      consensus.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      extension:
                        description: |-
                          Vote extension provided by the application. Only valid for precommit
                          messages.
                        format: byte
                        type: string
                      extension_signature:
                        description: |-
                          Vote extension signature by the validator if they participated in
                          consensus for the associated block.
                          Only valid for precommit messages.
                        format: byte
                        type: string
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signature:
                        description: |-
                          Vote signature by the validator if they participated in consensus for the
                          associated block.
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      type:
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                        type: string
                      validator_address:
                        format: byte
                        type: string
                      validator_index:
                        format: int32
                        type: integer
                    type: object
                type: object
              light_client_attack_evidence:
                description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
                properties:
                  byzantine_validators:
                    items:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: PublicKey defines the keys available for use with Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                  common_height:
                    format: int64
                    type: string
                  conflicting_block:
                    properties:
                      signed_header:
                        properties:
                          commit:
                            description: Commit contains the evidence that a block was committed by a set of validators.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signatures:
                                items:
                                  description: CommitSig is a part of the Vote included in a Commit.
                                  properties:
                                    block_id_flag:
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      enum:
                                        - BLOCK_ID_FLAG_UNKNOWN
                                        - BLOCK_ID_FLAG_ABSENT
                                        - BLOCK_ID_FLAG_COMMIT
                                        - BLOCK_ID_FLAG_NIL
                                      title: BlockIdFlag indicates which BlockID the signature is for
                                      type: string
                                    signature:
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                  type: object
                                type: array
                            type: object
                          header:
                            description: Header defines the structure of a block header.
                            properties:
                              app_hash:
                                format: byte
                                type: string
                              chain_id:
                                type: string
                              consensus_hash:
                                format: byte
                                type: string
                              data_hash:
                                format: byte
                                type: string
                              evidence_hash:
                                format: byte
                                title: consensus info
                                type: string
                              height:
                                format: int64
                                type: string
                              last_block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              last_commit_hash:
                                format: byte
                                title: hashes of block data
                                type: string
                              last_results_hash:
                                format: byte
                                type: string
                              next_validators_hash:
                                format: byte
                                type: string
                              proposer_address:
                                format: byte
                                type: string
                              time:
                                format: date-time
                                type: string
                              validators_hash:
                                format: byte
                                title: hashes from the app output from the prev block
                                type: string
                              version:
                                description: |-
                                  Consensus captures the consensus rules for processing a block in the blockchain,
                                  including all blockchain data structures and the rules of the application's
                                  state transition machine.
                                properties:
                                  app:
                                    format: uint64
                                    type: string
                                  block:
                                    format: uint64
                                    type: string
                                title: basic block info
                                type: object
                            type: object
                        type: object
                      validator_set:
                        properties:
                          proposer:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          total_voting_power:
                            format: int64
                            type: string
                          validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  timestamp:
                    format: date-time
                    type: string
                  total_voting_power:
                    format: int64
                    type: string
                type: object
            type: object
          type: array
      type: object
      x-stoplight:
        id: 1eyzuiedeuce5
    tendermint.types.EvidenceParams:
      description: EvidenceParams determine how we handle evidence of malfeasance.
      properties:
        max_age_duration:
          description: |-
            Max age of evidence, in time.

            It should correspond with an app's "unbonding period" or other similar
            mechanism for handling [Nothing-At-Stake
            attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
          type: string
        max_age_num_blocks:
          description: |-
            Max age of evidence, in blocks.

            The basic formula for calculating this is: MaxAgeDuration / {average block
            time}.
          format: int64
          type: string
        max_bytes:
          format: int64
          title: |-
            This sets the maximum size of total evidence in bytes that can be committed in a single block.
            and should fall comfortably under the max block bytes.
            Default is 1048576 or 1MB
          type: string
      type: object
      x-stoplight:
        id: umr0sp1b5hptp
    tendermint.types.Header:
      description: Header defines the structure of a block header.
      properties:
        app_hash:
          format: byte
          type: string
        chain_id:
          type: string
        consensus_hash:
          format: byte
          type: string
        data_hash:
          format: byte
          type: string
        evidence_hash:
          format: byte
          title: consensus info
          type: string
        height:
          format: int64
          type: string
        last_block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        last_commit_hash:
          format: byte
          title: hashes of block data
          type: string
        last_results_hash:
          format: byte
          type: string
        next_validators_hash:
          format: byte
          type: string
        proposer_address:
          format: byte
          type: string
        time:
          format: date-time
          type: string
        validators_hash:
          format: byte
          title: hashes from the app output from the prev block
          type: string
        version:
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
          properties:
            app:
              format: uint64
              type: string
            block:
              format: uint64
              type: string
          title: basic block info
          type: object
      type: object
      x-stoplight:
        id: 5zx4cqnn827ns
    tendermint.types.LightBlock:
      properties:
        signed_header:
          properties:
            commit:
              description: Commit contains the evidence that a block was committed by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlockID the signature is for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
          type: object
        validator_set:
          properties:
            proposer:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            total_voting_power:
              format: int64
              type: string
            validators:
              items:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-stoplight:
        id: 96ir4jhfjyjoo
    tendermint.types.LightClientAttackEvidence:
      description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
      properties:
        byzantine_validators:
          items:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
        common_height:
          format: int64
          type: string
        conflicting_block:
          properties:
            signed_header:
              properties:
                commit:
                  description: Commit contains the evidence that a block was committed by a set of validators.
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signatures:
                      items:
                        description: CommitSig is a part of the Vote included in a Commit.
                        properties:
                          block_id_flag:
                            default: BLOCK_ID_FLAG_UNKNOWN
                            enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                            title: BlockIdFlag indicates which BlockID the signature is for
                            type: string
                          signature:
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          validator_address:
                            format: byte
                            type: string
                        type: object
                      type: array
                  type: object
                header:
                  description: Header defines the structure of a block header.
                  properties:
                    app_hash:
                      format: byte
                      type: string
                    chain_id:
                      type: string
                    consensus_hash:
                      format: byte
                      type: string
                    data_hash:
                      format: byte
                      type: string
                    evidence_hash:
                      format: byte
                      title: consensus info
                      type: string
                    height:
                      format: int64
                      type: string
                    last_block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    last_commit_hash:
                      format: byte
                      title: hashes of block data
                      type: string
                    last_results_hash:
                      format: byte
                      type: string
                    next_validators_hash:
                      format: byte
                      type: string
                    proposer_address:
                      format: byte
                      type: string
                    time:
                      format: date-time
                      type: string
                    validators_hash:
                      format: byte
                      title: hashes from the app output from the prev block
                      type: string
                    version:
                      description: |-
                        Consensus captures the consensus rules for processing a block in the blockchain,
                        including all blockchain data structures and the rules of the application's
                        state transition machine.
                      properties:
                        app:
                          format: uint64
                          type: string
                        block:
                          format: uint64
                          type: string
                      title: basic block info
                      type: object
                  type: object
              type: object
            validator_set:
              properties:
                proposer:
                  properties:
                    address:
                      format: byte
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        ed25519:
                          format: byte
                          type: string
                        secp256k1:
                          format: byte
                          type: string
                      title: PublicKey defines the keys available for use with Validators
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                total_voting_power:
                  format: int64
                  type: string
                validators:
                  items:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: PublicKey defines the keys available for use with Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        timestamp:
          format: date-time
          type: string
        total_voting_power:
          format: int64
          type: string
      type: object
      x-stoplight:
        id: 6fkur30oh2it3
    tendermint.types.PartSetHeader:
      properties:
        hash:
          format: byte
          type: string
        total:
          format: int64
          type: integer
      title: PartsetHeader
      type: object
      x-stoplight:
        id: x791ak0cntqft
    tendermint.types.SignedHeader:
      properties:
        commit:
          description: Commit contains the evidence that a block was committed by a set of validators.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signatures:
              items:
                description: CommitSig is a part of the Vote included in a Commit.
                properties:
                  block_id_flag:
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                    title: BlockIdFlag indicates which BlockID the signature is for
                    type: string
                  signature:
                    format: byte
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_address:
                    format: byte
                    type: string
                type: object
              type: array
          type: object
        header:
          description: Header defines the structure of a block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
      type: object
      x-stoplight:
        id: 6yfj3f3namig8
    tendermint.types.SignedMsgType:
      default: SIGNED_MSG_TYPE_UNKNOWN
      description: |-
        SignedMsgType is a type of signed message in the consensus.

         - SIGNED_MSG_TYPE_PREVOTE: Votes
         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
      enum:
        - SIGNED_MSG_TYPE_UNKNOWN
        - SIGNED_MSG_TYPE_PREVOTE
        - SIGNED_MSG_TYPE_PRECOMMIT
        - SIGNED_MSG_TYPE_PROPOSAL
      type: string
      x-stoplight:
        id: nlp9hacycm2so
    tendermint.types.Validator:
      properties:
        address:
          format: byte
          type: string
        proposer_priority:
          format: int64
          type: string
        pub_key:
          properties:
            ed25519:
              format: byte
              type: string
            secp256k1:
              format: byte
              type: string
          title: PublicKey defines the keys available for use with Validators
          type: object
        voting_power:
          format: int64
          type: string
      type: object
      x-stoplight:
        id: 9kqqlqp14ietd
    tendermint.types.ValidatorParams:
      description: |-
        ValidatorParams restrict the public key types validators can use.
        NOTE: uses ABCI pubkey naming, not Amino names.
      properties:
        pub_key_types:
          items:
            type: string
          type: array
      type: object
      x-stoplight:
        id: se2av4k5an2d8
    tendermint.types.ValidatorSet:
      properties:
        proposer:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        total_voting_power:
          format: int64
          type: string
        validators:
          items:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
      x-stoplight:
        id: 6w1gr8u1o4c4m
    tendermint.types.VersionParams:
      description: VersionParams contains the ABCI application version.
      properties:
        app:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: rrlqrwo2aq0go
    tendermint.types.Vote:
      description: |-
        Vote represents a prevote or precommit vote from validators for
        consensus.
      properties:
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        extension:
          description: |-
            Vote extension provided by the application. Only valid for precommit
            messages.
          format: byte
          type: string
        extension_signature:
          description: |-
            Vote extension signature by the validator if they participated in
            consensus for the associated block.
            Only valid for precommit messages.
          format: byte
          type: string
        height:
          format: int64
          type: string
        round:
          format: int32
          type: integer
        signature:
          description: |-
            Vote signature by the validator if they participated in consensus for the
            associated block.
          format: byte
          type: string
        timestamp:
          format: date-time
          type: string
        type:
          default: SIGNED_MSG_TYPE_UNKNOWN
          description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          enum:
            - SIGNED_MSG_TYPE_UNKNOWN
            - SIGNED_MSG_TYPE_PREVOTE
            - SIGNED_MSG_TYPE_PRECOMMIT
            - SIGNED_MSG_TYPE_PROPOSAL
          type: string
        validator_address:
          format: byte
          type: string
        validator_index:
          format: int32
          type: integer
      type: object
      x-stoplight:
        id: nx3s6ak7dewj7
    tendermint.version.Consensus:
      description: |-
        Consensus captures the consensus rules for processing a block in the blockchain,
        including all blockchain data structures and the rules of the application's
        state transition machine.
      properties:
        app:
          format: uint64
          type: string
        block:
          format: uint64
          type: string
      type: object
      x-stoplight:
        id: yd5xh0b06s3ct
