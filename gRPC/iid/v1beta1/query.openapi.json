{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "e7kh8345nknsb"
  },
  "info": {
    "title": "ixo/iid/v1beta1/query.proto",
    "version": "version not set"
  },
  "servers": [],
  "paths": {
    "/ixo/did/dids": {
      "get": {
        "parameters": [
          {
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "name": "pagination.key",
            "required": false,
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "name": "pagination.offset",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "name": "pagination.limit",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "name": "pagination.countTotal",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "name": "pagination.reverse",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryIidDocumentsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "IidDocuments",
        "summary": "IidDocuments queries all iid documents that match the given status.",
        "x-stoplight": {
          "id": "o3ddeylyijitd"
        }
      }
    },
    "/ixo/did/dids/{id}": {
      "get": {
        "parameters": [
          {
            "description": "did id of iid document querying",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryIidDocumentResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "IidDocument",
        "summary": "IidDocument queries a iid documents with an id.",
        "x-stoplight": {
          "id": "ttanaxvkegnut"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccordedRight": {
        "properties": {
          "id": {
            "type": "string"
          },
          "mechanism": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "q8v5rhmkwikqq"
        }
      },
      "Any": {
        "additionalProperties": {},
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "zwfy3kjkukdd6"
        }
      },
      "Context": {
        "properties": {
          "key": {
            "type": "string"
          },
          "val": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "81nor45gc5q32"
        }
      },
      "IidMetadata": {
        "properties": {
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "deactivated": {
            "type": "boolean"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          },
          "versionId": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "u6h1d3chyz992"
        }
      },
      "LinkedClaim": {
        "properties": {
          "description": {
            "type": "string"
          },
          "encrypted": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "proof": {
            "type": "string"
          },
          "right": {
            "type": "string"
          },
          "serviceEndpoint": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "f7chgpnduyvvj"
        }
      },
      "LinkedEntity": {
        "properties": {
          "id": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "5cv171plaidqr"
        }
      },
      "LinkedResource": {
        "properties": {
          "description": {
            "type": "string"
          },
          "encrypted": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "mediaType": {
            "type": "string"
          },
          "proof": {
            "type": "string"
          },
          "right": {
            "type": "string"
          },
          "serviceEndpoint": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "io8mkf5fnmkan"
        }
      },
      "PageRequest": {
        "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
        "properties": {
          "countTotal": {
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "type": "boolean"
          },
          "key": {
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "format": "byte",
            "type": "string"
          },
          "limit": {
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "format": "uint64",
            "type": "string"
          },
          "offset": {
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "format": "uint64",
            "type": "string"
          },
          "reverse": {
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "type": "boolean"
          }
        },
        "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:",
        "type": "object",
        "x-stoplight": {
          "id": "m1abtcahecfpa"
        }
      },
      "PageResponse": {
        "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
        "properties": {
          "nextKey": {
            "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.",
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "uint64",
            "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "f5uqsticyyg07"
        }
      },
      "QueryIidDocumentResponse": {
        "properties": {
          "iidDocument": {
            "$ref": "#/components/schemas/v1beta1.IidDocument"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "4mpw90nb9obux"
        }
      },
      "QueryIidDocumentsResponse": {
        "properties": {
          "iidDocuments": {
            "items": {
              "$ref": "#/components/schemas/v1beta1.IidDocument",
              "type": "object"
            },
            "type": "array"
          },
          "pagination": {
            "$ref": "#/components/schemas/PageResponse",
            "description": "pagination defines the pagination in the response."
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "wxhdsqbzelbk3"
        }
      },
      "Service": {
        "properties": {
          "id": {
            "type": "string"
          },
          "serviceEndpoint": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "ccwp3j5szpvjb"
        }
      },
      "Status": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/Any",
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "84yrzat8v2cgq"
        }
      },
      "VerificationMethod": {
        "properties": {
          "blockchainAccountID": {
            "type": "string"
          },
          "controller": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "publicKeyBase58": {
            "type": "string"
          },
          "publicKeyHex": {
            "type": "string"
          },
          "publicKeyMultibase": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "r754l7z5cf3lz"
        }
      },
      "v1beta1.IidDocument": {
        "properties": {
          "accordedRight": {
            "items": {
              "$ref": "#/components/schemas/AccordedRight",
              "type": "object"
            },
            "type": "array"
          },
          "alsoKnownAs": {
            "type": "string"
          },
          "assertionMethod": {
            "items": {
              "type": "string"
            },
            "title": "Used to specify how the DID subject is expected to express claims,\nsuch as for the purposes of issuing a Verifiable Credential.\ncfr. https://www.w3.org/TR/did-core/#assertion",
            "type": "array"
          },
          "authentication": {
            "items": {
              "type": "string"
            },
            "title": "NOTE: below this line there are the relationships\nAuthentication represents public key associated with the did document.\ncfr. https://www.w3.org/TR/did-core/#authentication",
            "type": "array"
          },
          "capabilityDelegation": {
            "items": {
              "type": "string"
            },
            "title": "Used to specify a mechanism that might be used by the DID subject\nto delegate a cryptographic capability to another party.\nhttps://www.w3.org/TR/did-core/#capability-delegation",
            "type": "array"
          },
          "capabilityInvocation": {
            "items": {
              "type": "string"
            },
            "title": "Used to specify a verification method that might be used by the DID subject\nto invoke a cryptographic capability, such as the authorization\nto update the DID Document.\nhttps://www.w3.org/TR/did-core/#capability-invocation",
            "type": "array"
          },
          "context": {
            "description": "@context is spec for did document.",
            "items": {
              "$ref": "#/components/schemas/Context",
              "type": "object"
            },
            "type": "array"
          },
          "controller": {
            "items": {
              "type": "string"
            },
            "title": "A DID controller is an entity that is authorized to make changes to a DID\ndocument. cfr. https://www.w3.org/TR/did-core/#did-controller",
            "type": "array"
          },
          "id": {
            "description": "id represents the id for the did document.",
            "type": "string"
          },
          "keyAgreement": {
            "items": {
              "type": "string"
            },
            "title": "used to specify how an entity can generate encryption material\nin order to transmit confidential information intended for the DID subject.\nhttps://www.w3.org/TR/did-core/#key-agreement",
            "type": "array"
          },
          "linkedClaim": {
            "items": {
              "$ref": "#/components/schemas/LinkedClaim",
              "type": "object"
            },
            "type": "array"
          },
          "linkedEntity": {
            "items": {
              "$ref": "#/components/schemas/LinkedEntity",
              "type": "object"
            },
            "type": "array"
          },
          "linkedResource": {
            "items": {
              "$ref": "#/components/schemas/LinkedResource",
              "type": "object"
            },
            "type": "array"
          },
          "metadata": {
            "$ref": "#/components/schemas/IidMetadata",
            "title": "Metadata concerning the IidDocument such as versionId, created, updated and\ndeactivated"
          },
          "service": {
            "items": {
              "$ref": "#/components/schemas/Service",
              "type": "object"
            },
            "title": "Services are used in DID documents to express ways of communicating\nwith the DID subject or associated entities.\nhttps://www.w3.org/TR/did-core/#services",
            "type": "array"
          },
          "verificationMethod": {
            "items": {
              "$ref": "#/components/schemas/VerificationMethod",
              "type": "object"
            },
            "title": "A DID document can express verification methods,\nsuch as cryptographic public keys, which can be used\nto authenticate or authorize interactions with the DID subject or\nassociated parties. https://www.w3.org/TR/did-core/#verification-methods",
            "type": "array"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "46jrxfgxyojcf"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Query"
    }
  ]
}