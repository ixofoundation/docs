{
  "swagger": "2.0",
  "x-stoplight": {
    "id": "b6nul4yz9drma"
  },
  "info": {
    "title": "ixo/iid/v1beta1/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ixo/did/dids": {
      "get": {
        "summary": "IidDocuments queries all iid documents that match the given status.",
        "operationId": "IidDocuments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryIidDocumentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "11sd2e007v6pg"
        }
      }
    },
    "/ixo/did/dids/{id}": {
      "get": {
        "summary": "IidDocument queries a iid documents with an id.",
        "operationId": "IidDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryIidDocumentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "did id of iid document querying",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "phwllamd9x1pc"
        }
      }
    }
  },
  "definitions": {
    "AccordedRight": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mechanism": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "ubjkz1rtqqrye"
      }
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {},
      "x-stoplight": {
        "id": "3itbyy8t0oo8a"
      }
    },
    "Context": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "val": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "osuqaqdq7k9si"
      }
    },
    "IidMetadata": {
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "deactivated": {
          "type": "boolean"
        }
      },
      "x-stoplight": {
        "id": "1qcsmn5c25fvx"
      }
    },
    "LinkedClaim": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "serviceEndpoint": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        },
        "encrypted": {
          "type": "string"
        },
        "right": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "xl31ie2cmu69p"
      }
    },
    "LinkedEntity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "dcdn7gcvcbbao"
      }
    },
    "LinkedResource": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "serviceEndpoint": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        },
        "encrypted": {
          "type": "string"
        },
        "right": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "viibs7rrstmik"
      }
    },
    "PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:",
      "x-stoplight": {
        "id": "9nyjf0vuxmk7b"
      }
    },
    "PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
      "x-stoplight": {
        "id": "y6g8mkd7p9cgn"
      }
    },
    "QueryIidDocumentResponse": {
      "type": "object",
      "properties": {
        "iidDocument": {
          "$ref": "#/definitions/v1beta1.IidDocument"
        }
      },
      "x-stoplight": {
        "id": "6n5wbrdw9lvv4"
      }
    },
    "QueryIidDocumentsResponse": {
      "type": "object",
      "properties": {
        "iidDocuments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1.IidDocument"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "x-stoplight": {
        "id": "iik8w0ewfv9ns"
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "serviceEndpoint": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "oifvoe6qtrqxx"
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      },
      "x-stoplight": {
        "id": "j81zp02twxy4l"
      }
    },
    "VerificationMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        },
        "blockchainAccountID": {
          "type": "string"
        },
        "publicKeyHex": {
          "type": "string"
        },
        "publicKeyMultibase": {
          "type": "string"
        },
        "publicKeyBase58": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "4k0c481nnmgp3"
      }
    },
    "v1beta1.IidDocument": {
      "type": "object",
      "properties": {
        "context": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Context"
          },
          "description": "@context is spec for did document."
        },
        "id": {
          "type": "string",
          "description": "id represents the id for the did document."
        },
        "controller": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A DID controller is an entity that is authorized to make changes to a DID\ndocument. cfr. https://www.w3.org/TR/did-core/#did-controller"
        },
        "verificationMethod": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VerificationMethod"
          },
          "title": "A DID document can express verification methods,\nsuch as cryptographic public keys, which can be used\nto authenticate or authorize interactions with the DID subject or\nassociated parties. https://www.w3.org/TR/did-core/#verification-methods"
        },
        "service": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Service"
          },
          "title": "Services are used in DID documents to express ways of communicating\nwith the DID subject or associated entities.\nhttps://www.w3.org/TR/did-core/#services"
        },
        "authentication": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "NOTE: below this line there are the relationships\nAuthentication represents public key associated with the did document.\ncfr. https://www.w3.org/TR/did-core/#authentication"
        },
        "assertionMethod": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Used to specify how the DID subject is expected to express claims,\nsuch as for the purposes of issuing a Verifiable Credential.\ncfr. https://www.w3.org/TR/did-core/#assertion"
        },
        "keyAgreement": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "used to specify how an entity can generate encryption material\nin order to transmit confidential information intended for the DID subject.\nhttps://www.w3.org/TR/did-core/#key-agreement"
        },
        "capabilityInvocation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Used to specify a verification method that might be used by the DID subject\nto invoke a cryptographic capability, such as the authorization\nto update the DID Document.\nhttps://www.w3.org/TR/did-core/#capability-invocation"
        },
        "capabilityDelegation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Used to specify a mechanism that might be used by the DID subject\nto delegate a cryptographic capability to another party.\nhttps://www.w3.org/TR/did-core/#capability-delegation"
        },
        "linkedResource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LinkedResource"
          }
        },
        "linkedClaim": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LinkedClaim"
          }
        },
        "accordedRight": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AccordedRight"
          }
        },
        "linkedEntity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LinkedEntity"
          }
        },
        "alsoKnownAs": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/IidMetadata",
          "title": "Metadata concerning the IidDocument such as versionId, created, updated and\ndeactivated"
        }
      },
      "x-stoplight": {
        "id": "e4aiti6j0hju5"
      }
    }
  }
}