{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "ux3tfprsqs6cx"
  },
  "info": {
    "title": "ixo/token/v1beta1/query.proto",
    "version": "version not set"
  },
  "servers": [],
  "paths": {
    "/ixo/token/metadata/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTokenMetadataResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "TokenMetadata",
        "x-stoplight": {
          "id": "6qlsbwwtn5exi"
        }
      }
    },
    "/ixo/token/minter/{minter}": {
      "get": {
        "parameters": [
          {
            "description": "minter address to get list for",
            "in": "path",
            "name": "minter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "name": "pagination.key",
            "required": false,
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "name": "pagination.offset",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "name": "pagination.limit",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "name": "pagination.countTotal",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "name": "pagination.reverse",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTokenListResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "TokenList",
        "x-stoplight": {
          "id": "kfuarw4kibgzx"
        }
      }
    },
    "/ixo/token/minter/{minter}/{contractAddress}": {
      "get": {
        "parameters": [
          {
            "description": "minter address to get Token Doc for",
            "in": "path",
            "name": "minter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "contractAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTokenDocResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "TokenDoc",
        "x-stoplight": {
          "id": "4of0npn7md6cr"
        }
      }
    },
    "/ixo/token/params": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParamsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "Query"
        ],
        "operationId": "Params",
        "x-stoplight": {
          "id": "o3haw4r3zsfb0"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Any": {
        "additionalProperties": {},
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "a3cc4x838dt4t"
        }
      },
      "PageRequest": {
        "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
        "properties": {
          "countTotal": {
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "type": "boolean"
          },
          "key": {
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "format": "byte",
            "type": "string"
          },
          "limit": {
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "format": "uint64",
            "type": "string"
          },
          "offset": {
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "format": "uint64",
            "type": "string"
          },
          "reverse": {
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "type": "boolean"
          }
        },
        "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:",
        "type": "object",
        "x-stoplight": {
          "id": "oi3tsaeg7klrt"
        }
      },
      "PageResponse": {
        "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
        "properties": {
          "nextKey": {
            "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.",
            "format": "byte",
            "type": "string"
          },
          "total": {
            "format": "uint64",
            "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "94pzjxkadmbiz"
        }
      },
      "QueryParamsResponse": {
        "properties": {
          "params": {
            "$ref": "#/components/schemas/v1beta1.Params",
            "description": "params holds all the parameters of this module."
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "zxpxkwjdyhtfc"
        }
      },
      "QueryTokenDocResponse": {
        "properties": {
          "tokenDoc": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "yrhaqlq6wp3a6"
        }
      },
      "QueryTokenListResponse": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PageResponse"
          },
          "tokenDocs": {
            "items": {
              "$ref": "#/components/schemas/Token",
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "cej6l7z6bowdw"
        }
      },
      "QueryTokenMetadataResponse": {
        "properties": {
          "decimals": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/TokenMetadataProperties"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "hskgmukcxx0bj"
        }
      },
      "Status": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/Any",
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "ccfnv5ixe2fv9"
        }
      },
      "Token": {
        "properties": {
          "cancelled": {
            "items": {
              "$ref": "#/components/schemas/TokensCancelled",
              "type": "object"
            },
            "title": "tokens that has been cancelled for this Token with specific name and\ncontract address",
            "type": "array"
          },
          "cap": {
            "title": "cap is the maximum number of tokens with this name that can be minted, 0 is\nunlimited",
            "type": "string"
          },
          "class": {
            "title": "class is the token protocol entity DID (validated)",
            "type": "string"
          },
          "contractAddress": {
            "title": "generated on token initiation",
            "type": "string"
          },
          "description": {
            "title": "description is any arbitrary description",
            "type": "string"
          },
          "image": {
            "title": "image is the image url for the token",
            "type": "string"
          },
          "minter": {
            "title": "address of minter",
            "type": "string"
          },
          "name": {
            "title": "name is the token name, which must be unique (namespace)",
            "type": "string"
          },
          "paused": {
            "title": "stop allowance of token minter temporarily",
            "type": "boolean"
          },
          "retired": {
            "items": {
              "$ref": "#/components/schemas/TokensRetired",
              "type": "object"
            },
            "title": "tokens that has been retired for this Token with specific name and contract\naddress",
            "type": "array"
          },
          "stopped": {
            "title": "stop allowance of token minter permanently",
            "type": "boolean"
          },
          "supply": {
            "title": "how much has already been minted for this Token type, aka the supply",
            "type": "string"
          },
          "type": {
            "title": "type is the token type (eg ixo1155)",
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "nklfj5vwmbc7a"
        }
      },
      "TokenData": {
        "properties": {
          "encrypted": {
            "type": "boolean"
          },
          "id": {
            "title": "did of entity to map token to",
            "type": "string"
          },
          "proof": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "description": "credential link ***.ipfs",
            "title": "media type value should always be \"application/json\"",
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "4yyzwziys2cca"
        }
      },
      "TokenMetadataProperties": {
        "properties": {
          "cap": {
            "type": "string"
          },
          "class": {
            "type": "string"
          },
          "collection": {
            "type": "string"
          },
          "linkedResources": {
            "items": {
              "$ref": "#/components/schemas/TokenData",
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "sie1qgpmb8r12"
        }
      },
      "TokensCancelled": {
        "properties": {
          "amount": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "y05aolizly52a"
        }
      },
      "TokensRetired": {
        "properties": {
          "amount": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jurisdiction": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "5z2z1lj7jon27"
        }
      },
      "v1beta1.Params": {
        "properties": {
          "ixo1155ContractCode": {
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object",
        "x-stoplight": {
          "id": "x9r211sm04zup"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Query"
    }
  ]
}