{
  "swagger": "2.0",
  "x-stoplight": {
    "id": "4eted69drogy8"
  },
  "info": {
    "title": "ixo/token/v1beta1/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ixo/token/metadata/{id}": {
      "get": {
        "operationId": "TokenMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryTokenMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "9s29pbpk1tqj7"
        }
      }
    },
    "/ixo/token/minter/{minter}": {
      "get": {
        "operationId": "TokenList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryTokenListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "minter",
            "description": "minter address to get list for",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "aw18dzlcrbfej"
        }
      }
    },
    "/ixo/token/minter/{minter}/{contractAddress}": {
      "get": {
        "operationId": "TokenDoc",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryTokenDocResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "minter",
            "description": "minter address to get Token Doc for",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "mtanhwympdbkk"
        }
      }
    },
    "/ixo/token/params": {
      "get": {
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Query"
        ],
        "x-stoplight": {
          "id": "6g34dfi8l8q8u"
        }
      }
    }
  },
  "definitions": {
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {},
      "x-stoplight": {
        "id": "umpbsf5dv7l1l"
      }
    },
    "PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:",
      "x-stoplight": {
        "id": "jgii0ed6cugyl"
      }
    },
    "PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
      "x-stoplight": {
        "id": "d087beesqzfwd"
      }
    },
    "QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/v1beta1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "x-stoplight": {
        "id": "89lz8050tioit"
      }
    },
    "QueryTokenDocResponse": {
      "type": "object",
      "properties": {
        "tokenDoc": {
          "$ref": "#/definitions/Token"
        }
      },
      "x-stoplight": {
        "id": "9iuhq57hflj64"
      }
    },
    "QueryTokenListResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/PageResponse"
        },
        "tokenDocs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Token"
          }
        }
      },
      "x-stoplight": {
        "id": "zz36p73o8u73w"
      }
    },
    "QueryTokenMetadataResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "decimals": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/TokenMetadataProperties"
        }
      },
      "x-stoplight": {
        "id": "rh578756t8vgd"
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      },
      "x-stoplight": {
        "id": "93klncr65jzwd"
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "minter": {
          "type": "string",
          "title": "address of minter"
        },
        "contractAddress": {
          "type": "string",
          "title": "generated on token initiation"
        },
        "class": {
          "type": "string",
          "title": "class is the token protocol entity DID (validated)"
        },
        "name": {
          "type": "string",
          "title": "name is the token name, which must be unique (namespace)"
        },
        "description": {
          "type": "string",
          "title": "description is any arbitrary description"
        },
        "image": {
          "type": "string",
          "title": "image is the image url for the token"
        },
        "type": {
          "type": "string",
          "title": "type is the token type (eg ixo1155)"
        },
        "cap": {
          "type": "string",
          "title": "cap is the maximum number of tokens with this name that can be minted, 0 is\nunlimited"
        },
        "supply": {
          "type": "string",
          "title": "how much has already been minted for this Token type, aka the supply"
        },
        "paused": {
          "type": "boolean",
          "title": "stop allowance of token minter temporarily"
        },
        "stopped": {
          "type": "boolean",
          "title": "stop allowance of token minter permanently"
        },
        "retired": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TokensRetired"
          },
          "title": "tokens that has been retired for this Token with specific name and contract\naddress"
        },
        "cancelled": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TokensCancelled"
          },
          "title": "tokens that has been cancelled for this Token with specific name and\ncontract address"
        }
      },
      "x-stoplight": {
        "id": "t8f5lbhzo3yn3"
      }
    },
    "TokenData": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "credential link ***.ipfs",
          "title": "media type value should always be \"application/json\""
        },
        "encrypted": {
          "type": "boolean"
        },
        "proof": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "did of entity to map token to"
        }
      },
      "x-stoplight": {
        "id": "5zvxl5uwh78pq"
      }
    },
    "TokenMetadataProperties": {
      "type": "object",
      "properties": {
        "class": {
          "type": "string"
        },
        "collection": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "linkedResources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TokenData"
          }
        }
      },
      "x-stoplight": {
        "id": "qg565ryvm3597"
      }
    },
    "TokensCancelled": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "dl20l71ejuc4v"
      }
    },
    "TokensRetired": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "jurisdiction": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      },
      "x-stoplight": {
        "id": "8dilje9h6iv41"
      }
    },
    "v1beta1.Params": {
      "type": "object",
      "properties": {
        "ixo1155ContractCode": {
          "type": "string",
          "format": "uint64"
        }
      },
      "x-stoplight": {
        "id": "kevy32cgsrjp9"
      }
    }
  }
}